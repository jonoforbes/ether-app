/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './tasks-form-group.container';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/debug_context';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../tasks.sandbox';
import * as import10 from '@angular/forms/src/form_builder';
import * as import11 from 'ngx-popover/PopoverContent';
import * as import12 from '@angular/flex-layout/flexbox/api/layout';
import * as import13 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import14 from '@angular/forms/src/directives/control_container';
import * as import15 from '@angular/forms/src/directives/ng_control_status';
import * as import16 from '@angular/flex-layout/flexbox/api/layout-align';
import * as import17 from '@angular/flex-layout/flexbox/api/flex';
import * as import18 from '@angular/material/input/input-container';
import * as import19 from '@angular/forms/src/directives/default_value_accessor';
import * as import20 from '@angular/forms/src/directives/control_value_accessor';
import * as import21 from '@angular/forms/src/directives/reactive_directives/form_control_name';
import * as import22 from '@angular/forms/src/directives/ng_control';
import * as import23 from 'ng2-date-picker/dp-calendar/calendar.service';
import * as import24 from 'ng2-date-picker/dp-day-picker/day-picker.service';
import * as import25 from 'ng2-date-picker/dp-day-picker/dp-day-picker.component';
import * as import26 from '@angular/forms/src/validators';
import * as import27 from '@angular/material/core/compatibility/compatibility';
import * as import28 from '@angular/material/button/button';
import * as import29 from '@angular/material/icon/icon';
import * as import30 from 'ngx-popover/Popover';
import * as import31 from '@angular/material/checkbox/checkbox';
import * as import32 from '@angular/core/src/linker/query_list';
import * as import33 from '../../../../node_modules/ngx-popover/PopoverContent.ngfactory';
import * as import34 from '../../../../node_modules/@angular/flex-layout/flexbox/api/layout.ngfactory';
import * as import35 from '../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import36 from '../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import37 from '../../../../node_modules/@angular/flex-layout/flexbox/api/layout-align.ngfactory';
import * as import38 from '../../../../node_modules/@angular/flex-layout/flexbox/api/flex.ngfactory';
import * as import39 from '../../../../node_modules/@angular/material/input/input-container.ngfactory';
import * as import40 from '../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import41 from '../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_name.ngfactory';
import * as import42 from '../../../../node_modules/ng2-date-picker/dp-day-picker/dp-day-picker.component.ngfactory';
import * as import43 from '../../../../node_modules/@angular/material/core/compatibility/compatibility.ngfactory';
import * as import44 from '../../../../node_modules/@angular/material/button/button.ngfactory';
import * as import45 from '../../../../node_modules/@angular/material/icon/icon.ngfactory';
import * as import46 from '@angular/core/src/linker/view_container';
import * as import47 from '../../../../node_modules/ngx-popover/Popover.ngfactory';
import * as import48 from '../../../../node_modules/@angular/material/checkbox/checkbox.ngfactory';
import * as import49 from '@angular/core/src/linker/element_ref';
import * as import50 from '@angular/flex-layout/media-query/media-monitor';
import * as import51 from '@angular/flex-layout/flexbox/api/layout-wrap';
import * as import52 from 'ng2-date-picker/common/services/utils/utils.service';
import * as import53 from 'ng2-date-picker/common/services/dom-appender/dom-appender.service';
import * as import54 from '@angular/material/icon/icon-registry';
import * as import55 from '@angular/core/src/linker/component_factory_resolver';
export class Wrapper_TasksFormGroupContainer {
  /*private*/ _eventHandler:Function;
  context:import0.TasksFormGroupContainer;
  /*private*/ _changed:boolean;
  subscription0:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.TasksFormGroupContainer(p0,p1);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onSave.subscribe(_eventHandler.bind(view,'onSave'))); }
  }
}
const nodeDebugInfos_TasksFormGroupContainer_Host0:import2.StaticNodeDebugInfo[] = [new import2.StaticNodeDebugInfo([import0.TasksFormGroupContainer],import0.TasksFormGroupContainer,{})];
var renderType_TasksFormGroupContainer_Host:import3.RenderComponentType = import4.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_TasksFormGroupContainer_Host0 extends import1.DebugAppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.TasksFormGroupContainer>;
  _TasksFormGroupContainer_0_3:Wrapper_TasksFormGroupContainer;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TasksFormGroupContainer_Host0,renderType_TasksFormGroupContainer_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_TasksFormGroupContainer_Host0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'tasks-form-group',import4.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_TasksFormGroupContainer0(this.viewUtils,this,0,this._el_0);
    this._TasksFormGroupContainer_0_3 = new Wrapper_TasksFormGroupContainer(this.injectorGet(import9.TasksSandbox,this.parentIndex),this.injectorGet(import10.FormBuilder,this.parentIndex));
    this.compView_0.create(this._TasksFormGroupContainer_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._TasksFormGroupContainer_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TasksFormGroupContainer) && (0 === requestNodeIndex))) { return this._TasksFormGroupContainer_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._TasksFormGroupContainer_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._TasksFormGroupContainer_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TasksFormGroupContainerNgFactory:import8.ComponentFactory<import0.TasksFormGroupContainer> = new import8.ComponentFactory<import0.TasksFormGroupContainer>('tasks-form-group',View_TasksFormGroupContainer_Host0,import0.TasksFormGroupContainer);
const styles_TasksFormGroupContainer:any[] = ([] as any[]);
const nodeDebugInfos_TasksFormGroupContainer0:import2.StaticNodeDebugInfo[] = [
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([import11.PopoverContent],import11.PopoverContent,{myPopover: import11.PopoverContent}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import12.LayoutDirective,
    import13.FormGroupDirective,
    import14.ControlContainer,
    import15.NgControlStatusGroup
  ]
  ,(null as any),{formContainer: (null as any)}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import16.LayoutAlignDirective,
    import17.FlexDirective
  ]
  ,(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([import18.MdInputContainer],import18.MdInputContainer,{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import19.DefaultValueAccessor,
    import20.NG_VALUE_ACCESSOR,
    import21.FormControlName,
    import22.NgControl,
    import18.MdInputDirective,
    import15.NgControlStatus
  ]
  ,(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import16.LayoutAlignDirective,
    import17.FlexDirective
  ]
  ,(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import23.CalendarService,
    import24.DayPickerService,
    import25.DpDayPickerComponent,
    import26.NG_VALIDATORS,
    import20.NG_VALUE_ACCESSOR,
    import21.FormControlName,
    import22.NgControl,
    import15.NgControlStatus
  ]
  ,import25.DpDayPickerComponent,{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import27.MdPrefixRejector,
    import28.MdButton,
    import28.MdButtonCssMatStyler
  ]
  ,import28.MdButton,{}),
  new import2.StaticNodeDebugInfo([
    import27.MdPrefixRejector,
    import29.MdIcon
  ]
  ,import29.MdIcon,{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import27.MdPrefixRejector,
    import28.MdButton,
    import28.MdButtonCssMatStyler
  ]
  ,import28.MdButton,{}),
  new import2.StaticNodeDebugInfo([
    import27.MdPrefixRejector,
    import29.MdIcon
  ]
  ,import29.MdIcon,{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import27.MdPrefixRejector,
    import28.MdButton,
    import28.MdButtonCssMatStyler,
    import30.Popover
  ]
  ,import28.MdButton,{}),
  new import2.StaticNodeDebugInfo([
    import27.MdPrefixRejector,
    import31.MdCheckbox,
    import20.NG_VALUE_ACCESSOR
  ]
  ,import31.MdCheckbox,{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_TasksFormGroupContainer:import3.RenderComponentType = import4.createRenderComponentType('/Users/jonoforbes/Developer/Ether/winecellar/src/tasks/containers/tasks-form-group/tasks-form-group.container.ts class TasksFormGroupContainer - inline template',0,import5.ViewEncapsulation.None,styles_TasksFormGroupContainer,{});
export class View_TasksFormGroupContainer0 extends import1.DebugAppView<import0.TasksFormGroupContainer> {
  _viewQuery_myPopover_0:import32.QueryList<any>;
  _text_0:any;
  _el_1:any;
  compView_1:import1.AppView<import11.PopoverContent>;
  _PopoverContent_1_3:import33.Wrapper_PopoverContent;
  _text_2:any;
  _el_3:any;
  _LayoutDirective_3_3:import34.Wrapper_LayoutDirective;
  _FormGroupDirective_3_4:import35.Wrapper_FormGroupDirective;
  _ControlContainer_3_5:any;
  _NgControlStatusGroup_3_6:import36.Wrapper_NgControlStatusGroup;
  _text_4:any;
  _el_5:any;
  _LayoutAlignDirective_5_3:import37.Wrapper_LayoutAlignDirective;
  _FlexDirective_5_4:import38.Wrapper_FlexDirective;
  _text_6:any;
  _el_7:any;
  compView_7:import1.AppView<import18.MdInputContainer>;
  _MdInputContainer_7_3:import39.Wrapper_MdInputContainer;
  _query_MdInputDirective_7_0:import32.QueryList<any>;
  _query_MdPlaceholder_7_1:import32.QueryList<any>;
  _query_MdHint_7_2:import32.QueryList<any>;
  _text_8:any;
  _el_9:any;
  _DefaultValueAccessor_9_3:import40.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_9_4:any[];
  _FormControlName_9_5:import41.Wrapper_FormControlName;
  _NgControl_9_6:any;
  _MdInputDirective_9_7:import39.Wrapper_MdInputDirective;
  _NgControlStatus_9_8:import36.Wrapper_NgControlStatus;
  _text_10:any;
  _text_11:any;
  _text_12:any;
  _el_13:any;
  _LayoutAlignDirective_13_3:import37.Wrapper_LayoutAlignDirective;
  _FlexDirective_13_4:import38.Wrapper_FlexDirective;
  _text_14:any;
  _el_15:any;
  compView_15:import1.AppView<import25.DpDayPickerComponent>;
  _CalendarService_15_3:import23.CalendarService;
  _DayPickerService_15_4:import24.DayPickerService;
  _DpDayPickerComponent_15_5:import42.Wrapper_DpDayPickerComponent;
  _NG_VALIDATORS_15_6:any[];
  _NG_VALUE_ACCESSOR_15_7:any[];
  _FormControlName_15_8:import41.Wrapper_FormControlName;
  _NgControl_15_9:any;
  _NgControlStatus_15_10:import36.Wrapper_NgControlStatus;
  _text_16:any;
  _el_17:any;
  compView_17:import1.AppView<import28.MdButton>;
  _MdPrefixRejector_17_3:import43.Wrapper_MdPrefixRejector;
  _MdButton_17_4:import44.Wrapper_MdButton;
  _MdButtonCssMatStyler_17_5:import44.Wrapper_MdButtonCssMatStyler;
  _el_18:any;
  compView_18:import1.AppView<import29.MdIcon>;
  _MdPrefixRejector_18_3:import43.Wrapper_MdPrefixRejector;
  _MdIcon_18_4:import45.Wrapper_MdIcon;
  _text_19:any;
  _text_20:any;
  _el_21:any;
  compView_21:import1.AppView<import28.MdButton>;
  _MdPrefixRejector_21_3:import43.Wrapper_MdPrefixRejector;
  _MdButton_21_4:import44.Wrapper_MdButton;
  _MdButtonCssMatStyler_21_5:import44.Wrapper_MdButtonCssMatStyler;
  _el_22:any;
  compView_22:import1.AppView<import29.MdIcon>;
  _MdPrefixRejector_22_3:import43.Wrapper_MdPrefixRejector;
  _MdIcon_22_4:import45.Wrapper_MdIcon;
  _text_23:any;
  _text_24:any;
  _text_25:any;
  _text_26:any;
  _text_27:any;
  _el_28:any;
  /*private*/ _vc_28:import46.ViewContainer;
  compView_28:import1.AppView<import28.MdButton>;
  _MdPrefixRejector_28_5:import43.Wrapper_MdPrefixRejector;
  _MdButton_28_6:import44.Wrapper_MdButton;
  _MdButtonCssMatStyler_28_7:import44.Wrapper_MdButtonCssMatStyler;
  _Popover_28_8:import47.Wrapper_Popover;
  _el_29:any;
  compView_29:import1.AppView<import31.MdCheckbox>;
  _MdPrefixRejector_29_3:import43.Wrapper_MdPrefixRejector;
  _MdCheckbox_29_4:import48.Wrapper_MdCheckbox;
  __NG_VALUE_ACCESSOR_29_5:any[];
  _text_30:any;
  _el_31:any;
  _text_32:any;
  _text_33:any;
  _text_34:any;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TasksFormGroupContainer0,renderType_TasksFormGroupContainer,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_TasksFormGroupContainer0);
  }
  get _NG_VALUE_ACCESSOR_29_5():any[] {
    this.debug(29,23,48);
    if ((this.__NG_VALUE_ACCESSOR_29_5 == null)) { (this.__NG_VALUE_ACCESSOR_29_5 = [this._MdCheckbox_29_4.context]); }
    return this.__NG_VALUE_ACCESSOR_29_5;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_myPopover_0 = new import32.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',this.debug(0,0,0));
    this._el_1 = import4.createRenderElement(this.renderer,parentRenderNode,'popover-content',new import4.InlineArray4(4,'placement','right','style',''),this.debug(1,1,8));
    this.compView_1 = new import33.View_PopoverContent0(this.viewUtils,this,1,this._el_1);
    this._PopoverContent_1_3 = new import33.Wrapper_PopoverContent(new import49.ElementRef(this._el_1),this.compView_1.ref,this.renderer);
    this._text_2 = this.renderer.createText((null as any),'\n\n                ',this.debug(2,3,30));
    this._el_3 = import4.createRenderElement(this.renderer,(null as any),'form',new import4.InlineArray4(4,'fxLayout','row','novalidate',''),this.debug(3,5,16));
    this._LayoutDirective_3_3 = new import34.Wrapper_LayoutDirective(this.parentView.injectorGet(import50.MediaMonitor,this.parentIndex),new import49.ElementRef(this._el_3),this.renderer);
    this._FormGroupDirective_3_4 = new import35.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_3_5 = this._FormGroupDirective_3_4.context;
    this._NgControlStatusGroup_3_6 = new import36.Wrapper_NgControlStatusGroup(this._ControlContainer_3_5);
    this._text_4 = this.renderer.createText(this._el_3,'\n                    ',this.debug(4,5,110));
    this._el_5 = import4.createRenderElement(this.renderer,this._el_3,'div',new import4.InlineArray4(4,'fxFlex','370px','fxLayoutAlign','start'),this.debug(5,6,20));
    this._LayoutAlignDirective_5_3 = new import37.Wrapper_LayoutAlignDirective(this.parentView.injectorGet(import50.MediaMonitor,this.parentIndex),new import49.ElementRef(this._el_5),this.renderer,(null as any));
    this._FlexDirective_5_4 = new import38.Wrapper_FlexDirective(this.parentView.injectorGet(import50.MediaMonitor,this.parentIndex),new import49.ElementRef(this._el_5),this.renderer,this._LayoutDirective_3_3.context,this.parentView.injectorGet(import51.LayoutWrapDirective,this.parentIndex,(null as any)));
    this._text_6 = this.renderer.createText(this._el_5,'\n                    ',this.debug(6,6,62));
    this._el_7 = import4.createRenderElement(this.renderer,this._el_5,'md-input-container',new import4.InlineArray4(4,'floatPlaceholder','never','style','margin-top: 5px; margin-left: 5px;'),this.debug(7,7,20));
    this.compView_7 = new import39.View_MdInputContainer0(this.viewUtils,this,7,this._el_7);
    this._MdInputContainer_7_3 = new import39.Wrapper_MdInputContainer();
    this._query_MdInputDirective_7_0 = new import32.QueryList<any>();
    this._query_MdPlaceholder_7_1 = new import32.QueryList<any>();
    this._query_MdHint_7_2 = new import32.QueryList<any>();
    this._text_8 = this.renderer.createText((null as any),'\n                        ',this.debug(8,7,108));
    this._el_9 = import4.createRenderElement(this.renderer,(null as any),'input',new import4.InlineArray8(8,'formControlName','content','mdInput','','placeholder','Press Enter to save a Task','style','width: 320px'),this.debug(9,8,24));
    this._DefaultValueAccessor_9_3 = new import40.Wrapper_DefaultValueAccessor(this.renderer,new import49.ElementRef(this._el_9));
    this._NG_VALUE_ACCESSOR_9_4 = [this._DefaultValueAccessor_9_3.context];
    this._FormControlName_9_5 = new import41.Wrapper_FormControlName(this._ControlContainer_3_5,(null as any),(null as any),this._NG_VALUE_ACCESSOR_9_4);
    this._NgControl_9_6 = this._FormControlName_9_5.context;
    this._MdInputDirective_9_7 = new import39.Wrapper_MdInputDirective(new import49.ElementRef(this._el_9),this.renderer,this._NgControl_9_6);
    this._NgControlStatus_9_8 = new import36.Wrapper_NgControlStatus(this._NgControl_9_6);
    this._text_10 = this.renderer.createText((null as any),'\n                    ',this.debug(10,8,127));
    this.compView_7.create(this._MdInputContainer_7_3.context);
    this._text_11 = this.renderer.createText(this._el_5,'\n                    \n                    ',this.debug(11,9,41));
    this._text_12 = this.renderer.createText(this._el_3,'\n                    ',this.debug(12,11,26));
    this._el_13 = import4.createRenderElement(this.renderer,this._el_3,'div',new import4.InlineArray4(4,'fxFlex','100px','fxLayoutAlign','end center'),this.debug(13,12,20));
    this._LayoutAlignDirective_13_3 = new import37.Wrapper_LayoutAlignDirective(this.parentView.injectorGet(import50.MediaMonitor,this.parentIndex),new import49.ElementRef(this._el_13),this.renderer,(null as any));
    this._FlexDirective_13_4 = new import38.Wrapper_FlexDirective(this.parentView.injectorGet(import50.MediaMonitor,this.parentIndex),new import49.ElementRef(this._el_13),this.renderer,this._LayoutDirective_3_3.context,this.parentView.injectorGet(import51.LayoutWrapDirective,this.parentIndex,(null as any)));
    this._text_14 = this.renderer.createText(this._el_13,'\n                    ',this.debug(14,12,67));
    this._el_15 = import4.createRenderElement(this.renderer,this._el_13,'dp-day-picker',new import4.InlineArray4(4,'formControlName','dueDate','placeholder','Set Due Date'),this.debug(15,13,20));
    this.compView_15 = new import42.View_DpDayPickerComponent0(this.viewUtils,this,15,this._el_15);
    this._CalendarService_15_3 = new import23.CalendarService(this.parentView.injectorGet(import52.UtilsService,this.parentIndex));
    this._DayPickerService_15_4 = new import24.DayPickerService(this._CalendarService_15_3,this.parentView.injectorGet(import52.UtilsService,this.parentIndex));
    this._DpDayPickerComponent_15_5 = new import42.Wrapper_DpDayPickerComponent(this._DayPickerService_15_4,this.parentView.injectorGet(import53.DomHelper,this.parentIndex),new import49.ElementRef(this._el_15),this.renderer,this.parentView.injectorGet(import52.UtilsService,this.parentIndex));
    this._NG_VALIDATORS_15_6 = [this._DpDayPickerComponent_15_5.context];
    this._NG_VALUE_ACCESSOR_15_7 = [this._DpDayPickerComponent_15_5.context];
    this._FormControlName_15_8 = new import41.Wrapper_FormControlName(this._ControlContainer_3_5,this._NG_VALIDATORS_15_6,(null as any),this._NG_VALUE_ACCESSOR_15_7);
    this._NgControl_15_9 = this._FormControlName_15_8.context;
    this._NgControlStatus_15_10 = new import36.Wrapper_NgControlStatus(this._NgControl_15_9);
    this.compView_15.create(this._DpDayPickerComponent_15_5.context);
    this._text_16 = this.renderer.createText(this._el_13,'\n                    \n                    ',this.debug(16,13,132));
    this._el_17 = import4.createRenderElement(this.renderer,this._el_13,'button',new import4.InlineArray8(6,'md-button','','mode','button','style','max-width: 40px !important; min-width: 40px !important'),this.debug(17,15,20));
    this.compView_17 = new import44.View_MdButton0(this.viewUtils,this,17,this._el_17);
    this._MdPrefixRejector_17_3 = new import43.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import27.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdButton_17_4 = new import44.Wrapper_MdButton(new import49.ElementRef(this._el_17),this.renderer);
    this._MdButtonCssMatStyler_17_5 = new import44.Wrapper_MdButtonCssMatStyler();
    this._el_18 = import4.createRenderElement(this.renderer,(null as any),'md-icon',new import4.InlineArray4(4,'role','img','style','color: #444'),this.debug(18,15,142));
    this.compView_18 = new import45.View_MdIcon0(this.viewUtils,this,18,this._el_18);
    this._MdPrefixRejector_18_3 = new import43.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import27.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdIcon_18_4 = new import45.Wrapper_MdIcon(new import49.ElementRef(this._el_18),this.renderer,this.parentView.injectorGet(import54.MdIconRegistry,this.parentIndex));
    this._text_19 = this.renderer.createText((null as any),'check',this.debug(19,15,171));
    this.compView_18.create(this._MdIcon_18_4.context);
    this.compView_17.create(this._MdButton_17_4.context);
    this._text_20 = this.renderer.createText(this._el_13,'\n                    ',this.debug(20,15,195));
    this._el_21 = import4.createRenderElement(this.renderer,this._el_13,'button',new import4.InlineArray8(6,'md-button','','mode','button','style','max-width: 40px !important; min-width: 50px !important'),this.debug(21,16,20));
    this.compView_21 = new import44.View_MdButton0(this.viewUtils,this,21,this._el_21);
    this._MdPrefixRejector_21_3 = new import43.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import27.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdButton_21_4 = new import44.Wrapper_MdButton(new import49.ElementRef(this._el_21),this.renderer);
    this._MdButtonCssMatStyler_21_5 = new import44.Wrapper_MdButtonCssMatStyler();
    this._el_22 = import4.createRenderElement(this.renderer,(null as any),'md-icon',new import4.InlineArray4(4,'role','img','style','color: #444'),this.debug(22,16,146));
    this.compView_22 = new import45.View_MdIcon0(this.viewUtils,this,22,this._el_22);
    this._MdPrefixRejector_22_3 = new import43.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import27.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdIcon_22_4 = new import45.Wrapper_MdIcon(new import49.ElementRef(this._el_22),this.renderer,this.parentView.injectorGet(import54.MdIconRegistry,this.parentIndex));
    this._text_23 = this.renderer.createText((null as any),'clear',this.debug(23,16,175));
    this.compView_22.create(this._MdIcon_22_4.context);
    this.compView_21.create(this._MdButton_21_4.context);
    this._text_24 = this.renderer.createText(this._el_13,'\n                    ',this.debug(24,16,199));
    this._text_25 = this.renderer.createText(this._el_3,'\n          \n         \n    ',this.debug(25,17,26));
    this._text_26 = this.renderer.createText((null as any),'\n        ',this.debug(26,20,11));
    this.compView_1.create(this._PopoverContent_1_3.context);
    this._text_27 = this.renderer.createText(parentRenderNode,'\n        \n        ',this.debug(27,21,26));
    this._el_28 = import4.createRenderElement(this.renderer,parentRenderNode,'button',new import4.InlineArray2(2,'md-button',''),this.debug(28,23,8));
    this._vc_28 = new import46.ViewContainer(28,(null as any),this,this._el_28);
    this.compView_28 = new import44.View_MdButton0(this.viewUtils,this,28,this._el_28);
    this._MdPrefixRejector_28_5 = new import43.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import27.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdButton_28_6 = new import44.Wrapper_MdButton(new import49.ElementRef(this._el_28),this.renderer);
    this._MdButtonCssMatStyler_28_7 = new import44.Wrapper_MdButtonCssMatStyler();
    this._Popover_28_8 = new import47.Wrapper_Popover(this._vc_28.vcRef,this.parentView.injectorGet(import55.ComponentFactoryResolver,this.parentIndex));
    this._el_29 = import4.createRenderElement(this.renderer,(null as any),'md-checkbox',new import4.InlineArray2(2,'style','margin-left: 4px;'),this.debug(29,23,48));
    this.compView_29 = new import48.View_MdCheckbox0(this.viewUtils,this,29,this._el_29);
    this._MdPrefixRejector_29_3 = new import43.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import27.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdCheckbox_29_4 = new import48.Wrapper_MdCheckbox(this.renderer,new import49.ElementRef(this._el_29),this.compView_29.ref);
    this._text_30 = this.renderer.createText((null as any),'\n                    ',this.debug(30,23,105));
    this._el_31 = import4.createRenderElement(this.renderer,(null as any),'span',new import4.InlineArray2(2,'style','margin-left: 10px;'),this.debug(31,24,20));
    this._text_32 = this.renderer.createText(this._el_31,'Add New Task',this.debug(32,24,53));
    this._text_33 = this.renderer.createText((null as any),'\n                ',this.debug(33,24,72));
    this.compView_29.create(this._MdCheckbox_29_4.context);
    this.compView_28.create(this._MdButton_28_6.context);
    this._text_34 = this.renderer.createText(parentRenderNode,'\n\n\n    \n    \n    ',this.debug(34,25,39));
    var disposable_0:Function = import4.subscribeToRenderElement(this,this._el_3,new import4.InlineArray8(6,'ngSubmit',(null as any),'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_3));
    this._FormGroupDirective_3_4.subscribe(this,this.eventHandler(this.handleEvent_3),true);
    var disposable_1:Function = import4.subscribeToRenderElement(this,this._el_7,new import4.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_7));
    var disposable_2:Function = import4.subscribeToRenderElement(this,this._el_9,new import4.InlineArray8(6,'input',(null as any),'blur',(null as any),'focus',(null as any)),this.eventHandler(this.handleEvent_9));
    var disposable_3:Function = import4.subscribeToRenderElement(this,this._el_15,new import4.InlineArray8(8,'click',(null as any),'click','document','scroll','document','resize','window'),this.eventHandler(this.handleEvent_15));
    var disposable_4:Function = import4.subscribeToRenderElement(this,this._el_17,new import4.InlineArray8(8,'click',(null as any),'mousedown',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_17));
    var disposable_5:Function = import4.subscribeToRenderElement(this,this._el_21,new import4.InlineArray8(8,'click',(null as any),'mousedown',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_21));
    var disposable_6:Function = import4.subscribeToRenderElement(this,this._el_28,new import4.InlineArray16(16,'mousedown',(null as any),'focus',(null as any),'blur',(null as any),'click',(null as any),'focusin',(null as any),'mouseenter',(null as any),'focusout',(null as any),'mouseleave',(null as any)),this.eventHandler(this.handleEvent_28));
    this._query_MdInputDirective_7_0.reset([this._MdInputDirective_9_7.context]);
    this._MdInputContainer_7_3.context._mdInputChild = this._query_MdInputDirective_7_0.first;
    this._query_MdPlaceholder_7_1.reset(([] as any[]));
    this._MdInputContainer_7_3.context._placeholderChild = this._query_MdPlaceholder_7_1.first;
    this._viewQuery_myPopover_0.reset([this._PopoverContent_1_3.context]);
    this.context.myPopover = this._viewQuery_myPopover_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._text_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._el_17,
      this._el_18,
      this._text_19,
      this._text_20,
      this._el_21,
      this._el_22,
      this._text_23,
      this._text_24,
      this._text_25,
      this._text_26,
      this._text_27,
      this._el_28,
      this._el_29,
      this._text_30,
      this._el_31,
      this._text_32,
      this._text_33,
      this._text_34
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3,
      disposable_4,
      disposable_5,
      disposable_6
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.DefaultValueAccessor) && (9 === requestNodeIndex))) { return this._DefaultValueAccessor_9_3.context; }
    if (((token === import20.NG_VALUE_ACCESSOR) && (9 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_9_4; }
    if (((token === import21.FormControlName) && (9 === requestNodeIndex))) { return this._FormControlName_9_5.context; }
    if (((token === import22.NgControl) && (9 === requestNodeIndex))) { return this._NgControl_9_6; }
    if (((token === import18.MdInputDirective) && (9 === requestNodeIndex))) { return this._MdInputDirective_9_7.context; }
    if (((token === import15.NgControlStatus) && (9 === requestNodeIndex))) { return this._NgControlStatus_9_8.context; }
    if (((token === import18.MdInputContainer) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._MdInputContainer_7_3.context; }
    if (((token === import16.LayoutAlignDirective) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._LayoutAlignDirective_5_3.context; }
    if (((token === import17.FlexDirective) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._FlexDirective_5_4.context; }
    if (((token === import23.CalendarService) && (15 === requestNodeIndex))) { return this._CalendarService_15_3; }
    if (((token === import24.DayPickerService) && (15 === requestNodeIndex))) { return this._DayPickerService_15_4; }
    if (((token === import25.DpDayPickerComponent) && (15 === requestNodeIndex))) { return this._DpDayPickerComponent_15_5.context; }
    if (((token === import26.NG_VALIDATORS) && (15 === requestNodeIndex))) { return this._NG_VALIDATORS_15_6; }
    if (((token === import20.NG_VALUE_ACCESSOR) && (15 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_15_7; }
    if (((token === import21.FormControlName) && (15 === requestNodeIndex))) { return this._FormControlName_15_8.context; }
    if (((token === import22.NgControl) && (15 === requestNodeIndex))) { return this._NgControl_15_9; }
    if (((token === import15.NgControlStatus) && (15 === requestNodeIndex))) { return this._NgControlStatus_15_10.context; }
    if (((token === import27.MdPrefixRejector) && ((18 <= requestNodeIndex) && (requestNodeIndex <= 19)))) { return this._MdPrefixRejector_18_3.context; }
    if (((token === import29.MdIcon) && ((18 <= requestNodeIndex) && (requestNodeIndex <= 19)))) { return this._MdIcon_18_4.context; }
    if (((token === import27.MdPrefixRejector) && ((17 <= requestNodeIndex) && (requestNodeIndex <= 19)))) { return this._MdPrefixRejector_17_3.context; }
    if (((token === import28.MdButton) && ((17 <= requestNodeIndex) && (requestNodeIndex <= 19)))) { return this._MdButton_17_4.context; }
    if (((token === import28.MdButtonCssMatStyler) && ((17 <= requestNodeIndex) && (requestNodeIndex <= 19)))) { return this._MdButtonCssMatStyler_17_5.context; }
    if (((token === import27.MdPrefixRejector) && ((22 <= requestNodeIndex) && (requestNodeIndex <= 23)))) { return this._MdPrefixRejector_22_3.context; }
    if (((token === import29.MdIcon) && ((22 <= requestNodeIndex) && (requestNodeIndex <= 23)))) { return this._MdIcon_22_4.context; }
    if (((token === import27.MdPrefixRejector) && ((21 <= requestNodeIndex) && (requestNodeIndex <= 23)))) { return this._MdPrefixRejector_21_3.context; }
    if (((token === import28.MdButton) && ((21 <= requestNodeIndex) && (requestNodeIndex <= 23)))) { return this._MdButton_21_4.context; }
    if (((token === import28.MdButtonCssMatStyler) && ((21 <= requestNodeIndex) && (requestNodeIndex <= 23)))) { return this._MdButtonCssMatStyler_21_5.context; }
    if (((token === import16.LayoutAlignDirective) && ((13 <= requestNodeIndex) && (requestNodeIndex <= 24)))) { return this._LayoutAlignDirective_13_3.context; }
    if (((token === import17.FlexDirective) && ((13 <= requestNodeIndex) && (requestNodeIndex <= 24)))) { return this._FlexDirective_13_4.context; }
    if (((token === import12.LayoutDirective) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 25)))) { return this._LayoutDirective_3_3.context; }
    if (((token === import13.FormGroupDirective) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 25)))) { return this._FormGroupDirective_3_4.context; }
    if (((token === import14.ControlContainer) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 25)))) { return this._ControlContainer_3_5; }
    if (((token === import15.NgControlStatusGroup) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 25)))) { return this._NgControlStatusGroup_3_6.context; }
    if (((token === import11.PopoverContent) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 26)))) { return this._PopoverContent_1_3.context; }
    if (((token === import27.MdPrefixRejector) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 33)))) { return this._MdPrefixRejector_29_3.context; }
    if (((token === import31.MdCheckbox) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 33)))) { return this._MdCheckbox_29_4.context; }
    if (((token === import20.NG_VALUE_ACCESSOR) && ((29 <= requestNodeIndex) && (requestNodeIndex <= 33)))) { return this._NG_VALUE_ACCESSOR_29_5; }
    if (((token === import27.MdPrefixRejector) && ((28 <= requestNodeIndex) && (requestNodeIndex <= 33)))) { return this._MdPrefixRejector_28_5.context; }
    if (((token === import28.MdButton) && ((28 <= requestNodeIndex) && (requestNodeIndex <= 33)))) { return this._MdButton_28_6.context; }
    if (((token === import28.MdButtonCssMatStyler) && ((28 <= requestNodeIndex) && (requestNodeIndex <= 33)))) { return this._MdButtonCssMatStyler_28_7.context; }
    if (((token === import30.Popover) && ((28 <= requestNodeIndex) && (requestNodeIndex <= 33)))) { return this._Popover_28_8.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(1,3,12);
    const currVal_1_0_0:any = 'right';
    this._PopoverContent_1_3.check_placement(currVal_1_0_0,throwOnChange,false);
    this.debug(1,2,12);
    const currVal_1_0_1:any = false;
    this._PopoverContent_1_3.check_closeOnClickOutside(currVal_1_0_1,throwOnChange,false);
    this._PopoverContent_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this.debug(3,5,22);
    const currVal_3_0_0:any = 'row';
    this._LayoutDirective_3_3.check_layout(currVal_3_0_0,throwOnChange,false);
    this._LayoutDirective_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    this.debug(3,5,37);
    const currVal_3_1_0:any = this.context.taskForm;
    this._FormGroupDirective_3_4.check_form(currVal_3_1_0,throwOnChange,false);
    this._FormGroupDirective_3_4.ngDoCheck(this,this._el_3,throwOnChange);
    this.debug(3,5,16);
    this._NgControlStatusGroup_3_6.ngDoCheck(this,this._el_3,throwOnChange);
    this.debug(5,6,40);
    const currVal_5_0_0:any = 'start';
    this._LayoutAlignDirective_5_3.check_align(currVal_5_0_0,throwOnChange,false);
    this._LayoutAlignDirective_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    this.debug(5,6,25);
    const currVal_5_1_0:any = '370px';
    this._FlexDirective_5_4.check_flex(currVal_5_1_0,throwOnChange,false);
    this._FlexDirective_5_4.ngDoCheck(this,this._el_5,throwOnChange);
    this.debug(7,7,83);
    const currVal_7_0_0:any = 'never';
    this._MdInputContainer_7_3.check_floatPlaceholder(currVal_7_0_0,throwOnChange,false);
    this._MdInputContainer_7_3.ngDoCheck(this,this._el_7,throwOnChange);
    this.debug(9,8,24);
    this._DefaultValueAccessor_9_3.ngDoCheck(this,this._el_9,throwOnChange);
    this.debug(9,8,80);
    const currVal_9_1_0:any = 'content';
    this._FormControlName_9_5.check_name(currVal_9_1_0,throwOnChange,false);
    this._FormControlName_9_5.ngDoCheck(this,this._el_9,throwOnChange);
    this.debug(9,8,39);
    const currVal_9_2_0:any = 'Press Enter to save a Task';
    this._MdInputDirective_9_7.check_placeholder(currVal_9_2_0,throwOnChange,false);
    this._MdInputDirective_9_7.ngDoCheck(this,this._el_9,throwOnChange);
    this.debug(9,8,24);
    this._NgControlStatus_9_8.ngDoCheck(this,this._el_9,throwOnChange);
    this.debug(13,12,40);
    const currVal_13_0_0:any = 'end center';
    this._LayoutAlignDirective_13_3.check_align(currVal_13_0_0,throwOnChange,false);
    this._LayoutAlignDirective_13_3.ngDoCheck(this,this._el_13,throwOnChange);
    this.debug(13,12,25);
    const currVal_13_1_0:any = '100px';
    this._FlexDirective_13_4.check_flex(currVal_13_1_0,throwOnChange,false);
    this._FlexDirective_13_4.ngDoCheck(this,this._el_13,throwOnChange);
    this.debug(15,13,88);
    const currVal_15_0_0:any = this.context.datePickerConfig;
    this._DpDayPickerComponent_15_5.check_userConfig(currVal_15_0_0,throwOnChange,false);
    this.debug(15,13,35);
    const currVal_15_0_1:any = 'Set Due Date';
    this._DpDayPickerComponent_15_5.check_placeholder(currVal_15_0_1,throwOnChange,false);
    this._DpDayPickerComponent_15_5.ngDoCheck(this,this._el_15,throwOnChange);
    this.debug(15,13,62);
    const currVal_15_1_0:any = 'dueDate';
    this._FormControlName_15_8.check_name(currVal_15_1_0,throwOnChange,false);
    this._FormControlName_15_8.ngDoCheck(this,this._el_15,throwOnChange);
    this.debug(15,13,20);
    this._NgControlStatus_15_10.ngDoCheck(this,this._el_15,throwOnChange);
    this.debug(17,15,20);
    this._MdPrefixRejector_17_3.ngDoCheck(this,this._el_17,throwOnChange);
    if (this._MdButton_17_4.ngDoCheck(this,this._el_17,throwOnChange)) { this.compView_17.markAsCheckOnce(); }
    this._MdButtonCssMatStyler_17_5.ngDoCheck(this,this._el_17,throwOnChange);
    this.debug(18,15,142);
    this._MdPrefixRejector_18_3.ngDoCheck(this,this._el_18,throwOnChange);
    if (this._MdIcon_18_4.ngDoCheck(this,this._el_18,throwOnChange)) { this.compView_18.markAsCheckOnce(); }
    this.debug(21,16,20);
    this._MdPrefixRejector_21_3.ngDoCheck(this,this._el_21,throwOnChange);
    if (this._MdButton_21_4.ngDoCheck(this,this._el_21,throwOnChange)) { this.compView_21.markAsCheckOnce(); }
    this._MdButtonCssMatStyler_21_5.ngDoCheck(this,this._el_21,throwOnChange);
    this.debug(22,16,146);
    this._MdPrefixRejector_22_3.ngDoCheck(this,this._el_22,throwOnChange);
    if (this._MdIcon_22_4.ngDoCheck(this,this._el_22,throwOnChange)) { this.compView_22.markAsCheckOnce(); }
    this.debug(28,23,8);
    this._MdPrefixRejector_28_5.ngDoCheck(this,this._el_28,throwOnChange);
    if (this._MdButton_28_6.ngDoCheck(this,this._el_28,throwOnChange)) { this.compView_28.markAsCheckOnce(); }
    this._MdButtonCssMatStyler_28_7.ngDoCheck(this,this._el_28,throwOnChange);
    this.debug(28,23,26);
    const currVal_28_3_0:any = this._PopoverContent_1_3.context;
    this._Popover_28_8.check_content(currVal_28_3_0,throwOnChange,false);
    this._Popover_28_8.ngDoCheck(this,this._el_28,throwOnChange);
    this.debug(29,23,48);
    this._MdPrefixRejector_29_3.ngDoCheck(this,this._el_29,throwOnChange);
    this.debug(29,23,87);
    const currVal_29_1_0:any = true;
    this._MdCheckbox_29_4.check_disabled(currVal_29_1_0,throwOnChange,false);
    if (this._MdCheckbox_29_4.ngDoCheck(this,this._el_29,throwOnChange)) { this.compView_29.markAsCheckOnce(); }
    this._vc_28.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdHint_7_2.dirty) {
        this._query_MdHint_7_2.reset(([] as any[]));
        this._MdInputContainer_7_3.context._hintChildren = this._query_MdHint_7_2;
        this._query_MdHint_7_2.notifyOnChanges();
      }
      this.debug(7,7,20);
      if ((this.numberOfChecks === 0)) { this._MdInputContainer_7_3.context.ngAfterContentInit(); }
    }
    this._NgControlStatusGroup_3_6.checkHost(this,this,this._el_3,throwOnChange);
    this._MdInputContainer_7_3.checkHost(this,this.compView_7,this._el_7,throwOnChange);
    this._MdInputDirective_9_7.checkHost(this,this,this._el_9,throwOnChange);
    this._NgControlStatus_9_8.checkHost(this,this,this._el_9,throwOnChange);
    this._NgControlStatus_15_10.checkHost(this,this.compView_15,this._el_15,throwOnChange);
    this._MdButton_17_4.checkHost(this,this.compView_17,this._el_17,throwOnChange);
    this._MdButtonCssMatStyler_17_5.checkHost(this,this.compView_17,this._el_17,throwOnChange);
    this._MdIcon_18_4.checkHost(this,this.compView_18,this._el_18,throwOnChange);
    this._MdButton_21_4.checkHost(this,this.compView_21,this._el_21,throwOnChange);
    this._MdButtonCssMatStyler_21_5.checkHost(this,this.compView_21,this._el_21,throwOnChange);
    this._MdIcon_22_4.checkHost(this,this.compView_22,this._el_22,throwOnChange);
    this._MdButton_28_6.checkHost(this,this.compView_28,this._el_28,throwOnChange);
    this._MdButtonCssMatStyler_28_7.checkHost(this,this.compView_28,this._el_28,throwOnChange);
    this._MdCheckbox_29_4.checkHost(this,this.compView_29,this._el_29,throwOnChange);
    this.compView_1.internalDetectChanges(throwOnChange);
    this.compView_7.internalDetectChanges(throwOnChange);
    this.compView_15.internalDetectChanges(throwOnChange);
    this.compView_17.internalDetectChanges(throwOnChange);
    this.compView_18.internalDetectChanges(throwOnChange);
    this.compView_21.internalDetectChanges(throwOnChange);
    this.compView_22.internalDetectChanges(throwOnChange);
    this.compView_28.internalDetectChanges(throwOnChange);
    this.compView_29.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      this.debug(15,13,20);
      if ((this.numberOfChecks === 0)) { this._DpDayPickerComponent_15_5.context.ngAfterViewInit(); }
      this.debug(18,15,142);
      this._MdIcon_18_4.context.ngAfterViewChecked();
      this.debug(22,16,146);
      this._MdIcon_22_4.context.ngAfterViewChecked();
      this.debug(1,1,8);
      if ((this.numberOfChecks === 0)) { this._PopoverContent_1_3.context.ngAfterViewInit(); }
    }
  }
  destroyInternal():void {
    this._vc_28.destroyNestedViews();
    this.compView_1.destroy();
    this.compView_7.destroy();
    this.compView_15.destroy();
    this.compView_17.destroy();
    this.compView_18.destroy();
    this.compView_21.destroy();
    this.compView_22.destroy();
    this.compView_28.destroy();
    this.compView_29.destroy();
    this._FormControlName_9_5.ngOnDestroy();
    this._MdInputDirective_9_7.ngOnDestroy();
    this.debug(9,8,24);
    this.debug(7,7,20);
    this._LayoutAlignDirective_5_3.ngOnDestroy();
    this._FlexDirective_5_4.ngOnDestroy();
    this.debug(5,6,20);
    this._DpDayPickerComponent_15_5.ngOnDestroy();
    this._FormControlName_15_8.ngOnDestroy();
    this.debug(15,13,20);
    this.debug(18,15,142);
    this.debug(17,15,20);
    this.debug(22,16,146);
    this.debug(21,16,20);
    this._LayoutAlignDirective_13_3.ngOnDestroy();
    this._FlexDirective_13_4.ngOnDestroy();
    this.debug(13,12,20);
    this._LayoutDirective_3_3.ngOnDestroy();
    this._FormGroupDirective_3_4.ngOnDestroy();
    this.debug(3,5,16);
    this._PopoverContent_1_3.ngOnDestroy();
    this.debug(1,1,8);
    this._MdCheckbox_29_4.ngOnDestroy();
    this.debug(29,23,48);
    this._Popover_28_8.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 1) && (ngContentIndex == 0))) {
      cb(this._text_2,ctx);
      cb(this._el_3,ctx);
      cb(this._text_26,ctx);
    }
    if (((nodeIndex == 7) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 7) && (ngContentIndex == 1))) {
      cb(this._text_8,ctx);
      cb(this._el_9,ctx);
      cb(this._text_10,ctx);
    }
    if (((nodeIndex == 7) && (ngContentIndex == 2))) {  }
    if (((nodeIndex == 7) && (ngContentIndex == 3))) {  }
    if (((nodeIndex == 7) && (ngContentIndex == 4))) {  }
    if (((nodeIndex == 17) && (ngContentIndex == 0))) { cb(this._el_18,ctx); }
    if (((nodeIndex == 18) && (ngContentIndex == 0))) { cb(this._text_19,ctx); }
    if (((nodeIndex == 21) && (ngContentIndex == 0))) { cb(this._el_22,ctx); }
    if (((nodeIndex == 22) && (ngContentIndex == 0))) { cb(this._text_23,ctx); }
    if (((nodeIndex == 28) && (ngContentIndex == 0))) { cb(this._el_29,ctx); }
    if (((nodeIndex == 29) && (ngContentIndex == 0))) {
      cb(this._text_30,ctx);
      cb(this._el_31,ctx);
      cb(this._text_33,ctx);
    }
  }
  handleEvent_3(eventName:string,$event:any):boolean {
    this.debug(3,5,16);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_3_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngSubmit')) {
      const pd_sub_0:any = ((<any>this.context.onSubmit()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_7(eventName:string,$event:any):boolean {
    this.debug(7,7,20);
    this.compView_7.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdInputContainer_7_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_9(eventName:string,$event:any):boolean {
    this.debug(9,8,24);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_9_3.handleEvent(eventName,$event) && result);
    result = (this._MdInputDirective_9_7.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_15(eventName:string,$event:any):boolean {
    this.debug(15,13,20);
    this.compView_15.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DpDayPickerComponent_15_5.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_17(eventName:string,$event:any):boolean {
    this.debug(17,15,20);
    this.compView_17.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdButton_17_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'click')) {
      this.context.onSubmit();
      const pd_sub_0:any = ((<any>false) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_21(eventName:string,$event:any):boolean {
    this.debug(21,16,20);
    this.compView_21.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdButton_21_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'click')) {
      this.context.closePopover();
      const pd_sub_0:any = ((<any>false) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_28(eventName:string,$event:any):boolean {
    this.debug(28,23,8);
    this.compView_28.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdButton_28_6.handleEvent(eventName,$event) && result);
    result = (this._Popover_28_8.handleEvent(eventName,$event) && result);
    return result;
  }
}