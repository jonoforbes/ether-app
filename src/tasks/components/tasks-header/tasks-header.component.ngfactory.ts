/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './tasks-header.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/material/core/compatibility/compatibility';
import * as import11 from '@angular/material/toolbar/toolbar';
import * as import12 from '@angular/flex-layout/flexbox/api/flex-fill';
import * as import13 from '@angular/material/button/button';
import * as import14 from '../../../../node_modules/@angular/material/core/compatibility/compatibility.ngfactory';
import * as import15 from '../../../../node_modules/@angular/material/toolbar/toolbar.ngfactory';
import * as import16 from '../../../../node_modules/@angular/flex-layout/flexbox/api/flex-fill.ngfactory';
import * as import17 from '../../../../node_modules/@angular/material/button/button.ngfactory';
import * as import18 from '@angular/core/src/linker/element_ref';
import * as import19 from '@angular/flex-layout/media-query/media-monitor';
export class Wrapper_TasksHeaderComponent {
  /*private*/ _eventHandler:Function;
  context:import0.TasksHeaderComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor() {
    this._changed = false;
    this.context = new import0.TasksHeaderComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_title(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.title = currValue;
      this._expr_0 = currValue;
    }
  }
  check_date(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.date = currValue;
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_TasksHeaderComponent_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import0.TasksHeaderComponent],import0.TasksHeaderComponent,{})];
var renderType_TasksHeaderComponent_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_TasksHeaderComponent_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.TasksHeaderComponent>;
  _TasksHeaderComponent_0_3:Wrapper_TasksHeaderComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TasksHeaderComponent_Host0,renderType_TasksHeaderComponent_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_TasksHeaderComponent_Host0);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'tasks-header',import3.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_TasksHeaderComponent0(this.viewUtils,this,0,this._el_0);
    this._TasksHeaderComponent_0_3 = new Wrapper_TasksHeaderComponent();
    this.compView_0.create(this._TasksHeaderComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import9.ComponentRef_<any>(0,this,this._el_0,this._TasksHeaderComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TasksHeaderComponent) && (0 === requestNodeIndex))) { return this._TasksHeaderComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._TasksHeaderComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TasksHeaderComponentNgFactory:import9.ComponentFactory<import0.TasksHeaderComponent> = new import9.ComponentFactory<import0.TasksHeaderComponent>('tasks-header',View_TasksHeaderComponent_Host0,import0.TasksHeaderComponent);
const styles_TasksHeaderComponent:any[] = ([] as any[]);
const nodeDebugInfos_TasksHeaderComponent0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import10.MdPrefixRejector,
    import11.MdToolbar,
    import12.FlexFillDirective
  ]
  ,import11.MdToolbar,{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import10.MdPrefixRejector,
    import13.MdButton,
    import13.MdButtonCssMatStyler
  ]
  ,import13.MdButton,{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_TasksHeaderComponent:import5.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/src/tasks/components/tasks-header/tasks-header.component.ts class TasksHeaderComponent - inline template',0,import6.ViewEncapsulation.None,styles_TasksHeaderComponent,{});
export class View_TasksHeaderComponent0 extends import2.DebugAppView<import0.TasksHeaderComponent> {
  _text_0:any;
  _el_1:any;
  compView_1:import2.AppView<import11.MdToolbar>;
  _MdPrefixRejector_1_3:import14.Wrapper_MdPrefixRejector;
  _MdToolbar_1_4:import15.Wrapper_MdToolbar;
  _FlexFillDirective_1_5:import16.Wrapper_FlexFillDirective;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  compView_8:import2.AppView<import13.MdButton>;
  _MdPrefixRejector_8_3:import14.Wrapper_MdPrefixRejector;
  _MdButton_8_4:import17.Wrapper_MdButton;
  _MdButtonCssMatStyler_8_5:import17.Wrapper_MdButtonCssMatStyler;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  _text_14:any;
  _text_15:any;
  /*private*/ _expr_24:any;
  /*private*/ _expr_25:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TasksHeaderComponent0,renderType_TasksHeaderComponent,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_TasksHeaderComponent0);
    this._expr_24 = import1.UNINITIALIZED;
    this._expr_25 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',this.debug(0,0,0));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'md-toolbar',new import3.InlineArray16(10,'class','context-subheader','color','primary','fxFill','','role','toolbar','style','height: 66px !important; \n                background-color: #fff !important; \n                margin-bottom: 0px;\n                overflow-y: hidden !important;\n                z-index: 2;\n                position: fixed;\n                top: 0px'),this.debug(1,1,4));
    this.compView_1 = new import15.View_MdToolbar0(this.viewUtils,this,1,this._el_1);
    this._MdPrefixRejector_1_3 = new import14.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import10.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdToolbar_1_4 = new import15.Wrapper_MdToolbar(new import18.ElementRef(this._el_1),this.renderer);
    this._FlexFillDirective_1_5 = new import16.Wrapper_FlexFillDirective(this.parentView.injectorGet(import19.MediaMonitor,this.parentIndex),new import18.ElementRef(this._el_1),this.renderer);
    this._text_2 = this.renderer.createText((null as any),'\n        ',this.debug(2,11,26));
    this._el_3 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','welcomeBlock'),this.debug(3,12,8));
    this._text_4 = this.renderer.createText(this._el_3,'\n        ',this.debug(4,12,34));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_3,'h3',import3.EMPTY_INLINE_ARRAY,this.debug(5,13,8));
    this._text_6 = this.renderer.createText(this._el_5,'',this.debug(6,13,12));
    this._text_7 = this.renderer.createText(this._el_3,'\n        ',this.debug(7,13,31));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_3,'button',new import3.InlineArray4(4,'md-button','','style','padding: 2px 10px 2px 1px !important'),this.debug(8,14,8));
    this.compView_8 = new import17.View_MdButton0(this.viewUtils,this,8,this._el_8);
    this._MdPrefixRejector_8_3 = new import14.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import10.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdButton_8_4 = new import17.Wrapper_MdButton(new import18.ElementRef(this._el_8),this.renderer);
    this._MdButtonCssMatStyler_8_5 = new import17.Wrapper_MdButtonCssMatStyler();
    this._text_9 = this.renderer.createText((null as any),'\n      ',this.debug(9,14,71));
    this._el_10 = import3.createRenderElement(this.renderer,(null as any),'p',new import3.InlineArray2(2,'style','text-align: left !important'),this.debug(10,15,6));
    this._text_11 = this.renderer.createText(this._el_10,'',this.debug(11,15,45));
    this._text_12 = this.renderer.createText((null as any),'\n    ',this.debug(12,15,63));
    this.compView_8.create(this._MdButton_8_4.context);
    this._text_13 = this.renderer.createText(this._el_3,'\n        ',this.debug(13,16,13));
    this._text_14 = this.renderer.createText((null as any),'\n\n    ',this.debug(14,17,14));
    this.compView_1.create(this._MdToolbar_1_4.context);
    this._text_15 = this.renderer.createText(parentRenderNode,'\n    \n    \n    \n    ',this.debug(15,19,17));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_8,new import3.InlineArray8(6,'mousedown',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_8));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._text_13,
      this._text_14,
      this._text_15
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.MdPrefixRejector) && ((8 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._MdPrefixRejector_8_3.context; }
    if (((token === import13.MdButton) && ((8 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._MdButton_8_4.context; }
    if (((token === import13.MdButtonCssMatStyler) && ((8 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._MdButtonCssMatStyler_8_5.context; }
    if (((token === import10.MdPrefixRejector) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._MdPrefixRejector_1_3.context; }
    if (((token === import11.MdToolbar) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._MdToolbar_1_4.context; }
    if (((token === import12.FlexFillDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._FlexFillDirective_1_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(1,1,4);
    this._MdPrefixRejector_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this.debug(1,4,8);
    const currVal_1_1_0:any = 'primary';
    this._MdToolbar_1_4.check_color(currVal_1_1_0,throwOnChange,false);
    if (this._MdToolbar_1_4.ngDoCheck(this,this._el_1,throwOnChange)) { this.compView_1.markAsCheckOnce(); }
    this.debug(1,1,4);
    this._FlexFillDirective_1_5.ngDoCheck(this,this._el_1,throwOnChange);
    this.debug(8,14,8);
    this._MdPrefixRejector_8_3.ngDoCheck(this,this._el_8,throwOnChange);
    if (this._MdButton_8_4.ngDoCheck(this,this._el_8,throwOnChange)) { this.compView_8.markAsCheckOnce(); }
    this._MdButtonCssMatStyler_8_5.ngDoCheck(this,this._el_8,throwOnChange);
    this._MdToolbar_1_4.checkHost(this,this.compView_1,this._el_1,throwOnChange);
    this.debug(6,13,12);
    const currVal_24:any = import3.inlineInterpolate(1,'',this.context.headerText,'');
    if (import3.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this.renderer.setText(this._text_6,currVal_24);
      this._expr_24 = currVal_24;
    }
    this._MdButton_8_4.checkHost(this,this.compView_8,this._el_8,throwOnChange);
    this._MdButtonCssMatStyler_8_5.checkHost(this,this.compView_8,this._el_8,throwOnChange);
    this.debug(11,15,45);
    const currVal_25:any = import3.inlineInterpolate(1,'',this.context.headerDate,'');
    if (import3.checkBinding(throwOnChange,this._expr_25,currVal_25)) {
      this.renderer.setText(this._text_11,currVal_25);
      this._expr_25 = currVal_25;
    }
    this.compView_1.internalDetectChanges(throwOnChange);
    this.compView_8.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_1.destroy();
    this.compView_8.destroy();
    this.debug(8,14,8);
    this._FlexFillDirective_1_5.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 1) && (ngContentIndex == 0))) {
      cb(this._text_2,ctx);
      cb(this._el_3,ctx);
      cb(this._text_14,ctx);
    }
    if (((nodeIndex == 1) && (ngContentIndex == 1))) {  }
    if (((nodeIndex == 8) && (ngContentIndex == 0))) {
      cb(this._text_9,ctx);
      cb(this._el_10,ctx);
      cb(this._text_12,ctx);
    }
  }
  handleEvent_8(eventName:string,$event:any):boolean {
    this.debug(8,14,8);
    this.compView_8.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdButton_8_4.handleEvent(eventName,$event) && result);
    return result;
  }
}