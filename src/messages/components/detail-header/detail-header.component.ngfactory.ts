/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './detail-header.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/debug_context';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/material/core/compatibility/compatibility';
import * as import10 from '@angular/material/toolbar/toolbar';
import * as import11 from '@angular/flex-layout/flexbox/api/flex-fill';
import * as import12 from '../../../../node_modules/@angular/material/core/compatibility/compatibility.ngfactory';
import * as import13 from '../../../../node_modules/@angular/material/toolbar/toolbar.ngfactory';
import * as import14 from '../../../../node_modules/@angular/flex-layout/flexbox/api/flex-fill.ngfactory';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '@angular/flex-layout/media-query/media-monitor';
export class Wrapper_MessagesDetailHeaderComponent {
  /*private*/ _eventHandler:Function;
  context:import0.MessagesDetailHeaderComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.MessagesDetailHeaderComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_MessagesDetailHeaderComponent_Host0:import2.StaticNodeDebugInfo[] = [new import2.StaticNodeDebugInfo([import0.MessagesDetailHeaderComponent],import0.MessagesDetailHeaderComponent,{})];
var renderType_MessagesDetailHeaderComponent_Host:import3.RenderComponentType = import4.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_MessagesDetailHeaderComponent_Host0 extends import1.DebugAppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.MessagesDetailHeaderComponent>;
  _MessagesDetailHeaderComponent_0_3:Wrapper_MessagesDetailHeaderComponent;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MessagesDetailHeaderComponent_Host0,renderType_MessagesDetailHeaderComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MessagesDetailHeaderComponent_Host0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'messages-detail-header',import4.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MessagesDetailHeaderComponent0(this.viewUtils,this,0,this._el_0);
    this._MessagesDetailHeaderComponent_0_3 = new Wrapper_MessagesDetailHeaderComponent();
    this.compView_0.create(this._MessagesDetailHeaderComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._MessagesDetailHeaderComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MessagesDetailHeaderComponent) && (0 === requestNodeIndex))) { return this._MessagesDetailHeaderComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._MessagesDetailHeaderComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const MessagesDetailHeaderComponentNgFactory:import8.ComponentFactory<import0.MessagesDetailHeaderComponent> = new import8.ComponentFactory<import0.MessagesDetailHeaderComponent>('messages-detail-header',View_MessagesDetailHeaderComponent_Host0,import0.MessagesDetailHeaderComponent);
const styles_MessagesDetailHeaderComponent:any[] = ([] as any[]);
const nodeDebugInfos_MessagesDetailHeaderComponent0:import2.StaticNodeDebugInfo[] = [
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import9.MdPrefixRejector,
    import10.MdToolbar,
    import11.FlexFillDirective
  ]
  ,import10.MdToolbar,{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_MessagesDetailHeaderComponent:import3.RenderComponentType = import4.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/src/messages/components/detail-header/detail-header.component.ts class MessagesDetailHeaderComponent - inline template',0,import5.ViewEncapsulation.None,styles_MessagesDetailHeaderComponent,{});
export class View_MessagesDetailHeaderComponent0 extends import1.DebugAppView<import0.MessagesDetailHeaderComponent> {
  _text_0:any;
  _el_1:any;
  compView_1:import1.AppView<import10.MdToolbar>;
  _MdPrefixRejector_1_3:import12.Wrapper_MdPrefixRejector;
  _MdToolbar_1_4:import13.Wrapper_MdToolbar;
  _FlexFillDirective_1_5:import14.Wrapper_FlexFillDirective;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _text_6:any;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MessagesDetailHeaderComponent0,renderType_MessagesDetailHeaderComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_MessagesDetailHeaderComponent0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',this.debug(0,0,0));
    this._el_1 = import4.createRenderElement(this.renderer,parentRenderNode,'md-toolbar',new import4.InlineArray16(10,'class','context-subheader','color','primary','fxFill','','role','toolbar','style','height: 66px !important; \n                                                                            background-color: #fff !important; \n                                                                            margin-bottom: 0px;\n                                                                            overflow-y: hidden !important;\n                                                                            z-index: 2;\n                                                                            position: fixed;\n                                                                            top: 0px'),this.debug(1,1,8));
    this.compView_1 = new import13.View_MdToolbar0(this.viewUtils,this,1,this._el_1);
    this._MdPrefixRejector_1_3 = new import12.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import9.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdToolbar_1_4 = new import13.Wrapper_MdToolbar(new import15.ElementRef(this._el_1),this.renderer);
    this._FlexFillDirective_1_5 = new import14.Wrapper_FlexFillDirective(this.parentView.injectorGet(import16.MediaMonitor,this.parentIndex),new import15.ElementRef(this._el_1),this.renderer);
    this._text_2 = this.renderer.createText((null as any),'\n    \n\n    ',this.debug(2,7,86));
    this._el_3 = import4.createRenderElement(this.renderer,(null as any),'div',new import4.InlineArray2(2,'class','welcomeBlock'),this.debug(3,10,4));
    this._text_4 = this.renderer.createText(this._el_3,'\n\n\n\n    ',this.debug(4,10,30));
    this._text_5 = this.renderer.createText((null as any),'\n\n      \n\n  ',this.debug(5,14,10));
    this.compView_1.create(this._MdToolbar_1_4.context);
    this._text_6 = this.renderer.createText(parentRenderNode,'\n    ',this.debug(6,18,15));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._text_6
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.MdPrefixRejector) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._MdPrefixRejector_1_3.context; }
    if (((token === import10.MdToolbar) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._MdToolbar_1_4.context; }
    if (((token === import11.FlexFillDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._FlexFillDirective_1_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(1,1,8);
    this._MdPrefixRejector_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this.debug(1,1,53);
    const currVal_1_1_0:any = 'primary';
    this._MdToolbar_1_4.check_color(currVal_1_1_0,throwOnChange,false);
    if (this._MdToolbar_1_4.ngDoCheck(this,this._el_1,throwOnChange)) { this.compView_1.markAsCheckOnce(); }
    this.debug(1,1,8);
    this._FlexFillDirective_1_5.ngDoCheck(this,this._el_1,throwOnChange);
    this._MdToolbar_1_4.checkHost(this,this.compView_1,this._el_1,throwOnChange);
    this.compView_1.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_1.destroy();
    this._FlexFillDirective_1_5.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 1) && (ngContentIndex == 0))) {
      cb(this._text_2,ctx);
      cb(this._el_3,ctx);
      cb(this._text_5,ctx);
    }
    if (((nodeIndex == 1) && (ngContentIndex == 1))) {  }
  }
}