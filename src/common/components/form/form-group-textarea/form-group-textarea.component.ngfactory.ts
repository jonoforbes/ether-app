/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './form-group-textarea.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/core/src/linker/view_container';
import * as import11 from '@angular/forms/src/directives/default_value_accessor';
import * as import12 from '@angular/forms/src/directives/control_value_accessor';
import * as import13 from '@angular/forms/src/directives/reactive_directives/form_control_directive';
import * as import14 from '@angular/forms/src/directives/ng_control';
import * as import15 from '@angular/forms/src/directives/ng_control_status';
import * as import16 from '@angular/core/src/linker/template_ref';
import * as import17 from '@angular/common/src/directives/ng_if';
import * as import18 from '../../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import19 from '../../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_directive.ngfactory';
import * as import20 from '../../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import21 from '../../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import22 from '@angular/core/src/linker/element_ref';
export class Wrapper_FormGroupTextarea {
  /*private*/ _eventHandler:Function;
  context:import0.FormGroupTextarea;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  constructor() {
    this._changed = false;
    this.context = new import0.FormGroupTextarea();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_control(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.control = currValue;
      this._expr_0 = currValue;
    }
  }
  check_label(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.label = currValue;
      this._expr_1 = currValue;
    }
  }
  check_placeholder(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.placeholder = currValue;
      this._expr_2 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_FormGroupTextarea_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import0.FormGroupTextarea],import0.FormGroupTextarea,{})];
var renderType_FormGroupTextarea_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_FormGroupTextarea_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.FormGroupTextarea>;
  _FormGroupTextarea_0_3:Wrapper_FormGroupTextarea;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FormGroupTextarea_Host0,renderType_FormGroupTextarea_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_FormGroupTextarea_Host0);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'form-group-textarea',import3.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_FormGroupTextarea0(this.viewUtils,this,0,this._el_0);
    this._FormGroupTextarea_0_3 = new Wrapper_FormGroupTextarea();
    this.compView_0.create(this._FormGroupTextarea_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import9.ComponentRef_<any>(0,this,this._el_0,this._FormGroupTextarea_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.FormGroupTextarea) && (0 === requestNodeIndex))) { return this._FormGroupTextarea_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._FormGroupTextarea_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const FormGroupTextareaNgFactory:import9.ComponentFactory<import0.FormGroupTextarea> = new import9.ComponentFactory<import0.FormGroupTextarea>('form-group-textarea',View_FormGroupTextarea_Host0,import0.FormGroupTextarea);
const styles_FormGroupTextarea:any[] = ([] as any[]);
const nodeDebugInfos_FormGroupTextarea1:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})];
class View_FormGroupTextarea1 extends import2.DebugAppView<any> {
  _el_0:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_FormGroupTextarea1,renderType_FormGroupTextarea,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_FormGroupTextarea1,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray4(4,'aria-hidden','true','class','glyphicon glyphicon-ok form-control-feedback'),this.debug(0,8,20));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
const nodeDebugInfos_FormGroupTextarea0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import11.DefaultValueAccessor,
    import12.NG_VALUE_ACCESSOR,
    import13.FormControlDirective,
    import14.NgControl,
    import15.NgControlStatus
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import16.TemplateRef,
    import17.NgIf
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_FormGroupTextarea:import5.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/winecellar/src/common/components/form/form-group-textarea/form-group-textarea.component.ts class FormGroupTextarea - inline template',0,import6.ViewEncapsulation.None,styles_FormGroupTextarea,{});
export class View_FormGroupTextarea0 extends import2.DebugAppView<import0.FormGroupTextarea> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _el_8:any;
  _DefaultValueAccessor_8_3:import18.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_8_4:any[];
  _FormControlDirective_8_5:import19.Wrapper_FormControlDirective;
  _NgControl_8_6:any;
  _NgControlStatus_8_7:import20.Wrapper_NgControlStatus;
  _text_9:any;
  _anchor_10:any;
  /*private*/ _vc_10:import10.ViewContainer;
  _TemplateRef_10_5:any;
  _NgIf_10_6:import21.Wrapper_NgIf;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  /*private*/ _expr_22:any;
  /*private*/ _expr_23:any;
  /*private*/ _expr_24:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_FormGroupTextarea0,renderType_FormGroupTextarea,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_FormGroupTextarea0);
    this._expr_22 = import1.UNINITIALIZED;
    this._expr_23 = import1.UNINITIALIZED;
    this._expr_24 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',this.debug(0,0,0));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','form-group has-feedback'),this.debug(1,1,8));
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',this.debug(2,1,98));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'label',new import3.InlineArray2(2,'class','col-sm-4 control-label'),this.debug(3,2,12));
    this._text_4 = this.renderer.createText(this._el_3,'',this.debug(4,2,50));
    this._text_5 = this.renderer.createText(this._el_1,'\n             ',this.debug(5,2,67));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_1,'div',new import3.InlineArray2(2,'class','col-sm-8'),this.debug(6,3,13));
    this._text_7 = this.renderer.createText(this._el_6,'\n                ',this.debug(7,3,35));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_6,'textarea',new import3.InlineArray2(2,'class','form-control input-lg'),this.debug(8,4,16));
    this._DefaultValueAccessor_8_3 = new import18.Wrapper_DefaultValueAccessor(this.renderer,new import22.ElementRef(this._el_8));
    this._NG_VALUE_ACCESSOR_8_4 = [this._DefaultValueAccessor_8_3.context];
    this._FormControlDirective_8_5 = new import19.Wrapper_FormControlDirective((null as any),(null as any),this._NG_VALUE_ACCESSOR_8_4);
    this._NgControl_8_6 = this._FormControlDirective_8_5.context;
    this._NgControlStatus_8_7 = new import20.Wrapper_NgControlStatus(this._NgControl_8_6);
    this._text_9 = this.renderer.createText(this._el_6,'\n                    ',this.debug(9,7,61));
    this._anchor_10 = this.renderer.createTemplateAnchor(this._el_6,this.debug(10,8,20));
    this._vc_10 = new import10.ViewContainer(10,6,this,this._anchor_10);
    this._TemplateRef_10_5 = new import16.TemplateRef_(this,10,this._anchor_10);
    this._NgIf_10_6 = new import21.Wrapper_NgIf(this._vc_10.vcRef,this._TemplateRef_10_5);
    this._text_11 = this.renderer.createText(this._el_6,'\n            ',this.debug(11,9,99));
    this._text_12 = this.renderer.createText(this._el_1,'\n        ',this.debug(12,10,18));
    this._text_13 = this.renderer.createText(parentRenderNode,'\n    ',this.debug(13,11,14));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_8,new import3.InlineArray4(4,'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_8));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._anchor_10,
      this._text_11,
      this._text_12,
      this._text_13
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.DefaultValueAccessor) && (8 === requestNodeIndex))) { return this._DefaultValueAccessor_8_3.context; }
    if (((token === import12.NG_VALUE_ACCESSOR) && (8 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_8_4; }
    if (((token === import13.FormControlDirective) && (8 === requestNodeIndex))) { return this._FormControlDirective_8_5.context; }
    if (((token === import14.NgControl) && (8 === requestNodeIndex))) { return this._NgControl_8_6; }
    if (((token === import15.NgControlStatus) && (8 === requestNodeIndex))) { return this._NgControlStatus_8_7.context; }
    if (((token === import16.TemplateRef) && (10 === requestNodeIndex))) { return this._TemplateRef_10_5; }
    if (((token === import17.NgIf) && (10 === requestNodeIndex))) { return this._NgIf_10_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(8,4,16);
    this._DefaultValueAccessor_8_3.ngDoCheck(this,this._el_8,throwOnChange);
    this.debug(8,5,20);
    const currVal_8_1_0:any = this.context.control;
    this._FormControlDirective_8_5.check_form(currVal_8_1_0,throwOnChange,false);
    this._FormControlDirective_8_5.ngDoCheck(this,this._el_8,throwOnChange);
    this.debug(8,4,16);
    this._NgControlStatus_8_7.ngDoCheck(this,this._el_8,throwOnChange);
    this.debug(10,8,26);
    const currVal_10_0_0:any = (this.context.control.valid && this.context.control.dirty);
    this._NgIf_10_6.check_ngIf(currVal_10_0_0,throwOnChange,false);
    this._NgIf_10_6.ngDoCheck(this,this._anchor_10,throwOnChange);
    this._vc_10.detectChangesInNestedViews(throwOnChange);
    this.debug(1,1,45);
    const currVal_22:any = (this.context.control.valid && this.context.control.dirty);
    if (import3.checkBinding(throwOnChange,this._expr_22,currVal_22)) {
      this.renderer.setElementClass(this._el_1,'has-success',currVal_22);
      this._expr_22 = currVal_22;
    }
    this.debug(4,2,50);
    const currVal_23:any = import3.inlineInterpolate(1,'',this.context.label,'');
    if (import3.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      this.renderer.setText(this._text_4,currVal_23);
      this._expr_23 = currVal_23;
    }
    this.debug(8,7,20);
    const currVal_24:any = import3.inlineInterpolate(1,'',this.context.placeholder,'');
    if (import3.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this.renderer.setElementProperty(this._el_8,'placeholder',currVal_24);
      this._expr_24 = currVal_24;
    }
    this._NgControlStatus_8_7.checkHost(this,this,this._el_8,throwOnChange);
  }
  destroyInternal():void {
    this._vc_10.destroyNestedViews();
    this._FormControlDirective_8_5.ngOnDestroy();
    this.debug(8,4,16);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 10)) { return new View_FormGroupTextarea1(this.viewUtils,this,10,this._anchor_10,this._vc_10); }
    return (null as any);
  }
  handleEvent_8(eventName:string,$event:any):boolean {
    this.debug(8,4,16);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_8_3.handleEvent(eventName,$event) && result);
    return result;
  }
}