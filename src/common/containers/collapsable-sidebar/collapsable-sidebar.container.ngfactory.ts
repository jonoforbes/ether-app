/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './collapsable-sidebar.container';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/debug_context';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../common.sandbox';
import * as import10 from '@angular/core/src/linker/view_container';
import * as import11 from '@angular/core/src/linker/template_ref';
import * as import12 from '@angular/common/src/directives/ng_if';
import * as import13 from '../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import14 from '@angular/common/src/pipes/async_pipe';
import * as import15 from '@angular/core/src/change_detection/change_detection_util';
export class Wrapper_CollapsableSidebarContainer {
  /*private*/ _eventHandler:Function;
  context:import0.CollapsableSidebarContainer;
  /*private*/ _changed:boolean;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.CollapsableSidebarContainer(p0);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_CollapsableSidebarContainer_Host0:import2.StaticNodeDebugInfo[] = [new import2.StaticNodeDebugInfo([import0.CollapsableSidebarContainer],import0.CollapsableSidebarContainer,{})];
var renderType_CollapsableSidebarContainer_Host:import3.RenderComponentType = import4.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CollapsableSidebarContainer_Host0 extends import1.DebugAppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.CollapsableSidebarContainer>;
  _CollapsableSidebarContainer_0_3:Wrapper_CollapsableSidebarContainer;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CollapsableSidebarContainer_Host0,renderType_CollapsableSidebarContainer_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CollapsableSidebarContainer_Host0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'collapsable-sidebar',import4.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_CollapsableSidebarContainer0(this.viewUtils,this,0,this._el_0);
    this._CollapsableSidebarContainer_0_3 = new Wrapper_CollapsableSidebarContainer(this.injectorGet(import9.CommonSandbox,this.parentIndex));
    this.compView_0.create(this._CollapsableSidebarContainer_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._CollapsableSidebarContainer_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.CollapsableSidebarContainer) && (0 === requestNodeIndex))) { return this._CollapsableSidebarContainer_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._CollapsableSidebarContainer_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const CollapsableSidebarContainerNgFactory:import8.ComponentFactory<import0.CollapsableSidebarContainer> = new import8.ComponentFactory<import0.CollapsableSidebarContainer>('collapsable-sidebar',View_CollapsableSidebarContainer_Host0,import0.CollapsableSidebarContainer);
const styles_CollapsableSidebarContainer:any[] = ([] as any[]);
const nodeDebugInfos_CollapsableSidebarContainer1:import2.StaticNodeDebugInfo[] = ([] as any[]);
class View_CollapsableSidebarContainer1 extends import1.DebugAppView<any> {
  _el_0:any;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CollapsableSidebarContainer1,renderType_CollapsableSidebarContainer,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CollapsableSidebarContainer1,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this.debug((null as any),6,12);
    this._el_0 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    this.visitProjectedNodes(0,cb,ctx);
    cb(this._el_0,ctx);
  }
}
const nodeDebugInfos_CollapsableSidebarContainer0:import2.StaticNodeDebugInfo[] = [
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import11.TemplateRef,
    import12.NgIf
  ]
  ,(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_CollapsableSidebarContainer:import3.RenderComponentType = import4.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/src/common/containers/collapsable-sidebar/collapsable-sidebar.container.ts class CollapsableSidebarContainer - inline template',1,import5.ViewEncapsulation.None,styles_CollapsableSidebarContainer,{});
export class View_CollapsableSidebarContainer0 extends import1.DebugAppView<import0.CollapsableSidebarContainer> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _text_7:any;
  _anchor_8:any;
  /*private*/ _vc_8:import10.ViewContainer;
  _TemplateRef_8_5:any;
  _NgIf_8_6:import13.Wrapper_NgIf;
  _text_9:any;
  _text_10:any;
  /*private*/ _expr_14:any;
  _pipe_async_0:import14.AsyncPipe;
  /*private*/ _expr_16:any;
  _pipe_async_1:import14.AsyncPipe;
  /*private*/ _expr_18:any;
  _pipe_async_2:import14.AsyncPipe;
  _pipe_async_3:import14.AsyncPipe;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CollapsableSidebarContainer0,renderType_CollapsableSidebarContainer,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CollapsableSidebarContainer0);
    this._expr_14 = import15.UNINITIALIZED;
    this._expr_16 = import15.UNINITIALIZED;
    this._expr_18 = import15.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',this.debug(0,0,0));
    this._el_1 = import4.createRenderElement(this.renderer,parentRenderNode,'div',new import4.InlineArray2(2,'class','collapsable-part'),this.debug(1,1,8));
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',this.debug(2,1,80));
    this._el_3 = import4.createRenderElement(this.renderer,this._el_1,'button',new import4.InlineArray2(2,'class','btn btn-primary btn-collapsable'),this.debug(3,2,12));
    this._text_4 = this.renderer.createText(this._el_3,'\n                ',this.debug(4,2,79));
    this._el_5 = import4.createRenderElement(this.renderer,this._el_3,'i',new import4.InlineArray2(2,'class','fa'),this.debug(5,3,16));
    this._text_6 = this.renderer.createText(this._el_3,'\n            ',this.debug(6,4,82));
    this._text_7 = this.renderer.createText(this._el_1,'\n            ',this.debug(7,5,21));
    this._anchor_8 = this.renderer.createTemplateAnchor(this._el_1,this.debug(8,6,12));
    this._vc_8 = new import10.ViewContainer(8,1,this,this._anchor_8);
    this._TemplateRef_8_5 = new import11.TemplateRef_(this,8,this._anchor_8);
    this._NgIf_8_6 = new import13.Wrapper_NgIf(this._vc_8.vcRef,this._TemplateRef_8_5);
    this._text_9 = this.renderer.createText(this._el_1,'\n        ',this.debug(9,6,77));
    this._text_10 = this.renderer.createText(parentRenderNode,'\n    ',this.debug(10,7,14));
    this.debug((null as any),(null as any),(null as any));
    this._pipe_async_0 = new import14.AsyncPipe(this.ref);
    var disposable_0:Function = import4.subscribeToRenderElement(this,this._el_3,new import4.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_3));
    this._pipe_async_1 = new import14.AsyncPipe(this.ref);
    this._pipe_async_2 = new import14.AsyncPipe(this.ref);
    this._pipe_async_3 = new import14.AsyncPipe(this.ref);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._anchor_8,
      this._text_9,
      this._text_10
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.TemplateRef) && (8 === requestNodeIndex))) { return this._TemplateRef_8_5; }
    if (((token === import12.NgIf) && (8 === requestNodeIndex))) { return this._NgIf_8_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import15.ValueUnwrapper();
    this.debug(8,6,24);
    valUnwrapper.reset();
    const currVal_8_0_0:any = (valUnwrapper.unwrap(this._pipe_async_3.transform(this.context.isCollapsed$)) === false);
    this._NgIf_8_6.check_ngIf(currVal_8_0_0,throwOnChange,valUnwrapper.hasWrappedValue);
    this._NgIf_8_6.ngDoCheck(this,this._anchor_8,throwOnChange);
    this._vc_8.detectChangesInNestedViews(throwOnChange);
    this.debug(1,1,38);
    valUnwrapper.reset();
    const currVal_14:any = valUnwrapper.unwrap(this._pipe_async_0.transform(this.context.isCollapsed$));
    if ((valUnwrapper.hasWrappedValue || import4.checkBinding(throwOnChange,this._expr_14,currVal_14))) {
      this.renderer.setElementClass(this._el_1,'is-collapsed',currVal_14);
      this._expr_14 = currVal_14;
    }
    this.debug(5,3,30);
    valUnwrapper.reset();
    const currVal_16:any = valUnwrapper.unwrap(this._pipe_async_1.transform(this.context.isCollapsed$));
    if ((valUnwrapper.hasWrappedValue || import4.checkBinding(throwOnChange,this._expr_16,currVal_16))) {
      this.renderer.setElementClass(this._el_5,'fa-chevron-right',currVal_16);
      this._expr_16 = currVal_16;
    }
    this.debug(5,4,20);
    valUnwrapper.reset();
    const currVal_18:any = (valUnwrapper.unwrap(this._pipe_async_2.transform(this.context.isCollapsed$)) === false);
    if ((valUnwrapper.hasWrappedValue || import4.checkBinding(throwOnChange,this._expr_18,currVal_18))) {
      this.renderer.setElementClass(this._el_5,'fa-chevron-left',currVal_18);
      this._expr_18 = currVal_18;
    }
  }
  destroyInternal():void {
    this._vc_8.destroyNestedViews();
    this.debug(8,6,12);
    this._pipe_async_0.ngOnDestroy();
    this._pipe_async_1.ngOnDestroy();
    this._pipe_async_2.ngOnDestroy();
    this._pipe_async_3.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 8)) { return new View_CollapsableSidebarContainer1(this.viewUtils,this,8,this._anchor_8,this._vc_8); }
    return (null as any);
  }
  handleEvent_3(eventName:string,$event:any):boolean {
    this.debug(3,2,12);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.toggle()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}