/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './register.container';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/debug_context';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../authentication.sandbox';
import * as import10 from '@angular/router/src/router';
import * as import11 from '../../../common/components/panel/panel.component';
import * as import12 from '../../components/register/register.component';
import * as import13 from '../../../common/components/panel/panel.component.ngfactory';
import * as import14 from '../../components/register/register.component.ngfactory';
import * as import15 from '@angular/common/src/pipes/async_pipe';
import * as import16 from '@angular/forms/src/form_builder';
import * as import17 from '@angular/core/src/change_detection/change_detection_util';
export class Wrapper_RegisterContainer {
  /*private*/ _eventHandler:Function;
  context:import0.RegisterContainer;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.RegisterContainer(p0,p1);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_RegisterContainer_Host0:import2.StaticNodeDebugInfo[] = [new import2.StaticNodeDebugInfo([import0.RegisterContainer],import0.RegisterContainer,{})];
var renderType_RegisterContainer_Host:import3.RenderComponentType = import4.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_RegisterContainer_Host0 extends import1.DebugAppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.RegisterContainer>;
  _RegisterContainer_0_3:Wrapper_RegisterContainer;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_RegisterContainer_Host0,renderType_RegisterContainer_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_RegisterContainer_Host0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'register-hidden',import4.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_RegisterContainer0(this.viewUtils,this,0,this._el_0);
    this._RegisterContainer_0_3 = new Wrapper_RegisterContainer(this.injectorGet(import9.AuthenticationSandbox,this.parentIndex),this.injectorGet(import10.Router,this.parentIndex));
    this.compView_0.create(this._RegisterContainer_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._RegisterContainer_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.RegisterContainer) && (0 === requestNodeIndex))) { return this._RegisterContainer_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._RegisterContainer_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._RegisterContainer_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const RegisterContainerNgFactory:import8.ComponentFactory<import0.RegisterContainer> = new import8.ComponentFactory<import0.RegisterContainer>('register-hidden',View_RegisterContainer_Host0,import0.RegisterContainer);
const styles_RegisterContainer:any[] = ([] as any[]);
const nodeDebugInfos_RegisterContainer0:import2.StaticNodeDebugInfo[] = [
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([import11.PanelComponent],import11.PanelComponent,{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([import12.RegisterComponent],import12.RegisterComponent,{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_RegisterContainer:import3.RenderComponentType = import4.createRenderComponentType('/Users/jonoforbes/Developer/Ether/winecellar/src/authentication/containers/register/register.container.ts class RegisterContainer - inline template',0,import5.ViewEncapsulation.None,styles_RegisterContainer,{});
export class View_RegisterContainer0 extends import1.DebugAppView<import0.RegisterContainer> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  compView_3:import1.AppView<import11.PanelComponent>;
  _PanelComponent_3_3:import13.Wrapper_PanelComponent;
  _text_4:any;
  _el_5:any;
  compView_5:import1.AppView<import12.RegisterComponent>;
  _RegisterComponent_5_3:import14.Wrapper_RegisterComponent;
  _text_6:any;
  _text_7:any;
  _text_8:any;
  _pipe_async_0:import15.AsyncPipe;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_RegisterContainer0,renderType_RegisterContainer,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_RegisterContainer0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',this.debug(0,0,0));
    this._el_1 = import4.createRenderElement(this.renderer,parentRenderNode,'div',new import4.InlineArray2(2,'class','container'),this.debug(1,1,4));
    this._text_2 = this.renderer.createText(this._el_1,'\n        ',this.debug(2,1,27));
    this._el_3 = import4.createRenderElement(this.renderer,this._el_1,'panel',new import4.InlineArray2(2,'style','background-color: #444'),this.debug(3,2,8));
    this.compView_3 = new import13.View_PanelComponent0(this.viewUtils,this,3,this._el_3);
    this._PanelComponent_3_3 = new import13.Wrapper_PanelComponent();
    this._text_4 = this.renderer.createText((null as any),'          \n            ',this.debug(4,2,86));
    this._el_5 = import4.createRenderElement(this.renderer,(null as any),'register',import4.EMPTY_INLINE_ARRAY,this.debug(5,3,12));
    this.compView_5 = new import14.View_RegisterComponent0(this.viewUtils,this,5,this._el_5);
    this._RegisterComponent_5_3 = new import14.Wrapper_RegisterComponent(this.parentView.injectorGet(import16.FormBuilder,this.parentIndex));
    this.compView_5.create(this._RegisterComponent_5_3.context);
    this._text_6 = this.renderer.createText((null as any),'\n        ',this.debug(6,3,92));
    this.compView_3.create(this._PanelComponent_3_3.context);
    this._text_7 = this.renderer.createText(this._el_1,'\n    ',this.debug(7,4,16));
    this._text_8 = this.renderer.createText(parentRenderNode,'\n      ',this.debug(8,5,10));
    var disposable_0:Function = import4.subscribeToRenderElement(this,this._el_5,new import4.InlineArray2(2,'authenticate',(null as any)),this.eventHandler(this.handleEvent_5));
    this._RegisterComponent_5_3.subscribe(this,this.eventHandler(this.handleEvent_5),true);
    this.debug((null as any),(null as any),(null as any));
    this._pipe_async_0 = new import15.AsyncPipe(this.ref);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._text_8
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.RegisterComponent) && (5 === requestNodeIndex))) { return this._RegisterComponent_5_3.context; }
    if (((token === import11.PanelComponent) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._PanelComponent_3_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import17.ValueUnwrapper();
    this.debug(3,2,46);
    const currVal_3_0_0:any = 'You are not authenticated!';
    this._PanelComponent_3_3.check_header(currVal_3_0_0,throwOnChange,false);
    if (this._PanelComponent_3_3.ngDoCheck(this,this._el_3,throwOnChange)) { this.compView_3.markAsCheckOnce(); }
    this.debug(5,3,56);
    valUnwrapper.reset();
    const currVal_5_0_0:any = valUnwrapper.unwrap(this._pipe_async_0.transform(this.context.isBusy$));
    this._RegisterComponent_5_3.check_isBusy(currVal_5_0_0,throwOnChange,valUnwrapper.hasWrappedValue);
    this._RegisterComponent_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    this.compView_3.internalDetectChanges(throwOnChange);
    this.compView_5.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_3.destroy();
    this.compView_5.destroy();
    this._RegisterComponent_5_3.ngOnDestroy();
    this.debug(5,3,12);
    this.debug(3,2,8);
    this._pipe_async_0.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 3) && (ngContentIndex == 0))) {
      cb(this._text_4,ctx);
      cb(this._el_5,ctx);
      cb(this._text_6,ctx);
    }
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.debug(5,3,12);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'authenticate')) {
      const pd_sub_0:any = ((<any>this.context.register($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}