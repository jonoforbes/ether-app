/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './comments-bar.container';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/debug_context';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../comments.sandbox';
import * as import10 from '../comment-form-group/comment-form-group.container';
import * as import11 from '../comment-form-group/comment-form-group.container.ngfactory';
import * as import12 from '@angular/forms/src/form_builder';
export class Wrapper_CommentsBarContainer {
  /*private*/ _eventHandler:Function;
  context:import0.CommentsBarContainer;
  /*private*/ _changed:boolean;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.CommentsBarContainer(p0);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_CommentsBarContainer_Host0:import2.StaticNodeDebugInfo[] = [new import2.StaticNodeDebugInfo([import0.CommentsBarContainer],import0.CommentsBarContainer,{})];
var renderType_CommentsBarContainer_Host:import3.RenderComponentType = import4.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CommentsBarContainer_Host0 extends import1.DebugAppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.CommentsBarContainer>;
  _CommentsBarContainer_0_3:Wrapper_CommentsBarContainer;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CommentsBarContainer_Host0,renderType_CommentsBarContainer_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CommentsBarContainer_Host0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'comments-bar',import4.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_CommentsBarContainer0(this.viewUtils,this,0,this._el_0);
    this._CommentsBarContainer_0_3 = new Wrapper_CommentsBarContainer(this.injectorGet(import9.CommentsSandbox,this.parentIndex));
    this.compView_0.create(this._CommentsBarContainer_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._CommentsBarContainer_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.CommentsBarContainer) && (0 === requestNodeIndex))) { return this._CommentsBarContainer_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._CommentsBarContainer_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CommentsBarContainer_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const CommentsBarContainerNgFactory:import8.ComponentFactory<import0.CommentsBarContainer> = new import8.ComponentFactory<import0.CommentsBarContainer>('comments-bar',View_CommentsBarContainer_Host0,import0.CommentsBarContainer);
const styles_CommentsBarContainer:any[] = ([] as any[]);
const nodeDebugInfos_CommentsBarContainer0:import2.StaticNodeDebugInfo[] = [
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([import10.CommentFormGroupContainer],import10.CommentFormGroupContainer,{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_CommentsBarContainer:import3.RenderComponentType = import4.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/src/comments/containers/comments-bar/comments-bar.container.ts class CommentsBarContainer - inline template',0,import5.ViewEncapsulation.None,styles_CommentsBarContainer,{});
export class View_CommentsBarContainer0 extends import1.DebugAppView<import0.CommentsBarContainer> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _text_3:any;
  _el_4:any;
  compView_4:import1.AppView<import10.CommentFormGroupContainer>;
  _CommentFormGroupContainer_4_3:import11.Wrapper_CommentFormGroupContainer;
  _text_5:any;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CommentsBarContainer0,renderType_CommentsBarContainer,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_CommentsBarContainer0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',this.debug(0,0,0));
    this._el_1 = import4.createRenderElement(this.renderer,parentRenderNode,'h2',import4.EMPTY_INLINE_ARRAY,this.debug(1,1,8));
    this._text_2 = this.renderer.createText(this._el_1,'Comments',this.debug(2,1,12));
    this._text_3 = this.renderer.createText(parentRenderNode,'  \n        ',this.debug(3,1,25));
    this._el_4 = import4.createRenderElement(this.renderer,parentRenderNode,'comment-form-group',import4.EMPTY_INLINE_ARRAY,this.debug(4,2,8));
    this.compView_4 = new import11.View_CommentFormGroupContainer0(this.viewUtils,this,4,this._el_4);
    this._CommentFormGroupContainer_4_3 = new import11.Wrapper_CommentFormGroupContainer(this.parentView.injectorGet(import12.FormBuilder,this.parentIndex));
    this.compView_4.create(this._CommentFormGroupContainer_4_3.context);
    this._text_5 = this.renderer.createText(parentRenderNode,'  \n    ',this.debug(5,2,73));
    var disposable_0:Function = import4.subscribeToRenderElement(this,this._el_4,new import4.InlineArray2(2,'save',(null as any)),this.eventHandler(this.handleEvent_4));
    this._CommentFormGroupContainer_4_3.subscribe(this,this.eventHandler(this.handleEvent_4),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._text_3,
      this._el_4,
      this._text_5
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.CommentFormGroupContainer) && (4 === requestNodeIndex))) { return this._CommentFormGroupContainer_4_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(4,2,8);
    if (this._CommentFormGroupContainer_4_3.ngDoCheck(this,this._el_4,throwOnChange)) { this.compView_4.markAsCheckOnce(); }
    this.compView_4.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_4.destroy();
    this._CommentFormGroupContainer_4_3.ngOnDestroy();
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.debug(4,2,8);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'save')) {
      const pd_sub_0:any = ((<any>this.context.onSave($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}