/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './comments-list.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/core/src/linker/view_container';
import * as import11 from '@angular/core/src/linker/template_ref';
import * as import12 from '@angular/common/src/directives/ng_for';
import * as import13 from '../../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import14 from '@angular/common/src/pipes/date_pipe';
import * as import15 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import16 from '@angular/core/src/i18n/tokens';
export class Wrapper_CommentsListComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CommentsListComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  constructor() {
    this._changed = false;
    this.context = new import0.CommentsListComponent();
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_comments(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.comments = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_CommentsListComponent_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import0.CommentsListComponent],import0.CommentsListComponent,{})];
var renderType_CommentsListComponent_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_CommentsListComponent_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CommentsListComponent>;
  _CommentsListComponent_0_3:Wrapper_CommentsListComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CommentsListComponent_Host0,renderType_CommentsListComponent_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CommentsListComponent_Host0);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'comments-list',import3.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_CommentsListComponent0(this.viewUtils,this,0,this._el_0);
    this._CommentsListComponent_0_3 = new Wrapper_CommentsListComponent();
    this.compView_0.create(this._CommentsListComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import9.ComponentRef_<any>(0,this,this._el_0,this._CommentsListComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.CommentsListComponent) && (0 === requestNodeIndex))) { return this._CommentsListComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._CommentsListComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const CommentsListComponentNgFactory:import9.ComponentFactory<import0.CommentsListComponent> = new import9.ComponentFactory<import0.CommentsListComponent>('comments-list',View_CommentsListComponent_Host0,import0.CommentsListComponent);
const styles_CommentsListComponent:any[] = ([] as any[]);
const nodeDebugInfos_CommentsListComponent1:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_CommentsListComponent1 extends import2.DebugAppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  _text_10:any;
  _el_11:any;
  _text_12:any;
  _text_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  _pipe_date_0_0:any;
  _pipe_date_0_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import10.ViewContainer) {
    super(View_CommentsListComponent1,renderType_CommentsListComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CommentsListComponent1,declaredViewContainer);
    this._expr_14 = import1.UNINITIALIZED;
    this._expr_15 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','commentItem'),this.debug(0,1,8));
    this._text_1 = this.renderer.createText(this._el_0,'\n            ',this.debug(1,1,66));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','commentBox'),this.debug(2,2,12));
    this._text_3 = this.renderer.createText(this._el_2,'\n                ',this.debug(3,2,37));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'h2',import3.EMPTY_INLINE_ARRAY,this.debug(4,3,16));
    this._text_5 = this.renderer.createText(this._el_4,'Jono wrote:',this.debug(5,3,20));
    this._text_6 = this.renderer.createText(this._el_2,'\n                ',this.debug(6,3,36));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_2,'h3',import3.EMPTY_INLINE_ARRAY,this.debug(7,4,16));
    this._text_8 = this.renderer.createText(this._el_7,'',this.debug(8,4,20));
    this._text_9 = this.renderer.createText(this._el_2,'\n            ',this.debug(9,4,44));
    this._text_10 = this.renderer.createText(this._el_0,'\n            ',this.debug(10,5,18));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_0,'p',import3.EMPTY_INLINE_ARRAY,this.debug(11,6,12));
    this._text_12 = this.renderer.createText(this._el_11,'',this.debug(12,6,15));
    this._text_13 = this.renderer.createText(this._el_0,'\n        ',this.debug(13,6,96));
    this._pipe_date_0_0 = import3.pureProxy2((<View_CommentsListComponent0>this.parentView)._pipe_date_0.transform.bind((<View_CommentsListComponent0>this.parentView)._pipe_date_0));
    this._pipe_date_0_1 = import3.pureProxy2((<View_CommentsListComponent0>this.parentView)._pipe_date_0.transform.bind((<View_CommentsListComponent0>this.parentView)._pipe_date_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._text_13
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import1.ValueUnwrapper();
    this.debug(8,4,20);
    const currVal_14:any = import3.inlineInterpolate(1,'',this.context.$implicit.content,'');
    if (import3.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setText(this._text_8,currVal_14);
      this._expr_14 = currVal_14;
    }
    this.debug(12,6,15);
    valUnwrapper.reset();
    const currVal_15:any = import3.inlineInterpolate(2,'Added ',valUnwrapper.unwrap(import3.castByValue(this._pipe_date_0_0,(<View_CommentsListComponent0>this.parentView)._pipe_date_0.transform)(this.context.$implicit.createdAt,'jm')),', ',valUnwrapper.unwrap(import3.castByValue(this._pipe_date_0_1,(<View_CommentsListComponent0>this.parentView)._pipe_date_0.transform)(this.context.$implicit.createdAt,'d/M/y')),'');
    if ((valUnwrapper.hasWrappedValue || import3.checkBinding(throwOnChange,this._expr_15,currVal_15))) {
      this.renderer.setText(this._text_12,currVal_15);
      this._expr_15 = currVal_15;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
const nodeDebugInfos_CommentsListComponent0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import11.TemplateRef,
    import12.NgFor
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_CommentsListComponent:import5.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/src/comments/components/comments-list/comments-list.component.ts class CommentsListComponent - inline template',0,import6.ViewEncapsulation.None,styles_CommentsListComponent,{});
export class View_CommentsListComponent0 extends import2.DebugAppView<import0.CommentsListComponent> {
  _text_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import10.ViewContainer;
  _TemplateRef_1_5:any;
  _NgFor_1_6:import13.Wrapper_NgFor;
  _text_2:any;
  _pipe_date_0:import14.DatePipe;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CommentsListComponent0,renderType_CommentsListComponent,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_CommentsListComponent0);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',this.debug(0,0,0));
    this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode,this.debug(1,1,8));
    this._vc_1 = new import10.ViewContainer(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_5 = new import11.TemplateRef_(this,1,this._anchor_1);
    this._NgFor_1_6 = new import13.Wrapper_NgFor(this._vc_1.vcRef,this._TemplateRef_1_5,this.parentView.injectorGet(import15.IterableDiffers,this.parentIndex),this.ref);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n    ',this.debug(2,7,14));
    this.debug((null as any),(null as any),(null as any));
    this._pipe_date_0 = new import14.DatePipe(this.parentView.injectorGet(import16.LOCALE_ID,this.parentIndex));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._anchor_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import12.NgFor) && (1 === requestNodeIndex))) { return this._NgFor_1_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(1,1,33);
    const currVal_1_0_0:any = this.context.comments;
    this._NgFor_1_6.check_ngForOf(currVal_1_0_0,throwOnChange,false);
    this._NgFor_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 1)) { return new View_CommentsListComponent1(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    return (null as any);
  }
}