/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './notes-detail.container';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/debug_context';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../notes.sandbox';
import * as import10 from '@angular/router/src/router_state';
import * as import11 from '@angular/router/src/router';
import * as import12 from '../notes-editor-group/notes-editor-group.container';
import * as import13 from '../notes-editor-group/notes-editor-group.container.ngfactory';
import * as import14 from '@angular/common/src/pipes/async_pipe';
import * as import15 from '@angular/core/src/linker/view_container';
import * as import16 from '@angular/forms/src/form_builder';
import * as import17 from '@angular/core/src/change_detection/change_detection_util';
import * as import18 from '@angular/core/src/linker/template_ref';
import * as import19 from '@angular/common/src/directives/ng_if';
import * as import20 from '../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
export class Wrapper_NotesDetailContainer {
  /*private*/ _eventHandler:Function;
  context:import0.NotesDetailContainer;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import0.NotesDetailContainer(p0,p1,p2);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_NotesDetailContainer_Host0:import2.StaticNodeDebugInfo[] = [new import2.StaticNodeDebugInfo([import0.NotesDetailContainer],import0.NotesDetailContainer,{})];
var renderType_NotesDetailContainer_Host:import3.RenderComponentType = import4.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_NotesDetailContainer_Host0 extends import1.DebugAppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.NotesDetailContainer>;
  _NotesDetailContainer_0_3:Wrapper_NotesDetailContainer;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_NotesDetailContainer_Host0,renderType_NotesDetailContainer_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_NotesDetailContainer_Host0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'notes-detail',import4.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_NotesDetailContainer0(this.viewUtils,this,0,this._el_0);
    this._NotesDetailContainer_0_3 = new Wrapper_NotesDetailContainer(this.injectorGet(import9.NotesSandbox,this.parentIndex),this.injectorGet(import10.ActivatedRoute,this.parentIndex),this.injectorGet(import11.Router,this.parentIndex));
    this.compView_0.create(this._NotesDetailContainer_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._NotesDetailContainer_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.NotesDetailContainer) && (0 === requestNodeIndex))) { return this._NotesDetailContainer_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._NotesDetailContainer_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._NotesDetailContainer_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const NotesDetailContainerNgFactory:import8.ComponentFactory<import0.NotesDetailContainer> = new import8.ComponentFactory<import0.NotesDetailContainer>('notes-detail',View_NotesDetailContainer_Host0,import0.NotesDetailContainer);
const styles_NotesDetailContainer:any[] = ([] as any[]);
const nodeDebugInfos_NotesDetailContainer1:import2.StaticNodeDebugInfo[] = [
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([import12.NotesEditorGroupContainer],import12.NotesEditorGroupContainer,{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_NotesDetailContainer1 extends import1.DebugAppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import1.AppView<import12.NotesEditorGroupContainer>;
  _NotesEditorGroupContainer_2_3:import13.Wrapper_NotesEditorGroupContainer;
  _text_3:any;
  _pipe_async_0:import14.AsyncPipe;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import15.ViewContainer) {
    super(View_NotesDetailContainer1,renderType_NotesDetailContainer,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_NotesDetailContainer1,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.createRenderElement(this.renderer,(null as any),'div',import4.EMPTY_INLINE_ARRAY,this.debug(0,4,8));
    this._text_1 = this.renderer.createText(this._el_0,'\n            ',this.debug(1,4,39));
    this._el_2 = import4.createRenderElement(this.renderer,this._el_0,'notes-editor-group',import4.EMPTY_INLINE_ARRAY,this.debug(2,5,12));
    this.compView_2 = new import13.View_NotesEditorGroupContainer0(this.viewUtils,this,2,this._el_2);
    this._NotesEditorGroupContainer_2_3 = new import13.Wrapper_NotesEditorGroupContainer(this.parentView.parentView.injectorGet(import9.NotesSandbox,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import16.FormBuilder,this.parentView.parentIndex));
    this.compView_2.create(this._NotesEditorGroupContainer_2_3.context);
    this._text_3 = this.renderer.createText(this._el_0,'\n        ',this.debug(3,5,132));
    var disposable_0:Function = import4.subscribeToRenderElement(this,this._el_2,new import4.InlineArray4(4,'onSave',(null as any),'remove',(null as any)),this.eventHandler(this.handleEvent_2));
    this._NotesEditorGroupContainer_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),true,true);
    this.debug((null as any),(null as any),(null as any));
    this._pipe_async_0 = new import14.AsyncPipe(this.parentView.ref);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.NotesEditorGroupContainer) && (2 === requestNodeIndex))) { return this._NotesEditorGroupContainer_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import17.ValueUnwrapper();
    this.debug(2,5,32);
    valUnwrapper.reset();
    const currVal_2_0_0:any = valUnwrapper.unwrap(this._pipe_async_0.transform(this.parentView.context.editNote$));
    this._NotesEditorGroupContainer_2_3.check_note(currVal_2_0_0,throwOnChange,valUnwrapper.hasWrappedValue);
    if (this._NotesEditorGroupContainer_2_3.ngDoCheck(this,this._el_2,throwOnChange)) { this.compView_2.markAsCheckOnce(); }
    this.compView_2.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_2.destroy();
    this._NotesEditorGroupContainer_2_3.ngOnDestroy();
    this.debug(2,5,12);
    this._pipe_async_0.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.debug(2,5,12);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onSave')) {
      const pd_sub_0:any = ((<any>this.parentView.context.onSave($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'remove')) {
      const pd_sub_1:any = ((<any>this.parentView.context.onRemove($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
const nodeDebugInfos_NotesDetailContainer0:import2.StaticNodeDebugInfo[] = [
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import18.TemplateRef,
    import19.NgIf
  ]
  ,(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_NotesDetailContainer:import3.RenderComponentType = import4.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/src/notes/containers/notes-detail/notes-detail.container.ts class NotesDetailContainer - inline template',0,import5.ViewEncapsulation.None,styles_NotesDetailContainer,{});
export class View_NotesDetailContainer0 extends import1.DebugAppView<import0.NotesDetailContainer> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import15.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import20.Wrapper_NgIf;
  _text_4:any;
  _text_5:any;
  _pipe_async_0:import14.AsyncPipe;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_NotesDetailContainer0,renderType_NotesDetailContainer,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_NotesDetailContainer0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',this.debug(0,0,0));
    this._el_1 = import4.createRenderElement(this.renderer,parentRenderNode,'div',new import4.InlineArray2(2,'class','example-scrolling-content'),this.debug(1,1,4));
    this._text_2 = this.renderer.createText(this._el_1,'\n        \n        \n        ',this.debug(2,1,43));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,this.debug(3,4,8));
    this._vc_3 = new import15.ViewContainer(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import18.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import20.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(this._el_1,'\n        \n    ',this.debug(4,6,14));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n    ',this.debug(5,8,10));
    this.debug((null as any),(null as any),(null as any));
    this._pipe_async_0 = new import14.AsyncPipe(this.ref);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._text_5
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import19.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import17.ValueUnwrapper();
    this.debug(3,4,13);
    valUnwrapper.reset();
    const currVal_3_0_0:any = valUnwrapper.unwrap(this._pipe_async_0.transform(this.context.editNote$));
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,valUnwrapper.hasWrappedValue);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
    this.debug(3,4,8);
    this._pipe_async_0.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 3)) { return new View_NotesDetailContainer1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
}