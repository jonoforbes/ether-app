/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './notes-editor-group.container';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '../../notes.sandbox';
import * as import11 from '@angular/forms/src/form_builder';
import * as import12 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import13 from '@angular/forms/src/directives/control_container';
import * as import14 from '@angular/forms/src/directives/ng_control_status';
import * as import15 from '../../components/detail-header/detail-header.component';
import * as import16 from '../../components/detail-editor/detail-editor.component';
import * as import17 from '../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import18 from '../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import19 from '../../components/detail-header/detail-header.component.ngfactory';
import * as import20 from '../../components/detail-editor/detail-editor.component.ngfactory';
import * as import21 from '@angular/router/src/router';
export class Wrapper_NotesEditorGroupContainer {
  /*private*/ _eventHandler:Function;
  context:import0.NotesEditorGroupContainer;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  subscription0:any;
  subscription1:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.NotesEditorGroupContainer(p0,p1);
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
  }
  check_note(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.note = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onSave.subscribe(_eventHandler.bind(view,'onSave'))); }
    if (emit1) { (this.subscription1 = this.context.remove.subscribe(_eventHandler.bind(view,'remove'))); }
  }
}
const nodeDebugInfos_NotesEditorGroupContainer_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import0.NotesEditorGroupContainer],import0.NotesEditorGroupContainer,{})];
var renderType_NotesEditorGroupContainer_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_NotesEditorGroupContainer_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.NotesEditorGroupContainer>;
  _NotesEditorGroupContainer_0_3:Wrapper_NotesEditorGroupContainer;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_NotesEditorGroupContainer_Host0,renderType_NotesEditorGroupContainer_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_NotesEditorGroupContainer_Host0);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'notes-editor-group',import3.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_NotesEditorGroupContainer0(this.viewUtils,this,0,this._el_0);
    this._NotesEditorGroupContainer_0_3 = new Wrapper_NotesEditorGroupContainer(this.injectorGet(import10.NotesSandbox,this.parentIndex),this.injectorGet(import11.FormBuilder,this.parentIndex));
    this.compView_0.create(this._NotesEditorGroupContainer_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import9.ComponentRef_<any>(0,this,this._el_0,this._NotesEditorGroupContainer_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.NotesEditorGroupContainer) && (0 === requestNodeIndex))) { return this._NotesEditorGroupContainer_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._NotesEditorGroupContainer_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._NotesEditorGroupContainer_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const NotesEditorGroupContainerNgFactory:import9.ComponentFactory<import0.NotesEditorGroupContainer> = new import9.ComponentFactory<import0.NotesEditorGroupContainer>('notes-editor-group',View_NotesEditorGroupContainer_Host0,import0.NotesEditorGroupContainer);
const styles_NotesEditorGroupContainer:any[] = ([] as any[]);
const nodeDebugInfos_NotesEditorGroupContainer0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import12.FormGroupDirective,
    import13.ControlContainer,
    import14.NgControlStatusGroup
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([import15.NotesDetailHeaderComponent],import15.NotesDetailHeaderComponent,{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([import16.NotesDetailEditorComponent],import16.NotesDetailEditorComponent,{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_NotesEditorGroupContainer:import5.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/winecellar/src/notes/containers/notes-editor-group/notes-editor-group.container.ts class NotesEditorGroupContainer - inline template',0,import6.ViewEncapsulation.None,styles_NotesEditorGroupContainer,{});
export class View_NotesEditorGroupContainer0 extends import2.DebugAppView<import0.NotesEditorGroupContainer> {
  _text_0:any;
  _el_1:any;
  _FormGroupDirective_1_3:import17.Wrapper_FormGroupDirective;
  _ControlContainer_1_4:any;
  _NgControlStatusGroup_1_5:import18.Wrapper_NgControlStatusGroup;
  _text_2:any;
  _el_3:any;
  compView_3:import2.AppView<import15.NotesDetailHeaderComponent>;
  _NotesDetailHeaderComponent_3_3:import19.Wrapper_NotesDetailHeaderComponent;
  _text_4:any;
  _el_5:any;
  compView_5:import2.AppView<import16.NotesDetailEditorComponent>;
  _NotesDetailEditorComponent_5_3:import20.Wrapper_NotesDetailEditorComponent;
  _text_6:any;
  _text_7:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_NotesEditorGroupContainer0,renderType_NotesEditorGroupContainer,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_NotesEditorGroupContainer0);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    \n        \n        ',this.debug(0,0,0));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'form',new import3.InlineArray2(2,'novalidate',''),this.debug(1,3,8));
    this._FormGroupDirective_1_3 = new import17.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_1_4 = this._FormGroupDirective_1_3.context;
    this._NgControlStatusGroup_1_5 = new import18.Wrapper_NgControlStatusGroup(this._ControlContainer_1_4);
    this._text_2 = this.renderer.createText(this._el_1,'\n\n        ',this.debug(2,3,72));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'notes-detail-header',import3.EMPTY_INLINE_ARRAY,this.debug(3,5,8));
    this.compView_3 = new import19.View_NotesDetailHeaderComponent0(this.viewUtils,this,3,this._el_3);
    this._NotesDetailHeaderComponent_3_3 = new import19.Wrapper_NotesDetailHeaderComponent();
    this.compView_3.create(this._NotesDetailHeaderComponent_3_3.context);
    this._text_4 = this.renderer.createText(this._el_1,'\n   \n        \n\n\n        ',this.debug(4,5,123));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_1,'notes-detail-editor',import3.EMPTY_INLINE_ARRAY,this.debug(5,10,8));
    this.compView_5 = new import20.View_NotesDetailEditorComponent0(this.viewUtils,this,5,this._el_5);
    this._NotesDetailEditorComponent_5_3 = new import20.Wrapper_NotesDetailEditorComponent(this.parentView.injectorGet(import21.Router,this.parentIndex));
    this.compView_5.create(this._NotesDetailEditorComponent_5_3.context);
    this._text_6 = this.renderer.createText(this._el_1,'\n    ',this.debug(6,10,104));
    this._text_7 = this.renderer.createText(parentRenderNode,'\n        \n    \n    ',this.debug(7,11,11));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray8(6,'ngSubmit',(null as any),'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_1));
    this._FormGroupDirective_1_3.subscribe(this,this.eventHandler(this.handleEvent_1),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_3,new import3.InlineArray2(2,'submitForm',(null as any)),this.eventHandler(this.handleEvent_3));
    this._NotesDetailHeaderComponent_3_3.subscribe(this,this.eventHandler(this.handleEvent_3),true);
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_5,new import3.InlineArray2(2,'remove',(null as any)),this.eventHandler(this.handleEvent_5));
    this._NotesDetailEditorComponent_5_3.subscribe(this,this.eventHandler(this.handleEvent_5),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.NotesDetailHeaderComponent) && (3 === requestNodeIndex))) { return this._NotesDetailHeaderComponent_3_3.context; }
    if (((token === import16.NotesDetailEditorComponent) && (5 === requestNodeIndex))) { return this._NotesDetailEditorComponent_5_3.context; }
    if (((token === import12.FormGroupDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._FormGroupDirective_1_3.context; }
    if (((token === import13.ControlContainer) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._ControlContainer_1_4; }
    if (((token === import14.NgControlStatusGroup) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._NgControlStatusGroup_1_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(1,3,14);
    const currVal_1_0_0:any = this.context.noteForm;
    this._FormGroupDirective_1_3.check_form(currVal_1_0_0,throwOnChange,false);
    this._FormGroupDirective_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this.debug(1,3,8);
    this._NgControlStatusGroup_1_5.ngDoCheck(this,this._el_1,throwOnChange);
    this.debug(3,5,29);
    const currVal_3_0_0:any = this.context.noteForm;
    this._NotesDetailHeaderComponent_3_3.check_noteForm(currVal_3_0_0,throwOnChange,false);
    this.debug(3,5,56);
    const currVal_3_0_1:any = this.context.note;
    this._NotesDetailHeaderComponent_3_3.check_note(currVal_3_0_1,throwOnChange,false);
    this._NotesDetailHeaderComponent_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    this.debug(5,10,29);
    const currVal_5_0_0:any = this.context.noteForm;
    this._NotesDetailEditorComponent_5_3.check_noteForm(currVal_5_0_0,throwOnChange,false);
    if (this._NotesDetailEditorComponent_5_3.ngDoCheck(this,this._el_5,throwOnChange)) { this.compView_5.markAsCheckOnce(); }
    this._NgControlStatusGroup_1_5.checkHost(this,this,this._el_1,throwOnChange);
    this.compView_3.internalDetectChanges(throwOnChange);
    this.compView_5.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_3.destroy();
    this.compView_5.destroy();
    this._NotesDetailHeaderComponent_3_3.ngOnDestroy();
    this.debug(3,5,8);
    this._NotesDetailEditorComponent_5_3.ngOnDestroy();
    this.debug(5,10,8);
    this._FormGroupDirective_1_3.ngOnDestroy();
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.debug(1,3,8);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_1_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngSubmit')) {
      const pd_sub_0:any = ((<any>this.context.onSubmit()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_3(eventName:string,$event:any):boolean {
    this.debug(3,5,8);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'submitForm')) {
      const pd_sub_0:any = ((<any>this.context.onSubmit()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.debug(5,10,8);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'remove')) {
      const pd_sub_0:any = ((<any>this.context.onRemove(this.context.note)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}