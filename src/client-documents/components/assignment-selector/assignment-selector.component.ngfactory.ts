/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './assignment-selector.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/debug_context';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/material/menu/menu-item';
import * as import10 from '../../../../node_modules/@angular/material/menu/menu-item.ngfactory';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import12 from '@angular/core/src/change_detection/change_detection_util';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '@angular/material/menu/menu-trigger';
import * as import15 from '@angular/material/core/compatibility/compatibility';
import * as import16 from '@angular/material/menu/menu-directive';
import * as import17 from '@angular/core/src/linker/template_ref';
import * as import18 from '@angular/common/src/directives/ng_for';
import * as import19 from '../../../../node_modules/@angular/material/menu/menu-trigger.ngfactory';
import * as import20 from '../../../../node_modules/@angular/material/core/compatibility/compatibility.ngfactory';
import * as import21 from '../../../../node_modules/@angular/material/menu/menu-directive.ngfactory';
import * as import22 from '@angular/core/src/linker/query_list';
import * as import23 from '../../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import24 from '@angular/material/core/overlay/overlay';
import * as import25 from '@angular/material/core/rtl/dir';
import * as import26 from '@angular/core/src/change_detection/differs/iterable_differs';
export class Wrapper_ClientDocumentAssignmentSelectorComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ClientDocumentAssignmentSelectorComponent;
  /*private*/ _changed:boolean;
  subscription0:any;
  constructor() {
    this._changed = false;
    this.context = new import0.ClientDocumentAssignmentSelectorComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.updateDescription.subscribe(_eventHandler.bind(view,'updateDescription'))); }
  }
}
const nodeDebugInfos_ClientDocumentAssignmentSelectorComponent_Host0:import2.StaticNodeDebugInfo[] = [new import2.StaticNodeDebugInfo([import0.ClientDocumentAssignmentSelectorComponent],import0.ClientDocumentAssignmentSelectorComponent,{})];
var renderType_ClientDocumentAssignmentSelectorComponent_Host:import3.RenderComponentType = import4.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ClientDocumentAssignmentSelectorComponent_Host0 extends import1.DebugAppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.ClientDocumentAssignmentSelectorComponent>;
  _ClientDocumentAssignmentSelectorComponent_0_3:Wrapper_ClientDocumentAssignmentSelectorComponent;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ClientDocumentAssignmentSelectorComponent_Host0,renderType_ClientDocumentAssignmentSelectorComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_ClientDocumentAssignmentSelectorComponent_Host0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'document-assignment-selector',import4.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_ClientDocumentAssignmentSelectorComponent0(this.viewUtils,this,0,this._el_0);
    this._ClientDocumentAssignmentSelectorComponent_0_3 = new Wrapper_ClientDocumentAssignmentSelectorComponent();
    this.compView_0.create(this._ClientDocumentAssignmentSelectorComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ClientDocumentAssignmentSelectorComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ClientDocumentAssignmentSelectorComponent) && (0 === requestNodeIndex))) { return this._ClientDocumentAssignmentSelectorComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._ClientDocumentAssignmentSelectorComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._ClientDocumentAssignmentSelectorComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const ClientDocumentAssignmentSelectorComponentNgFactory:import8.ComponentFactory<import0.ClientDocumentAssignmentSelectorComponent> = new import8.ComponentFactory<import0.ClientDocumentAssignmentSelectorComponent>('document-assignment-selector',View_ClientDocumentAssignmentSelectorComponent_Host0,import0.ClientDocumentAssignmentSelectorComponent);
const styles_ClientDocumentAssignmentSelectorComponent:any[] = ([] as any[]);
const nodeDebugInfos_ClientDocumentAssignmentSelectorComponent1:import2.StaticNodeDebugInfo[] = [
  new import2.StaticNodeDebugInfo([import9.MdMenuItem],import9.MdMenuItem,{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_ClientDocumentAssignmentSelectorComponent1 extends import1.DebugAppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import9.MdMenuItem>;
  _MdMenuItem_0_3:import10.Wrapper_MdMenuItem;
  _el_1:any;
  _text_2:any;
  /*private*/ _expr_5:any;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_ClientDocumentAssignmentSelectorComponent1,renderType_ClientDocumentAssignmentSelectorComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_ClientDocumentAssignmentSelectorComponent1,declaredViewContainer);
    this._expr_5 = import12.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.createRenderElement(this.renderer,(null as any),'button',new import4.InlineArray8(6,'md-menu-item','','role','menuitem','type','button'),this.debug(0,6,8));
    this.compView_0 = new import10.View_MdMenuItem0(this.viewUtils,this,0,this._el_0);
    this._MdMenuItem_0_3 = new import10.Wrapper_MdMenuItem(this.renderer,new import13.ElementRef(this._el_0));
    this._el_1 = import4.createRenderElement(this.renderer,(null as any),'h1',import4.EMPTY_INLINE_ARRAY,this.debug(1,6,135));
    this._text_2 = this.renderer.createText(this._el_1,'',this.debug(2,6,139));
    this.compView_0.create(this._MdMenuItem_0_3.context);
    var disposable_0:Function = import4.subscribeToRenderElement(this,this._el_0,new import4.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1,
      this._text_2
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.MdMenuItem) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 2)))) { return this._MdMenuItem_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,6,8);
    this._MdMenuItem_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._MdMenuItem_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.debug(2,6,139);
    const currVal_5:any = import4.inlineInterpolate(1,'',this.context.$implicit,'');
    if (import4.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setText(this._text_2,currVal_5);
      this._expr_5 = currVal_5;
    }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<View_ClientDocumentAssignmentSelectorComponent0>this.parentView)._query_MdMenuItem_7_0.setDirty();
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) { cb(this._el_1,ctx); }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,6,8);
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdMenuItem_0_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.onUpdateDescription(this.context.$implicit)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
const nodeDebugInfos_ClientDocumentAssignmentSelectorComponent0:import2.StaticNodeDebugInfo[] = [
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import9.MdMenuItem,
    import14.MdMenuTrigger
  ]
  ,import9.MdMenuItem,{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import15.MdPrefixRejector,
    import16.MdMenu
  ]
  ,import16.MdMenu,{statusMenu: import16.MdMenu}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import17.TemplateRef,
    import18.NgFor
  ]
  ,(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_ClientDocumentAssignmentSelectorComponent:import3.RenderComponentType = import4.createRenderComponentType('/Users/jonoforbes/Developer/Ether/winecellar/src/client-documents/components/assignment-selector/assignment-selector.component.ts class ClientDocumentAssignmentSelectorComponent - inline template',0,import5.ViewEncapsulation.None,styles_ClientDocumentAssignmentSelectorComponent,{});
export class View_ClientDocumentAssignmentSelectorComponent0 extends import1.DebugAppView<import0.ClientDocumentAssignmentSelectorComponent> {
  _text_0:any;
  _el_1:any;
  /*private*/ _vc_1:import11.ViewContainer;
  compView_1:import1.AppView<import9.MdMenuItem>;
  _MdMenuItem_1_5:import10.Wrapper_MdMenuItem;
  _MdMenuTrigger_1_6:import19.Wrapper_MdMenuTrigger;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  compView_7:import1.AppView<import16.MdMenu>;
  _MdPrefixRejector_7_3:import20.Wrapper_MdPrefixRejector;
  _MdMenu_7_4:import21.Wrapper_MdMenu;
  _query_MdMenuItem_7_0:import22.QueryList<any>;
  _text_8:any;
  _anchor_9:any;
  /*private*/ _vc_9:import11.ViewContainer;
  _TemplateRef_9_5:any;
  _NgFor_9_6:import23.Wrapper_NgFor;
  _text_10:any;
  _text_11:any;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ClientDocumentAssignmentSelectorComponent0,renderType_ClientDocumentAssignmentSelectorComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_ClientDocumentAssignmentSelectorComponent0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        \n    ',this.debug(0,0,0));
    this._el_1 = import4.createRenderElement(this.renderer,parentRenderNode,'button',new import4.InlineArray8(8,'aria-haspopup','true','md-menu-item','','role','menuitem','type','button'),this.debug(1,2,4));
    this._vc_1 = new import11.ViewContainer(1,(null as any),this,this._el_1);
    this.compView_1 = new import10.View_MdMenuItem0(this.viewUtils,this,1,this._el_1);
    this._MdMenuItem_1_5 = new import10.Wrapper_MdMenuItem(this.renderer,new import13.ElementRef(this._el_1));
    this._MdMenuTrigger_1_6 = new import19.Wrapper_MdMenuTrigger(this.parentView.injectorGet(import24.Overlay,this.parentIndex),new import13.ElementRef(this._el_1),this._vc_1.vcRef,this.renderer,this.parentView.injectorGet(import25.Dir,this.parentIndex,(null as any)));
    this._text_2 = this.renderer.createText((null as any),'\n      ',this.debug(2,2,71));
    this._el_3 = import4.createRenderElement(this.renderer,(null as any),'h1',import4.EMPTY_INLINE_ARRAY,this.debug(3,3,6));
    this._text_4 = this.renderer.createText(this._el_3,'Set Document Role',this.debug(4,3,10));
    this._text_5 = this.renderer.createText((null as any),'\n    ',this.debug(5,3,32));
    this.compView_1.create(this._MdMenuItem_1_5.context);
    this._text_6 = this.renderer.createText(parentRenderNode,'\n    ',this.debug(6,4,13));
    this._el_7 = import4.createRenderElement(this.renderer,parentRenderNode,'md-menu',new import4.InlineArray4(4,'role','menu','x-position','before'),this.debug(7,5,4));
    this.compView_7 = new import21.View_MdMenu0(this.viewUtils,this,7,this._el_7);
    this._MdPrefixRejector_7_3 = new import20.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import15.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdMenu_7_4 = new import21.Wrapper_MdMenu('before',(null as any));
    this._query_MdMenuItem_7_0 = new import22.QueryList<any>();
    this._text_8 = this.renderer.createText((null as any),'\n        ',this.debug(8,5,54));
    this._anchor_9 = this.renderer.createTemplateAnchor((null as any),this.debug(9,6,8));
    this._vc_9 = new import11.ViewContainer(9,7,this,this._anchor_9);
    this._TemplateRef_9_5 = new import17.TemplateRef_(this,9,this._anchor_9);
    this._NgFor_9_6 = new import23.Wrapper_NgFor(this._vc_9.vcRef,this._TemplateRef_9_5,this.parentView.injectorGet(import26.IterableDiffers,this.parentIndex),this.ref);
    this._text_10 = this.renderer.createText((null as any),'\n    ',this.debug(10,6,168));
    this.compView_7.create(this._MdMenu_7_4.context);
    this._text_11 = this.renderer.createText(parentRenderNode,'\n\n    \n    ',this.debug(11,7,14));
    var disposable_0:Function = import4.subscribeToRenderElement(this,this._el_1,new import4.InlineArray4(4,'click',(null as any),'mousedown',(null as any)),this.eventHandler(this.handleEvent_1));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._anchor_9,
      this._text_10,
      this._text_11
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.MdMenuItem) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._MdMenuItem_1_5.context; }
    if (((token === import14.MdMenuTrigger) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._MdMenuTrigger_1_6.context; }
    if (((token === import17.TemplateRef) && (9 === requestNodeIndex))) { return this._TemplateRef_9_5; }
    if (((token === import18.NgFor) && (9 === requestNodeIndex))) { return this._NgFor_9_6.context; }
    if (((token === import15.MdPrefixRejector) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._MdPrefixRejector_7_3.context; }
    if (((token === import16.MdMenu) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._MdMenu_7_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(1,2,4);
    this._MdMenuItem_1_5.ngDoCheck(this,this._el_1,throwOnChange);
    this.debug(1,2,25);
    const currVal_1_1_0:any = this._MdMenu_7_4.context;
    this._MdMenuTrigger_1_6.check_menu(currVal_1_1_0,throwOnChange,false);
    this._MdMenuTrigger_1_6.ngDoCheck(this,this._el_1,throwOnChange);
    this.debug(7,5,4);
    this._MdPrefixRejector_7_3.ngDoCheck(this,this._el_7,throwOnChange);
    this._MdMenu_7_4.ngDoCheck(this,this._el_7,throwOnChange);
    this.debug(9,6,16);
    const currVal_9_0_0:any = this.context.documentDescriptions;
    this._NgFor_9_6.check_ngForOf(currVal_9_0_0,throwOnChange,false);
    this._NgFor_9_6.ngDoCheck(this,this._anchor_9,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
    this._vc_9.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdMenuItem_7_0.dirty) {
          this._query_MdMenuItem_7_0.reset([this._vc_9.mapNestedViews(View_ClientDocumentAssignmentSelectorComponent1,(nestedView:View_ClientDocumentAssignmentSelectorComponent1):any => {
            return [nestedView._MdMenuItem_0_3.context];
        })]);
        this._MdMenu_7_4.context.items = this._query_MdMenuItem_7_0;
        this._query_MdMenuItem_7_0.notifyOnChanges();
      }
      this.debug(7,5,4);
      if ((this.numberOfChecks === 0)) { this._MdMenu_7_4.context.ngAfterContentInit(); }
    }
    this._MdMenuItem_1_5.checkHost(this,this.compView_1,this._el_1,throwOnChange);
    this.compView_1.internalDetectChanges(throwOnChange);
    this.compView_7.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      this.debug(1,2,4);
      if ((this.numberOfChecks === 0)) { this._MdMenuTrigger_1_6.context.ngAfterViewInit(); }
    }
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
    this._vc_9.destroyNestedViews();
    this.compView_1.destroy();
    this.compView_7.destroy();
    this._MdMenuTrigger_1_6.ngOnDestroy();
    this.debug(1,2,4);
    this.debug(9,6,8);
    this._MdMenu_7_4.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 1) && (ngContentIndex == 0))) {
      cb(this._text_2,ctx);
      cb(this._el_3,ctx);
      cb(this._text_5,ctx);
    }
    if (((nodeIndex == 7) && (ngContentIndex == 0))) {
      cb(this._text_8,ctx);
      cb(this._vc_9.nativeElement,ctx);
      this._vc_9.visitNestedViewRootNodes(cb,ctx);
      cb(this._text_10,ctx);
    }
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 9)) { return new View_ClientDocumentAssignmentSelectorComponent1(this.viewUtils,this,9,this._anchor_9,this._vc_9); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.debug(1,2,4);
    this.compView_1.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdMenuItem_1_5.handleEvent(eventName,$event) && result);
    result = (this._MdMenuTrigger_1_6.handleEvent(eventName,$event) && result);
    return result;
  }
}