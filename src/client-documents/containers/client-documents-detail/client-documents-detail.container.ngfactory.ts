/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './client-documents-detail.container';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/debug_context';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../client-documents.sandbox';
import * as import10 from '@angular/router/src/router_state';
import * as import11 from '@angular/router/src/router';
import * as import12 from '@angular/platform-browser/src/security/dom_sanitization_service';
import * as import13 from '@angular/flex-layout/flexbox/api/flex-fill';
import * as import14 from '../../../../node_modules/@angular/flex-layout/flexbox/api/flex-fill.ngfactory';
import * as import15 from '@angular/core/src/linker/view_container';
import * as import16 from '@angular/core/src/change_detection/change_detection_util';
import * as import17 from '@angular/flex-layout/media-query/media-monitor';
import * as import18 from '@angular/core/src/linker/element_ref';
import * as import19 from '@angular/core/src/security';
import * as import20 from '@angular/core/src/linker/template_ref';
import * as import21 from '@angular/common/src/directives/ng_if';
import * as import22 from '../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
export class Wrapper_ClientDocumentsDetailContainer {
  /*private*/ _eventHandler:Function;
  context:import0.ClientDocumentsDetailContainer;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any,p2:any,p3:any) {
    this._changed = false;
    this.context = new import0.ClientDocumentsDetailContainer(p0,p1,p2,p3);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_ClientDocumentsDetailContainer_Host0:import2.StaticNodeDebugInfo[] = [new import2.StaticNodeDebugInfo([import0.ClientDocumentsDetailContainer],import0.ClientDocumentsDetailContainer,{})];
var renderType_ClientDocumentsDetailContainer_Host:import3.RenderComponentType = import4.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ClientDocumentsDetailContainer_Host0 extends import1.DebugAppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.ClientDocumentsDetailContainer>;
  _ClientDocumentsDetailContainer_0_3:Wrapper_ClientDocumentsDetailContainer;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ClientDocumentsDetailContainer_Host0,renderType_ClientDocumentsDetailContainer_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_ClientDocumentsDetailContainer_Host0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'client-documents-detail',import4.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_ClientDocumentsDetailContainer0(this.viewUtils,this,0,this._el_0);
    this._ClientDocumentsDetailContainer_0_3 = new Wrapper_ClientDocumentsDetailContainer(this.injectorGet(import9.ClientDocumentsSandbox,this.parentIndex),this.injectorGet(import10.ActivatedRoute,this.parentIndex),this.injectorGet(import11.Router,this.parentIndex),this.injectorGet(import12.DomSanitizer,this.parentIndex));
    this.compView_0.create(this._ClientDocumentsDetailContainer_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ClientDocumentsDetailContainer_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ClientDocumentsDetailContainer) && (0 === requestNodeIndex))) { return this._ClientDocumentsDetailContainer_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._ClientDocumentsDetailContainer_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._ClientDocumentsDetailContainer_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const ClientDocumentsDetailContainerNgFactory:import8.ComponentFactory<import0.ClientDocumentsDetailContainer> = new import8.ComponentFactory<import0.ClientDocumentsDetailContainer>('client-documents-detail',View_ClientDocumentsDetailContainer_Host0,import0.ClientDocumentsDetailContainer);
const styles_ClientDocumentsDetailContainer:any[] = ([] as any[]);
const nodeDebugInfos_ClientDocumentsDetailContainer1:import2.StaticNodeDebugInfo[] = [new import2.StaticNodeDebugInfo([import13.FlexFillDirective],(null as any),{})];
class View_ClientDocumentsDetailContainer1 extends import1.DebugAppView<any> {
  _el_0:any;
  _FlexFillDirective_0_3:import14.Wrapper_FlexFillDirective;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import15.ViewContainer) {
    super(View_ClientDocumentsDetailContainer1,renderType_ClientDocumentsDetailContainer,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_ClientDocumentsDetailContainer1,declaredViewContainer);
    this._expr_2 = import16.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.createRenderElement(this.renderer,(null as any),'iframe',new import4.InlineArray4(4,'frameborder','0','fxFill',''),this.debug(0,2,4));
    this._FlexFillDirective_0_3 = new import14.Wrapper_FlexFillDirective(this.parentView.parentView.injectorGet(import17.MediaMonitor,this.parentView.parentIndex),new import18.ElementRef(this._el_0),this.renderer);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.FlexFillDirective) && (0 === requestNodeIndex))) { return this._FlexFillDirective_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,2,4);
    this._FlexFillDirective_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.debug(0,2,48);
    const currVal_2:any = this.parentView.context.boxUrl;
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementProperty(this._el_0,'src',this.viewUtils.sanitizer.sanitize(import19.SecurityContext.RESOURCE_URL,currVal_2));
      this._expr_2 = currVal_2;
    }
  }
  destroyInternal():void {
    this._FlexFillDirective_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
const nodeDebugInfos_ClientDocumentsDetailContainer0:import2.StaticNodeDebugInfo[] = [
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import20.TemplateRef,
    import21.NgIf
  ]
  ,(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_ClientDocumentsDetailContainer:import3.RenderComponentType = import4.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/src/client-documents/containers/client-documents-detail/client-documents-detail.container.ts class ClientDocumentsDetailContainer - inline template',0,import5.ViewEncapsulation.None,styles_ClientDocumentsDetailContainer,{});
export class View_ClientDocumentsDetailContainer0 extends import1.DebugAppView<import0.ClientDocumentsDetailContainer> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import15.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import22.Wrapper_NgIf;
  _text_4:any;
  _text_5:any;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ClientDocumentsDetailContainer0,renderType_ClientDocumentsDetailContainer,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_ClientDocumentsDetailContainer0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',this.debug(0,0,0));
    this._el_1 = import4.createRenderElement(this.renderer,parentRenderNode,'div',new import4.InlineArray2(2,'class','iframe-container'),this.debug(1,1,8));
    this._text_2 = this.renderer.createText(this._el_1,'\n    ',this.debug(2,1,38));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,this.debug(3,2,4));
    this._vc_3 = new import15.ViewContainer(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import20.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import22.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(this._el_1,'\n',this.debug(4,2,88));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n\n    ',this.debug(5,3,6));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._text_5
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import21.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(3,2,19);
    const currVal_3_0_0:any = (this.context.fileReceived == true);
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 3)) { return new View_ClientDocumentsDetailContainer1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
}