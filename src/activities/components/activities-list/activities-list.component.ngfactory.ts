/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './activities-list.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '../message-activity/message-activity.component';
import * as import11 from '../message-activity/message-activity.component.ngfactory';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '@angular/router/src/router';
import * as import14 from '@angular/core/src/linker/template_ref';
import * as import15 from '@angular/common/src/directives/ng_if';
import * as import16 from '../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import17 from '@angular/common/src/directives/ng_for';
import * as import18 from '../../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import19 from '../../../common/pipes/order-by.pipe';
import * as import20 from '@angular/core/src/change_detection/differs/iterable_differs';
export class Wrapper_ActivitiesListComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ActivitiesListComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  subscription0:any;
  constructor() {
    this._changed = false;
    this.context = new import0.ActivitiesListComponent();
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_activities(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.activities = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.removeActivity.subscribe(_eventHandler.bind(view,'removeActivity'))); }
  }
}
const nodeDebugInfos_ActivitiesListComponent_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import0.ActivitiesListComponent],import0.ActivitiesListComponent,{})];
var renderType_ActivitiesListComponent_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_ActivitiesListComponent_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.ActivitiesListComponent>;
  _ActivitiesListComponent_0_3:Wrapper_ActivitiesListComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ActivitiesListComponent_Host0,renderType_ActivitiesListComponent_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_ActivitiesListComponent_Host0);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'activities-list',import3.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_ActivitiesListComponent0(this.viewUtils,this,0,this._el_0);
    this._ActivitiesListComponent_0_3 = new Wrapper_ActivitiesListComponent();
    this.compView_0.create(this._ActivitiesListComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import9.ComponentRef_<any>(0,this,this._el_0,this._ActivitiesListComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ActivitiesListComponent) && (0 === requestNodeIndex))) { return this._ActivitiesListComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._ActivitiesListComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._ActivitiesListComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const ActivitiesListComponentNgFactory:import9.ComponentFactory<import0.ActivitiesListComponent> = new import9.ComponentFactory<import0.ActivitiesListComponent>('activities-list',View_ActivitiesListComponent_Host0,import0.ActivitiesListComponent);
const styles_ActivitiesListComponent:any[] = ([] as any[]);
const nodeDebugInfos_ActivitiesListComponent2:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import10.MessageActivityComponent],import10.MessageActivityComponent,{})];
class View_ActivitiesListComponent2 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import10.MessageActivityComponent>;
  _MessageActivityComponent_0_3:import11.Wrapper_MessageActivityComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_ActivitiesListComponent2,renderType_ActivitiesListComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_ActivitiesListComponent2,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'message-activity',import3.EMPTY_INLINE_ARRAY,this.debug(0,2,12));
    this.compView_0 = new import11.View_MessageActivityComponent0(this.viewUtils,this,0,this._el_0);
    this._MessageActivityComponent_0_3 = new import11.Wrapper_MessageActivityComponent(this.parentView.parentView.injectorGet(import13.Router,this.parentView.parentIndex));
    this.compView_0.create(this._MessageActivityComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'remove',(null as any)),this.eventHandler(this.handleEvent_0));
    this._MessageActivityComponent_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true,false);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.MessageActivityComponent) && (0 === requestNodeIndex))) { return this._MessageActivityComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,4,16);
    const currVal_0_0_0:any = this.parentView.context.$implicit;
    this._MessageActivityComponent_0_3.check_activity(currVal_0_0_0,throwOnChange,false);
    if (this._MessageActivityComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MessageActivityComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,2,12);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'remove')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.onRemoveActivity(this.parentView.context.$implicit)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
const nodeDebugInfos_ActivitiesListComponent1:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import14.TemplateRef,
    import15.NgIf
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_ActivitiesListComponent1 extends import2.DebugAppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import12.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import16.Wrapper_NgIf;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_ActivitiesListComponent1,renderType_ActivitiesListComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_ActivitiesListComponent1,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,this.debug(0,1,8));
    this._text_1 = this.renderer.createText(this._el_0,'\n            ',this.debug(1,1,70));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,this.debug(2,2,12));
    this._vc_2 = new import12.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import14.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import16.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(this._el_0,'\n\n        ',this.debug(3,6,32));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import15.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(2,3,16);
    const currVal_2_0_0:any = (this.context.$implicit.type == 'message');
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 2)) { return new View_ActivitiesListComponent2(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
}
const nodeDebugInfos_ActivitiesListComponent0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import14.TemplateRef,
    import17.NgFor
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_ActivitiesListComponent:import5.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/winecellar/src/activities/components/activities-list/activities-list.component.ts class ActivitiesListComponent - inline template',0,import6.ViewEncapsulation.None,styles_ActivitiesListComponent,{});
export class View_ActivitiesListComponent0 extends import2.DebugAppView<import0.ActivitiesListComponent> {
  _text_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import12.ViewContainer;
  _TemplateRef_1_5:any;
  _NgFor_1_6:import18.Wrapper_NgFor;
  _text_2:any;
  _pipe_orderByPipe_0:import19.OrderByPipe;
  _pipe_orderByPipe_0_0:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ActivitiesListComponent0,renderType_ActivitiesListComponent,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_ActivitiesListComponent0);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',this.debug(0,0,0));
    this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode,this.debug(1,1,8));
    this._vc_1 = new import12.ViewContainer(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_5 = new import14.TemplateRef_(this,1,this._anchor_1);
    this._NgFor_1_6 = new import18.Wrapper_NgFor(this._vc_1.vcRef,this._TemplateRef_1_5,this.parentView.injectorGet(import20.IterableDiffers,this.parentIndex),this.ref);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n    ',this.debug(2,8,14));
    this.debug((null as any),(null as any),(null as any));
    this._pipe_orderByPipe_0 = new import19.OrderByPipe();
    this._pipe_orderByPipe_0_0 = import3.pureProxy2(this._pipe_orderByPipe_0.transform.bind(this._pipe_orderByPipe_0));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._anchor_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import17.NgFor) && (1 === requestNodeIndex))) { return this._NgFor_1_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import1.ValueUnwrapper();
    this.debug(1,1,13);
    valUnwrapper.reset();
    const currVal_1_0_0:any = valUnwrapper.unwrap(import3.castByValue(this._pipe_orderByPipe_0_0,this._pipe_orderByPipe_0.transform)(this.context.activities,this.context.order));
    this._NgFor_1_6.check_ngForOf(currVal_1_0_0,throwOnChange,valUnwrapper.hasWrappedValue);
    this._NgFor_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 1)) { return new View_ActivitiesListComponent1(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    return (null as any);
  }
}