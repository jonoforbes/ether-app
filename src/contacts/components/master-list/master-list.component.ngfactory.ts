/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './master-list.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/router/src/router';
import * as import11 from '@angular/flex-layout/flexbox/api/layout';
import * as import12 from '@angular/material/core/compatibility/compatibility';
import * as import13 from '@angular/material/button/button';
import * as import14 from '@angular/material/core/line/line';
import * as import15 from '../contact-menu/contact-menu.component';
import * as import16 from '../../../../node_modules/@angular/flex-layout/flexbox/api/layout.ngfactory';
import * as import17 from '../../../../node_modules/@angular/material/core/compatibility/compatibility.ngfactory';
import * as import18 from '../../../../node_modules/@angular/material/button/button.ngfactory';
import * as import19 from '../../../../node_modules/@angular/material/core/line/line.ngfactory';
import * as import20 from '../contact-menu/contact-menu.component.ngfactory';
import * as import21 from '@angular/common/src/pipes/slice_pipe';
import * as import22 from '@angular/core/src/linker/view_container';
import * as import23 from '@angular/flex-layout/media-query/media-monitor';
import * as import24 from '@angular/core/src/linker/element_ref';
import * as import25 from '@angular/material/list/list';
import * as import26 from '@angular/core/src/linker/template_ref';
import * as import27 from '@angular/common/src/directives/ng_for';
import * as import28 from '../../../../node_modules/@angular/material/list/list.ngfactory';
import * as import29 from '../../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import30 from '../../../common/pipes/order-by.pipe';
import * as import31 from '@angular/core/src/change_detection/differs/iterable_differs';
export class Wrapper_ContactsMasterListComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ContactsMasterListComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  subscription0:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.ContactsMasterListComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_contacts(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.contacts = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.updateClientAccount.subscribe(_eventHandler.bind(view,'updateClientAccount'))); }
  }
}
const nodeDebugInfos_ContactsMasterListComponent_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import0.ContactsMasterListComponent],import0.ContactsMasterListComponent,{})];
var renderType_ContactsMasterListComponent_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_ContactsMasterListComponent_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.ContactsMasterListComponent>;
  _ContactsMasterListComponent_0_3:Wrapper_ContactsMasterListComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ContactsMasterListComponent_Host0,renderType_ContactsMasterListComponent_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_ContactsMasterListComponent_Host0);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'contacts-master-list',import3.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_ContactsMasterListComponent0(this.viewUtils,this,0,this._el_0);
    this._ContactsMasterListComponent_0_3 = new Wrapper_ContactsMasterListComponent(this.injectorGet(import10.Router,this.parentIndex));
    this.compView_0.create(this._ContactsMasterListComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import9.ComponentRef_<any>(0,this,this._el_0,this._ContactsMasterListComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ContactsMasterListComponent) && (0 === requestNodeIndex))) { return this._ContactsMasterListComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._ContactsMasterListComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._ContactsMasterListComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const ContactsMasterListComponentNgFactory:import9.ComponentFactory<import0.ContactsMasterListComponent> = new import9.ComponentFactory<import0.ContactsMasterListComponent>('contacts-master-list',View_ContactsMasterListComponent_Host0,import0.ContactsMasterListComponent);
const styles_ContactsMasterListComponent:any[] = ([] as any[]);
const nodeDebugInfos_ContactsMasterListComponent1:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo([import11.LayoutDirective],(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import12.MdPrefixRejector,
    import13.MdButton,
    import13.MdButtonCssMatStyler
  ]
  ,import13.MdButton,{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([import11.LayoutDirective],(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([import14.MdLine],(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([import15.ContactMenuComponent],import15.ContactMenuComponent,{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_ContactsMasterListComponent1 extends import2.DebugAppView<any> {
  _el_0:any;
  _LayoutDirective_0_3:import16.Wrapper_LayoutDirective;
  _text_1:any;
  _el_2:any;
  compView_2:import2.AppView<import13.MdButton>;
  _MdPrefixRejector_2_3:import17.Wrapper_MdPrefixRejector;
  _MdButton_2_4:import18.Wrapper_MdButton;
  _MdButtonCssMatStyler_2_5:import18.Wrapper_MdButtonCssMatStyler;
  _text_3:any;
  _el_4:any;
  _LayoutDirective_4_3:import16.Wrapper_LayoutDirective;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  _MdLine_10_3:import19.Wrapper_MdLine;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  _el_14:any;
  compView_14:import2.AppView<import15.ContactMenuComponent>;
  _ContactMenuComponent_14_3:import20.Wrapper_ContactMenuComponent;
  _text_15:any;
  /*private*/ _expr_25:any;
  _pipe_slice_0:import21.SlicePipe;
  _pipe_slice_1:import21.SlicePipe;
  /*private*/ _expr_28:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import22.ViewContainer) {
    super(View_ContactsMasterListComponent1,renderType_ContactsMasterListComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_ContactsMasterListComponent1,declaredViewContainer);
    this._expr_25 = import1.UNINITIALIZED;
    this._expr_28 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'fxLayout','row'),this.debug(0,5,8));
    this._LayoutDirective_0_3 = new import16.Wrapper_LayoutDirective(this.parentView.parentView.injectorGet(import23.MediaMonitor,this.parentView.parentIndex),new import24.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n        ',this.debug(1,5,82));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'button',new import3.InlineArray4(4,'md-button','','style','align-items: true'),this.debug(2,6,8));
    this.compView_2 = new import18.View_MdButton0(this.viewUtils,this,2,this._el_2);
    this._MdPrefixRejector_2_3 = new import17.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import12.MATERIAL_COMPATIBILITY_MODE,this.parentView.parentIndex,(null as any)));
    this._MdButton_2_4 = new import18.Wrapper_MdButton(new import24.ElementRef(this._el_2),this.renderer);
    this._MdButtonCssMatStyler_2_5 = new import18.Wrapper_MdButtonCssMatStyler();
    this._text_3 = this.renderer.createText((null as any),'\n          \n            ',this.debug(3,6,84));
    this._el_4 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray4(4,'class','initialsBoxContact','fxLayout','column'),this.debug(4,8,12));
    this._LayoutDirective_4_3 = new import16.Wrapper_LayoutDirective(this.parentView.parentView.injectorGet(import23.MediaMonitor,this.parentView.parentIndex),new import24.ElementRef(this._el_4),this.renderer);
    this._text_5 = this.renderer.createText(this._el_4,'\n        ',this.debug(5,8,62));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'h1',import3.EMPTY_INLINE_ARRAY,this.debug(6,9,8));
    this._text_7 = this.renderer.createText(this._el_6,'',this.debug(7,9,12));
    this._text_8 = this.renderer.createText(this._el_4,'\n        ',this.debug(8,9,82));
    this._text_9 = this.renderer.createText((null as any),'\n            ',this.debug(9,10,14));
    this._el_10 = import3.createRenderElement(this.renderer,(null as any),'h3',new import3.InlineArray4(4,'md-line','','style','margin-top: 17px'),this.debug(10,11,12));
    this._MdLine_10_3 = new import19.Wrapper_MdLine();
    this._text_11 = this.renderer.createText(this._el_10,'',this.debug(11,11,49));
    this._text_12 = this.renderer.createText((null as any),'\n            \n          \n          ',this.debug(12,11,96));
    this.compView_2.create(this._MdButton_2_4.context);
    this._text_13 = this.renderer.createText(this._el_0,'\n          ',this.debug(13,14,19));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_0,'contact-menu',import3.EMPTY_INLINE_ARRAY,this.debug(14,15,10));
    this.compView_14 = new import20.View_ContactMenuComponent0(this.viewUtils,this,14,this._el_14);
    this._ContactMenuComponent_14_3 = new import20.Wrapper_ContactMenuComponent();
    this.compView_14.create(this._ContactMenuComponent_14_3.context);
    this._text_15 = this.renderer.createText(this._el_0,'\n        ',this.debug(15,17,26));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray8(8,'click',(null as any),'mousedown',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_2));
    this.debug((null as any),(null as any),(null as any));
    this._pipe_slice_0 = new import21.SlicePipe();
    this._pipe_slice_1 = new import21.SlicePipe();
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_14,new import3.InlineArray2(2,'updateClientAccount',(null as any)),this.eventHandler(this.handleEvent_14));
    this._ContactMenuComponent_14_3.subscribe(this,this.eventHandler(this.handleEvent_14),true,false);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._text_13,
      this._el_14,
      this._text_15
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.LayoutDirective) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._LayoutDirective_4_3.context; }
    if (((token === import14.MdLine) && ((10 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._MdLine_10_3.context; }
    if (((token === import12.MdPrefixRejector) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._MdPrefixRejector_2_3.context; }
    if (((token === import13.MdButton) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._MdButton_2_4.context; }
    if (((token === import13.MdButtonCssMatStyler) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._MdButtonCssMatStyler_2_5.context; }
    if (((token === import15.ContactMenuComponent) && (14 === requestNodeIndex))) { return this._ContactMenuComponent_14_3.context; }
    if (((token === import11.LayoutDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 15)))) { return this._LayoutDirective_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import1.ValueUnwrapper();
    this.debug(0,5,13);
    const currVal_0_0_0:any = 'row';
    this._LayoutDirective_0_3.check_layout(currVal_0_0_0,throwOnChange,false);
    this._LayoutDirective_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.debug(2,6,8);
    this._MdPrefixRejector_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    if (this._MdButton_2_4.ngDoCheck(this,this._el_2,throwOnChange)) { this.compView_2.markAsCheckOnce(); }
    this._MdButtonCssMatStyler_2_5.ngDoCheck(this,this._el_2,throwOnChange);
    this.debug(4,8,17);
    const currVal_4_0_0:any = 'column';
    this._LayoutDirective_4_3.check_layout(currVal_4_0_0,throwOnChange,false);
    this._LayoutDirective_4_3.ngDoCheck(this,this._el_4,throwOnChange);
    this.debug(10,11,12);
    this._MdLine_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    this.debug(14,15,10);
    if (this._ContactMenuComponent_14_3.ngDoCheck(this,this._el_14,throwOnChange)) { this.compView_14.markAsCheckOnce(); }
    this._MdButton_2_4.checkHost(this,this.compView_2,this._el_2,throwOnChange);
    this._MdButtonCssMatStyler_2_5.checkHost(this,this.compView_2,this._el_2,throwOnChange);
    this.debug(7,9,12);
    valUnwrapper.reset();
    const currVal_25:any = import3.inlineInterpolate(2,'',valUnwrapper.unwrap(this._pipe_slice_0.transform(this.context.$implicit.firstName,0,1)),'',valUnwrapper.unwrap(this._pipe_slice_1.transform(this.context.$implicit.lastName,0,1)),'');
    if ((valUnwrapper.hasWrappedValue || import3.checkBinding(throwOnChange,this._expr_25,currVal_25))) {
      this.renderer.setText(this._text_7,currVal_25);
      this._expr_25 = currVal_25;
    }
    this._MdLine_10_3.checkHost(this,this,this._el_10,throwOnChange);
    this.debug(11,11,49);
    const currVal_28:any = import3.inlineInterpolate(2,'',this.context.$implicit.firstName,' ',this.context.$implicit.lastName,'');
    if (import3.checkBinding(throwOnChange,this._expr_28,currVal_28)) {
      this.renderer.setText(this._text_11,currVal_28);
      this._expr_28 = currVal_28;
    }
    this.compView_2.internalDetectChanges(throwOnChange);
    this.compView_14.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_2.destroy();
    this.compView_14.destroy();
    this._LayoutDirective_4_3.ngOnDestroy();
    this.debug(4,8,12);
    this.debug(10,11,12);
    this.debug(2,6,8);
    this._ContactMenuComponent_14_3.ngOnDestroy();
    this.debug(14,15,10);
    this._LayoutDirective_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 2) && (ngContentIndex == 0))) {
      cb(this._text_3,ctx);
      cb(this._el_4,ctx);
      cb(this._text_9,ctx);
      cb(this._el_10,ctx);
      cb(this._text_12,ctx);
    }
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.debug(2,6,8);
    this.compView_2.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdButton_2_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.selectDetail(this.context.$implicit)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_14(eventName:string,$event:any):boolean {
    this.debug(14,15,10);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'updateClientAccount')) {
      const pd_sub_0:any = ((<any>this.parentView.context.onUpdateClientAccount(this.context.$implicit,$event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
const nodeDebugInfos_ContactsMasterListComponent0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import12.MdPrefixRejector,
    import13.MdButton,
    import13.MdButtonCssMatStyler
  ]
  ,import13.MdButton,{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import12.MdPrefixRejector,
    import25.MdList,
    import25.MdNavListCssMatStyler
  ]
  ,import25.MdList,{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import26.TemplateRef,
    import27.NgFor
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_ContactsMasterListComponent:import5.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/src/contacts/components/master-list/master-list.component.ts class ContactsMasterListComponent - inline template',0,import6.ViewEncapsulation.None,styles_ContactsMasterListComponent,{});
export class View_ContactsMasterListComponent0 extends import2.DebugAppView<import0.ContactsMasterListComponent> {
  _text_0:any;
  _el_1:any;
  compView_1:import2.AppView<import13.MdButton>;
  _MdPrefixRejector_1_3:import17.Wrapper_MdPrefixRejector;
  _MdButton_1_4:import18.Wrapper_MdButton;
  _MdButtonCssMatStyler_1_5:import18.Wrapper_MdButtonCssMatStyler;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  compView_7:import2.AppView<import25.MdList>;
  _MdPrefixRejector_7_3:import17.Wrapper_MdPrefixRejector;
  _MdList_7_4:import28.Wrapper_MdList;
  _MdNavListCssMatStyler_7_5:import28.Wrapper_MdNavListCssMatStyler;
  _text_8:any;
  _anchor_9:any;
  /*private*/ _vc_9:import22.ViewContainer;
  _TemplateRef_9_5:any;
  _NgFor_9_6:import29.Wrapper_NgFor;
  _text_10:any;
  _text_11:any;
  _pipe_orderByPipe_0:import30.OrderByPipe;
  _pipe_orderByPipe_0_0:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ContactsMasterListComponent0,renderType_ContactsMasterListComponent,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_ContactsMasterListComponent0);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',this.debug(0,0,0));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray4(4,'md-button','','style','text-align: left !important; padding: 5px; margin-top: -10px;'),this.debug(1,1,8));
    this.compView_1 = new import18.View_MdButton0(this.viewUtils,this,1,this._el_1);
    this._MdPrefixRejector_1_3 = new import17.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import12.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdButton_1_4 = new import18.Wrapper_MdButton(new import24.ElementRef(this._el_1),this.renderer);
    this._MdButtonCssMatStyler_1_5 = new import18.Wrapper_MdButtonCssMatStyler();
    this._text_2 = this.renderer.createText((null as any),'\n          ',this.debug(2,1,119));
    this._el_3 = import3.createRenderElement(this.renderer,(null as any),'p',new import3.InlineArray2(2,'style','margin: 4px 170px 4px 10px;'),this.debug(3,2,10));
    this._text_4 = this.renderer.createText(this._el_3,'+    Add New Contact',this.debug(4,2,49));
    this._text_5 = this.renderer.createText((null as any),'\n        ',this.debug(5,2,83));
    this.compView_1.create(this._MdButton_1_4.context);
    this._text_6 = this.renderer.createText(parentRenderNode,'\n        ',this.debug(6,3,17));
    this._el_7 = import3.createRenderElement(this.renderer,parentRenderNode,'md-nav-list',new import3.InlineArray2(2,'role','list'),this.debug(7,4,8));
    this.compView_7 = new import28.View_MdList0(this.viewUtils,this,7,this._el_7);
    this._MdPrefixRejector_7_3 = new import17.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import12.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdList_7_4 = new import28.Wrapper_MdList();
    this._MdNavListCssMatStyler_7_5 = new import28.Wrapper_MdNavListCssMatStyler();
    this._text_8 = this.renderer.createText((null as any),'\n        ',this.debug(8,4,21));
    this._anchor_9 = this.renderer.createTemplateAnchor((null as any),this.debug(9,5,8));
    this._vc_9 = new import22.ViewContainer(9,7,this,this._anchor_9);
    this._TemplateRef_9_5 = new import26.TemplateRef_(this,9,this._anchor_9);
    this._NgFor_9_6 = new import29.Wrapper_NgFor(this._vc_9.vcRef,this._TemplateRef_9_5,this.parentView.injectorGet(import31.IterableDiffers,this.parentIndex),this.ref);
    this._text_10 = this.renderer.createText((null as any),'\n\n      ',this.debug(10,18,14));
    this.compView_7.create(this._MdList_7_4.context);
    this._text_11 = this.renderer.createText(parentRenderNode,'\n    ',this.debug(11,20,20));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray8(8,'click',(null as any),'mousedown',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_1));
    this.debug((null as any),(null as any),(null as any));
    this._pipe_orderByPipe_0 = new import30.OrderByPipe();
    this._pipe_orderByPipe_0_0 = import3.pureProxy2(this._pipe_orderByPipe_0.transform.bind(this._pipe_orderByPipe_0));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._anchor_9,
      this._text_10,
      this._text_11
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.MdPrefixRejector) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._MdPrefixRejector_1_3.context; }
    if (((token === import13.MdButton) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._MdButton_1_4.context; }
    if (((token === import13.MdButtonCssMatStyler) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._MdButtonCssMatStyler_1_5.context; }
    if (((token === import26.TemplateRef) && (9 === requestNodeIndex))) { return this._TemplateRef_9_5; }
    if (((token === import27.NgFor) && (9 === requestNodeIndex))) { return this._NgFor_9_6.context; }
    if (((token === import12.MdPrefixRejector) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._MdPrefixRejector_7_3.context; }
    if (((token === import25.MdList) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._MdList_7_4.context; }
    if (((token === import25.MdNavListCssMatStyler) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._MdNavListCssMatStyler_7_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import1.ValueUnwrapper();
    this.debug(1,1,8);
    this._MdPrefixRejector_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    if (this._MdButton_1_4.ngDoCheck(this,this._el_1,throwOnChange)) { this.compView_1.markAsCheckOnce(); }
    this._MdButtonCssMatStyler_1_5.ngDoCheck(this,this._el_1,throwOnChange);
    this.debug(7,4,8);
    this._MdPrefixRejector_7_3.ngDoCheck(this,this._el_7,throwOnChange);
    this._MdList_7_4.ngDoCheck(this,this._el_7,throwOnChange);
    this._MdNavListCssMatStyler_7_5.ngDoCheck(this,this._el_7,throwOnChange);
    this.debug(9,5,28);
    valUnwrapper.reset();
    const currVal_9_0_0:any = valUnwrapper.unwrap(import3.castByValue(this._pipe_orderByPipe_0_0,this._pipe_orderByPipe_0.transform)(this.context.contacts,this.context.order));
    this._NgFor_9_6.check_ngForOf(currVal_9_0_0,throwOnChange,valUnwrapper.hasWrappedValue);
    this._NgFor_9_6.ngDoCheck(this,this._anchor_9,throwOnChange);
    this._vc_9.detectChangesInNestedViews(throwOnChange);
    this._MdButton_1_4.checkHost(this,this.compView_1,this._el_1,throwOnChange);
    this._MdButtonCssMatStyler_1_5.checkHost(this,this.compView_1,this._el_1,throwOnChange);
    this._MdNavListCssMatStyler_7_5.checkHost(this,this.compView_7,this._el_7,throwOnChange);
    this.compView_1.internalDetectChanges(throwOnChange);
    this.compView_7.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_9.destroyNestedViews();
    this.compView_1.destroy();
    this.compView_7.destroy();
    this.debug(1,1,8);
    this.debug(9,5,8);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 1) && (ngContentIndex == 0))) {
      cb(this._text_2,ctx);
      cb(this._el_3,ctx);
      cb(this._text_5,ctx);
    }
    if (((nodeIndex == 7) && (ngContentIndex == 0))) {
      cb(this._text_8,ctx);
      cb(this._vc_9.nativeElement,ctx);
      this._vc_9.visitNestedViewRootNodes(cb,ctx);
      cb(this._text_10,ctx);
    }
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 9)) { return new View_ContactsMasterListComponent1(this.viewUtils,this,9,this._anchor_9,this._vc_9); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.debug(1,1,8);
    this.compView_1.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdButton_1_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.addContact()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}