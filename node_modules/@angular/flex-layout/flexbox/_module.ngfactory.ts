/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/flex-layout/flexbox/_module';
import * as import2 from '@angular/flex-layout/media-query/_module';
import * as import3 from '@angular/flex-layout/media-query/match-media';
import * as import4 from '@angular/flex-layout/media-query/breakpoints/break-point-registry';
import * as import5 from '@angular/flex-layout/media-query/media-monitor';
import * as import6 from '@angular/flex-layout/media-query/observable-media-service';
import * as import7 from '@angular/core/src/di/injector';
import * as import8 from '@angular/core/src/zone/ng_zone';
import * as import9 from '@angular/flex-layout/media-query/breakpoints/break-points';
class FlexLayoutModuleInjector extends import0.NgModuleInjector<import1.FlexLayoutModule> {
  _MediaQueriesModule_0:import2.MediaQueriesModule;
  _FlexLayoutModule_1:import1.FlexLayoutModule;
  __MatchMedia_2:import3.MatchMedia;
  __BREAKPOINTS_3:any;
  __BreakPointRegistry_4:import4.BreakPointRegistry;
  __MediaMonitor_5:import5.MediaMonitor;
  __ObservableMedia_6:import6.MediaService;
  constructor(parent:import7.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _MatchMedia_2():import3.MatchMedia {
    if ((this.__MatchMedia_2 == null)) { (this.__MatchMedia_2 = new import3.MatchMedia(this.parent.get(import8.NgZone))); }
    return this.__MatchMedia_2;
  }
  get _BREAKPOINTS_3():any {
    if ((this.__BREAKPOINTS_3 == null)) { (this.__BREAKPOINTS_3 = [
      {
        alias: 'xs',
        suffix: 'Xs',
        overlapping: false,
        mediaQuery: 'screen and (max-width: 599px)'
      }
      ,
      {
        alias: 'gt-xs',
        suffix: 'GtXs',
        overlapping: true,
        mediaQuery: 'screen and (min-width: 600px)'
      }
      ,
      {
        alias: 'sm',
        suffix: 'Sm',
        overlapping: false,
        mediaQuery: 'screen and (min-width: 600px) and (max-width: 959px)'
      }
      ,
      {
        alias: 'gt-sm',
        suffix: 'GtSm',
        overlapping: true,
        mediaQuery: 'screen and (min-width: 960px)'
      }
      ,
      {
        alias: 'md',
        suffix: 'Md',
        overlapping: false,
        mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279px)'
      }
      ,
      {
        alias: 'gt-md',
        suffix: 'GtMd',
        overlapping: true,
        mediaQuery: 'screen and (min-width: 1280px)'
      }
      ,
      {
        alias: 'lg',
        suffix: 'Lg',
        overlapping: false,
        mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919px)'
      }
      ,
      {
        alias: 'gt-lg',
        suffix: 'GtLg',
        overlapping: true,
        mediaQuery: 'screen and (min-width: 1920px)'
      }
      ,
      {
        alias: 'xl',
        suffix: 'Xl',
        overlapping: false,
        mediaQuery: 'screen and (min-width: 1920px) and (max-width: 5000px)'
      }

    ]
    ); }
    return this.__BREAKPOINTS_3;
  }
  get _BreakPointRegistry_4():import4.BreakPointRegistry {
    if ((this.__BreakPointRegistry_4 == null)) { (this.__BreakPointRegistry_4 = new import4.BreakPointRegistry(this._BREAKPOINTS_3)); }
    return this.__BreakPointRegistry_4;
  }
  get _MediaMonitor_5():import5.MediaMonitor {
    if ((this.__MediaMonitor_5 == null)) { (this.__MediaMonitor_5 = new import5.MediaMonitor(this._BreakPointRegistry_4,this._MatchMedia_2)); }
    return this.__MediaMonitor_5;
  }
  get _ObservableMedia_6():import6.MediaService {
    if ((this.__ObservableMedia_6 == null)) { (this.__ObservableMedia_6 = new import6.MediaService(this._MatchMedia_2,this._BreakPointRegistry_4)); }
    return this.__ObservableMedia_6;
  }
  createInternal():import1.FlexLayoutModule {
    this._MediaQueriesModule_0 = new import2.MediaQueriesModule();
    this._FlexLayoutModule_1 = new import1.FlexLayoutModule();
    return this._FlexLayoutModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.MediaQueriesModule)) { return this._MediaQueriesModule_0; }
    if ((token === import1.FlexLayoutModule)) { return this._FlexLayoutModule_1; }
    if ((token === import3.MatchMedia)) { return this._MatchMedia_2; }
    if ((token === import9.BREAKPOINTS)) { return this._BREAKPOINTS_3; }
    if ((token === import4.BreakPointRegistry)) { return this._BreakPointRegistry_4; }
    if ((token === import5.MediaMonitor)) { return this._MediaMonitor_5; }
    if ((token === import6.ObservableMedia)) { return this._ObservableMedia_6; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const FlexLayoutModuleNgFactory:import0.NgModuleFactory<import1.FlexLayoutModule> = new import0.NgModuleFactory(FlexLayoutModuleInjector,import1.FlexLayoutModule);