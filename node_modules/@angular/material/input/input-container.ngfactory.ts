/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/material/input/input-container';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/change_detection/change_detection_util';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/query_list';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/change_detection/constants';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from './input-container.css.ngstyle';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '@angular/core/src/linker/template_ref';
import * as import14 from '@angular/common/src/directives/ng_if';
import * as import15 from '../../common/src/directives/ng_if.ngfactory';
export class Wrapper_MdPlaceholder {
  /*private*/ _eventHandler:Function;
  context:import0.MdPlaceholder;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.MdPlaceholder();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_MdInputContainer {
  /*private*/ _eventHandler:Function;
  context:import0.MdInputContainer;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  constructor() {
    this._changed = false;
    this.context = new import0.MdInputContainer();
    this._expr_0 = import2.UNINITIALIZED;
    this._expr_1 = import2.UNINITIALIZED;
    this._expr_2 = import2.UNINITIALIZED;
    this._expr_3 = import2.UNINITIALIZED;
    this._expr_4 = import2.UNINITIALIZED;
    this._expr_5 = import2.UNINITIALIZED;
    this._expr_6 = import2.UNINITIALIZED;
    this._expr_7 = import2.UNINITIALIZED;
    this._expr_8 = import2.UNINITIALIZED;
    this._expr_9 = import2.UNINITIALIZED;
    this._expr_10 = import2.UNINITIALIZED;
    this._expr_11 = import2.UNINITIALIZED;
    this._expr_12 = import2.UNINITIALIZED;
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_align(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.align = currValue;
      this._expr_0 = currValue;
    }
  }
  check_dividerColor(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.dividerColor = currValue;
      this._expr_1 = currValue;
    }
  }
  check_hintLabel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.hintLabel = currValue;
      this._expr_2 = currValue;
    }
  }
  check_floatPlaceholder(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.floatPlaceholder = currValue;
      this._expr_3 = currValue;
    }
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_4:any = true;
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      view.renderer.setElementClass(el,'mat-input-container',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = (null as any);
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      view.renderer.setElementAttribute(el,'align',((currVal_5 == null)? (null as any): currVal_5.toString()));
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this.context._shouldForward('untouched');
    if (import3.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      view.renderer.setElementClass(el,'ng-untouched',currVal_6);
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this.context._shouldForward('touched');
    if (import3.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      view.renderer.setElementClass(el,'ng-touched',currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this.context._shouldForward('pristine');
    if (import3.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      view.renderer.setElementClass(el,'ng-pristine',currVal_8);
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.context._shouldForward('dirty');
    if (import3.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      view.renderer.setElementClass(el,'ng-dirty',currVal_9);
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this.context._shouldForward('valid');
    if (import3.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      view.renderer.setElementClass(el,'ng-valid',currVal_10);
      this._expr_10 = currVal_10;
    }
    const currVal_11:any = this.context._shouldForward('invalid');
    if (import3.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      view.renderer.setElementClass(el,'ng-invalid',currVal_11);
      this._expr_11 = currVal_11;
    }
    const currVal_12:any = this.context._shouldForward('pending');
    if (import3.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      view.renderer.setElementClass(el,'ng-pending',currVal_12);
      this._expr_12 = currVal_12;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context._focusInput()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_MdHint {
  /*private*/ _eventHandler:Function;
  context:import0.MdHint;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  constructor() {
    this._changed = false;
    this.context = new import0.MdHint();
    this._expr_0 = import2.UNINITIALIZED;
    this._expr_1 = import2.UNINITIALIZED;
    this._expr_2 = import2.UNINITIALIZED;
    this._expr_3 = import2.UNINITIALIZED;
    this._expr_4 = import2.UNINITIALIZED;
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_align(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.align = currValue;
      this._expr_0 = currValue;
    }
  }
  check_id(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.id = currValue;
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_2:any = true;
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      view.renderer.setElementClass(el,'mat-hint',currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = (this.context.align == 'end');
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      view.renderer.setElementClass(el,'mat-right',currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this.context.id;
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      view.renderer.setElementAttribute(el,'id',((currVal_4 == null)? (null as any): currVal_4.toString()));
      this._expr_4 = currVal_4;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_MdInputDirective {
  /*private*/ _eventHandler:Function;
  context:import0.MdInputDirective;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  subscription0:any;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import0.MdInputDirective(p0,p1,p2);
    this._expr_0 = import2.UNINITIALIZED;
    this._expr_1 = import2.UNINITIALIZED;
    this._expr_2 = import2.UNINITIALIZED;
    this._expr_3 = import2.UNINITIALIZED;
    this._expr_4 = import2.UNINITIALIZED;
    this._expr_5 = import2.UNINITIALIZED;
    this._expr_6 = import2.UNINITIALIZED;
    this._expr_7 = import2.UNINITIALIZED;
    this._expr_8 = import2.UNINITIALIZED;
    this._expr_9 = import2.UNINITIALIZED;
    this._expr_10 = import2.UNINITIALIZED;
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_0 = currValue;
    }
  }
  check_id(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.id = currValue;
      this._expr_1 = currValue;
    }
  }
  check_placeholder(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.placeholder = currValue;
      this._expr_2 = currValue;
    }
  }
  check_required(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.required = currValue;
      this._expr_3 = currValue;
    }
  }
  check_type(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.type = currValue;
      this._expr_4 = currValue;
    }
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_5:any = true;
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      view.renderer.setElementClass(el,'mat-input-element',currVal_5);
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this.context.id;
    if (import3.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      view.renderer.setElementProperty(el,'id',currVal_6);
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this.context.placeholder;
    if (import3.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      view.renderer.setElementProperty(el,'placeholder',currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this.context.disabled;
    if (import3.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      view.renderer.setElementProperty(el,'disabled',currVal_8);
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.context.required;
    if (import3.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      view.renderer.setElementProperty(el,'required',currVal_9);
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this.context.ariaDescribedby;
    if (import3.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      view.renderer.setElementAttribute(el,'aria-describedby',((currVal_10 == null)? (null as any): currVal_10.toString()));
      this._expr_10 = currVal_10;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    if ((eventName == 'blur')) {
      const pd_sub_0:any = ((<any>this.context._onBlur()) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'focus')) {
      const pd_sub_1:any = ((<any>this.context._onFocus()) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'input')) {
      const pd_sub_2:any = ((<any>this.context._onInput()) !== false);
      result = (pd_sub_2 && result);
    }
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context._placeholderChange.subscribe(_eventHandler.bind(view,'_placeholderChange'))); }
  }
}
const nodeDebugInfos_MdInputContainer_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import0.MdInputContainer],import0.MdInputContainer,{})];
var renderType_MdInputContainer_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_MdInputContainer_Host0 extends import1.DebugAppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.MdInputContainer>;
  _MdInputContainer_0_3:Wrapper_MdInputContainer;
  _query_MdInputDirective_0_0:import7.QueryList<any>;
  _query_MdPlaceholder_0_1:import7.QueryList<any>;
  _query_MdHint_0_2:import7.QueryList<any>;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdInputContainer_Host0,renderType_MdInputContainer_Host,import8.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdInputContainer_Host0);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'md-input-container',import3.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdInputContainer0(this.viewUtils,this,0,this._el_0);
    this._MdInputContainer_0_3 = new Wrapper_MdInputContainer();
    this._query_MdInputDirective_0_0 = new import7.QueryList<any>();
    this._query_MdPlaceholder_0_1 = new import7.QueryList<any>();
    this._query_MdHint_0_2 = new import7.QueryList<any>();
    this.compView_0.create(this._MdInputContainer_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this._query_MdInputDirective_0_0.reset(([] as any[]));
    this._MdInputContainer_0_3.context._mdInputChild = this._query_MdInputDirective_0_0.first;
    this._query_MdPlaceholder_0_1.reset(([] as any[]));
    this._MdInputContainer_0_3.context._placeholderChild = this._query_MdPlaceholder_0_1.first;
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return new import10.ComponentRef_<any>(0,this,this._el_0,this._MdInputContainer_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MdInputContainer) && (0 === requestNodeIndex))) { return this._MdInputContainer_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdInputContainer_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdHint_0_2.dirty) {
        this._query_MdHint_0_2.reset(([] as any[]));
        this._MdInputContainer_0_3.context._hintChildren = this._query_MdHint_0_2;
        this._query_MdHint_0_2.notifyOnChanges();
      }
      this.debug(0,0,0);
      if ((this.numberOfChecks === 0)) { this._MdInputContainer_0_3.context.ngAfterContentInit(); }
    }
    this._MdInputContainer_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 2))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 3))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 4))) {  }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdInputContainer_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
export const MdInputContainerNgFactory:import10.ComponentFactory<import0.MdInputContainer> = new import10.ComponentFactory<import0.MdInputContainer>('md-input-container, mat-input-container',View_MdInputContainer_Host0,import0.MdInputContainer);
const styles_MdInputContainer:any[] = [import11.styles];
const nodeDebugInfos_MdInputContainer2:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_MdInputContainer2 extends import1.DebugAppView<any> {
  _el_0:any;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_MdInputContainer2,renderType_MdInputContainer,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdInputContainer2,declaredViewContainer);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'class','mat-placeholder-required'),this.debug(0,0,750));
    this._text_1 = this.renderer.createText(this._el_0,'*',this.debug(1,0,820));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
const nodeDebugInfos_MdInputContainer1:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import13.TemplateRef,
    import14.NgIf
  ]
  ,(null as any),{})
]
;
class View_MdInputContainer1 extends import1.DebugAppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import12.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import15.Wrapper_NgIf;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_MdInputContainer1,renderType_MdInputContainer,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdInputContainer1,declaredViewContainer);
    this._expr_6 = import2.UNINITIALIZED;
    this._expr_7 = import2.UNINITIALIZED;
    this._expr_8 = import2.UNINITIALIZED;
    this._expr_9 = import2.UNINITIALIZED;
    this._expr_10 = import2.UNINITIALIZED;
    this._expr_11 = import2.UNINITIALIZED;
    this._expr_12 = import2.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'label',new import3.InlineArray2(2,'class','mat-input-placeholder'),this.debug(0,0,325));
    this.debug((null as any),0,654);
    this.projectNodes(this._el_0,2);
    this._text_1 = this.renderer.createText(this._el_0,'',this.debug(1,0,720));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,this.debug(2,0,750));
    this._vc_2 = new import12.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import13.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import15.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import14.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(2,0,789);
    const currVal_2_0_0:any = this.parentView.context._mdInputChild.required;
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this.debug(0,0,362);
    const currVal_6:any = this.parentView.context._mdInputChild.id;
    if (import3.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setElementAttribute(this._el_0,'for',((currVal_6 == null)? (null as any): currVal_6.toString()));
      this._expr_6 = currVal_6;
    }
    this.debug(0,0,392);
    const currVal_7:any = (this.parentView.context._mdInputChild.empty && !this.parentView.context._shouldAlwaysFloat);
    if (import3.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementClass(this._el_0,'mat-empty',currVal_7);
      this._expr_7 = currVal_7;
    }
    this.debug(0,0,455);
    const currVal_8:any = this.parentView.context._mdInputChild.focused;
    if (import3.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementClass(this._el_0,'mat-focused',currVal_8);
      this._expr_8 = currVal_8;
    }
    this.debug(0,0,499);
    const currVal_9:any = this.parentView.context._canPlaceholderFloat;
    if (import3.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementClass(this._el_0,'mat-float',currVal_9);
      this._expr_9 = currVal_9;
    }
    this.debug(0,0,540);
    const currVal_10:any = (this.parentView.context.dividerColor == 'accent');
    if (import3.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      this.renderer.setElementClass(this._el_0,'mat-accent',currVal_10);
      this._expr_10 = currVal_10;
    }
    this.debug(0,0,586);
    const currVal_11:any = (this.parentView.context.dividerColor == 'warn');
    if (import3.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      this.renderer.setElementClass(this._el_0,'mat-warn',currVal_11);
      this._expr_11 = currVal_11;
    }
    this.debug(1,0,720);
    const currVal_12:any = import3.inlineInterpolate(1,'',this.parentView.context._mdInputChild.placeholder,' ');
    if (import3.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setText(this._text_1,currVal_12);
      this._expr_12 = currVal_12;
    }
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 2)) { return new View_MdInputContainer2(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
}
const nodeDebugInfos_MdInputContainer3:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_MdInputContainer3 extends import1.DebugAppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_MdInputContainer3,renderType_MdInputContainer,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdInputContainer3,declaredViewContainer);
    this._expr_2 = import2.UNINITIALIZED;
    this._expr_3 = import2.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','mat-hint'),this.debug(0,0,1217));
    this._text_1 = this.renderer.createText(this._el_0,'',this.debug(1,0,1288));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,1246);
    const currVal_2:any = this.parentView.context._hintLabelId;
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementAttribute(this._el_0,'id',((currVal_2 == null)? (null as any): currVal_2.toString()));
      this._expr_2 = currVal_2;
    }
    this.debug(1,0,1288);
    const currVal_3:any = import3.inlineInterpolate(1,'',this.parentView.context.hintLabel,'');
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setText(this._text_1,currVal_3);
      this._expr_3 = currVal_3;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
const nodeDebugInfos_MdInputContainer0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import13.TemplateRef,
    import14.NgIf
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import13.TemplateRef,
    import14.NgIf
  ]
  ,(null as any),{})
]
;
var renderType_MdInputContainer:import5.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/node_modules/@angular/material/input/input-container.html',5,import6.ViewEncapsulation.None,styles_MdInputContainer,{});
export class View_MdInputContainer0 extends import1.DebugAppView<import0.MdInputContainer> {
  _el_0:any;
  _el_1:any;
  _el_2:any;
  _el_3:any;
  _el_4:any;
  _anchor_5:any;
  /*private*/ _vc_5:import12.ViewContainer;
  _TemplateRef_5_5:any;
  _NgIf_5_6:import15.Wrapper_NgIf;
  _el_6:any;
  _el_7:any;
  _el_8:any;
  _anchor_9:any;
  /*private*/ _vc_9:import12.ViewContainer;
  _TemplateRef_9_5:any;
  _NgIf_9_6:import15.Wrapper_NgIf;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdInputContainer0,renderType_MdInputContainer,import8.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdInputContainer0);
    this._expr_16 = import2.UNINITIALIZED;
    this._expr_17 = import2.UNINITIALIZED;
    this._expr_18 = import2.UNINITIALIZED;
    this._expr_19 = import2.UNINITIALIZED;
    this._expr_20 = import2.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','mat-input-wrapper'),this.debug(0,0,0));
    this._el_1 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','mat-input-table'),this.debug(1,0,31));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_1,'div',new import3.InlineArray2(2,'class','mat-input-prefix'),this.debug(2,0,60));
    this.debug((null as any),0,90);
    this.projectNodes(this._el_2,0);
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'div',new import3.InlineArray2(2,'class','mat-input-infix'),this.debug(3,0,167));
    this.debug((null as any),0,229);
    this.projectNodes(this._el_3,1);
    this._el_4 = import3.createRenderElement(this.renderer,this._el_3,'span',new import3.InlineArray2(2,'class','mat-input-placeholder-wrapper'),this.debug(4,0,281));
    this._anchor_5 = this.renderer.createTemplateAnchor(this._el_4,this.debug(5,0,325));
    this._vc_5 = new import12.ViewContainer(5,4,this,this._anchor_5);
    this._TemplateRef_5_5 = new import13.TemplateRef_(this,5,this._anchor_5);
    this._NgIf_5_6 = new import15.Wrapper_NgIf(this._vc_5.vcRef,this._TemplateRef_5_5);
    this._el_6 = import3.createRenderElement(this.renderer,this._el_1,'div',new import3.InlineArray2(2,'class','mat-input-suffix'),this.debug(6,0,849));
    this.debug((null as any),0,879);
    this.projectNodes(this._el_6,3);
    this._el_7 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','mat-input-underline'),this.debug(7,0,962));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_7,'span',new import3.InlineArray2(2,'class','mat-input-ripple'),this.debug(8,0,1041));
    this._anchor_9 = this.renderer.createTemplateAnchor(this._el_0,this.debug(9,0,1217));
    this._vc_9 = new import12.ViewContainer(9,0,this,this._anchor_9);
    this._TemplateRef_9_5 = new import13.TemplateRef_(this,9,this._anchor_9);
    this._NgIf_9_6 = new import15.Wrapper_NgIf(this._vc_9.vcRef,this._TemplateRef_9_5);
    this.debug((null as any),0,1307);
    this.projectNodes(this._el_0,4);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1,
      this._el_2,
      this._el_3,
      this._el_4,
      this._anchor_5,
      this._el_6,
      this._el_7,
      this._el_8,
      this._anchor_9
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import14.NgIf) && (5 === requestNodeIndex))) { return this._NgIf_5_6.context; }
    if (((token === import13.TemplateRef) && (9 === requestNodeIndex))) { return this._TemplateRef_9_5; }
    if (((token === import14.NgIf) && (9 === requestNodeIndex))) { return this._NgIf_9_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(5,0,628);
    const currVal_5_0_0:any = this.context._hasPlaceholder();
    this._NgIf_5_6.check_ngIf(currVal_5_0_0,throwOnChange,false);
    this._NgIf_5_6.ngDoCheck(this,this._anchor_5,throwOnChange);
    this.debug(9,0,1222);
    const currVal_9_0_0:any = (this.context.hintLabel != '');
    this._NgIf_9_6.check_ngIf(currVal_9_0_0,throwOnChange,false);
    this._NgIf_9_6.ngDoCheck(this,this._anchor_9,throwOnChange);
    this._vc_5.detectChangesInNestedViews(throwOnChange);
    this._vc_9.detectChangesInNestedViews(throwOnChange);
    this.debug(3,0,196);
    const currVal_16:any = (this.context.align == 'end');
    if (import3.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementClass(this._el_3,'mat-end',currVal_16);
      this._expr_16 = currVal_16;
    }
    this.debug(7,0,995);
    const currVal_17:any = this.context._mdInputChild.disabled;
    if (import3.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementClass(this._el_7,'mat-disabled',currVal_17);
      this._expr_17 = currVal_17;
    }
    this.debug(8,0,1072);
    const currVal_18:any = this.context._mdInputChild.focused;
    if (import3.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setElementClass(this._el_8,'mat-focused',currVal_18);
      this._expr_18 = currVal_18;
    }
    this.debug(8,0,1116);
    const currVal_19:any = (this.context.dividerColor == 'accent');
    if (import3.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementClass(this._el_8,'mat-accent',currVal_19);
      this._expr_19 = currVal_19;
    }
    this.debug(8,0,1162);
    const currVal_20:any = (this.context.dividerColor == 'warn');
    if (import3.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setElementClass(this._el_8,'mat-warn',currVal_20);
      this._expr_20 = currVal_20;
    }
  }
  destroyInternal():void {
    this._vc_5.destroyNestedViews();
    this._vc_9.destroyNestedViews();
    this.debug(5,0,325);
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 5)) { return new View_MdInputContainer1(this.viewUtils,this,5,this._anchor_5,this._vc_5); }
    if ((nodeIndex == 9)) { return new View_MdInputContainer3(this.viewUtils,this,9,this._anchor_9,this._vc_9); }
    return (null as any);
  }
}