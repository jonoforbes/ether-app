/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/tabs/tab-group';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/material/core/portal/portal-directives';
import * as import4 from '@angular/material/core/compatibility/compatibility';
import * as import5 from '@angular/material/core/ripple/ripple';
import * as import6 from '@angular/material/core/observe-content/observe-content';
import * as import7 from '@angular/common/src/localization';
import * as import8 from '@angular/core/src/di/injector';
import * as import9 from '@angular/core/src/i18n/tokens';
import * as import10 from '@angular/material/core/overlay/scroll/scroll-dispatcher';
import * as import11 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import12 from '@angular/core/src/change_detection/change_detection_util';
import * as import13 from '@angular/core/src/linker/view';
import * as import14 from '@angular/core/src/linker/view_utils';
import * as import15 from '@angular/core/src/linker/debug_context';
import * as import16 from '@angular/core/src/render/api';
import * as import17 from '@angular/core/src/metadata/view';
import * as import18 from '@angular/core/src/linker/query_list';
import * as import19 from '@angular/core/src/linker/view_type';
import * as import20 from '@angular/core/src/change_detection/constants';
import * as import21 from '@angular/core/src/linker/component_factory';
import * as import22 from './tab-group.css.shim.ngstyle';
import * as import23 from '@angular/core/src/linker/view_container';
import * as import24 from '@angular/core/src/linker/template_ref';
import * as import25 from '../core/portal/portal-directives.ngfactory';
import * as import26 from '@angular/core/src/linker/component_factory_resolver';
import * as import27 from '@angular/material/tabs/tab-label-wrapper';
import * as import28 from '@angular/common/src/directives/ng_if';
import * as import29 from '../core/ripple/ripple.ngfactory';
import * as import30 from './tab-label-wrapper.ngfactory';
import * as import31 from '../../common/src/directives/ng_if.ngfactory';
import * as import32 from '@angular/core/src/linker/element_ref';
import * as import33 from '@angular/core/src/zone/ng_zone';
import * as import34 from '@angular/material/tabs/tab-body';
import * as import35 from '../core/compatibility/compatibility.ngfactory';
import * as import36 from './tab-body.ngfactory';
import * as import37 from '@angular/material/core/rtl/dir';
import * as import38 from '@angular/material/tabs/tab-header';
import * as import39 from '@angular/common/src/directives/ng_for';
import * as import40 from './tab-header.ngfactory';
import * as import41 from '../../common/src/directives/ng_for.ngfactory';
import * as import42 from '@angular/core/src/change_detection/differs/iterable_differs';
class MdTabsModuleInjector extends import0.NgModuleInjector<import1.MdTabsModule> {
  _CommonModule_0:import2.CommonModule;
  _PortalModule_1:import3.PortalModule;
  _CompatibilityModule_2:import4.CompatibilityModule;
  _MdRippleModule_3:import5.MdRippleModule;
  _ObserveContentModule_4:import6.ObserveContentModule;
  _MdTabsModule_5:import1.MdTabsModule;
  __NgLocalization_6:import7.NgLocaleLocalization;
  __ScrollDispatcher_7:any;
  __ViewportRuler_8:any;
  constructor(parent:import8.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_6():import7.NgLocaleLocalization {
    if ((this.__NgLocalization_6 == null)) { (this.__NgLocalization_6 = new import7.NgLocaleLocalization(this.parent.get(import9.LOCALE_ID))); }
    return this.__NgLocalization_6;
  }
  get _ScrollDispatcher_7():any {
    if ((this.__ScrollDispatcher_7 == null)) { (this.__ScrollDispatcher_7 = import10.SCROLL_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import10.ScrollDispatcher,(null as any)))); }
    return this.__ScrollDispatcher_7;
  }
  get _ViewportRuler_8():any {
    if ((this.__ViewportRuler_8 == null)) { (this.__ViewportRuler_8 = import11.VIEWPORT_RULER_PROVIDER_FACTORY(this.parent.get(import11.ViewportRuler,(null as any)),this._ScrollDispatcher_7)); }
    return this.__ViewportRuler_8;
  }
  createInternal():import1.MdTabsModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._PortalModule_1 = new import3.PortalModule();
    this._CompatibilityModule_2 = new import4.CompatibilityModule();
    this._MdRippleModule_3 = new import5.MdRippleModule();
    this._ObserveContentModule_4 = new import6.ObserveContentModule();
    this._MdTabsModule_5 = new import1.MdTabsModule();
    return this._MdTabsModule_5;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.PortalModule)) { return this._PortalModule_1; }
    if ((token === import4.CompatibilityModule)) { return this._CompatibilityModule_2; }
    if ((token === import5.MdRippleModule)) { return this._MdRippleModule_3; }
    if ((token === import6.ObserveContentModule)) { return this._ObserveContentModule_4; }
    if ((token === import1.MdTabsModule)) { return this._MdTabsModule_5; }
    if ((token === import7.NgLocalization)) { return this._NgLocalization_6; }
    if ((token === import10.ScrollDispatcher)) { return this._ScrollDispatcher_7; }
    if ((token === import11.ViewportRuler)) { return this._ViewportRuler_8; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdTabsModuleNgFactory:import0.NgModuleFactory<import1.MdTabsModule> = new import0.NgModuleFactory(MdTabsModuleInjector,import1.MdTabsModule);
export class Wrapper_MdTabGroup {
  /*private*/ _eventHandler:Function;
  context:import1.MdTabGroup;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import1.MdTabGroup(p0);
    this._expr_0 = import12.UNINITIALIZED;
    this._expr_1 = import12.UNINITIALIZED;
    this._expr_2 = import12.UNINITIALIZED;
    this._expr_3 = import12.UNINITIALIZED;
    this._expr_4 = import12.UNINITIALIZED;
    this._expr_5 = import12.UNINITIALIZED;
  }
  ngOnDetach(view:import13.AppView<any>,componentView:import13.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
  }
  check_dynamicHeight(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.dynamicHeight = currValue;
      this._expr_0 = currValue;
    }
  }
  check__dynamicHeightDeprecated(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context._dynamicHeightDeprecated = currValue;
      this._expr_1 = currValue;
    }
  }
  check_selectedIndex(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.selectedIndex = currValue;
      this._expr_2 = currValue;
    }
  }
  check_headerPosition(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.headerPosition = currValue;
      this._expr_3 = currValue;
    }
  }
  ngDoCheck(view:import13.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import13.AppView<any>,componentView:import13.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_4:any = this.context.dynamicHeight;
    if (import14.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      view.renderer.setElementClass(el,'mat-tab-group-dynamic-height',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = (this.context.headerPosition === 'below');
    if (import14.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      view.renderer.setElementClass(el,'mat-tab-group-inverted-header',currVal_5);
      this._expr_5 = currVal_5;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import13.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.selectedIndexChange.subscribe(_eventHandler.bind(view,'selectedIndexChange'))); }
    if (emit1) { (this.subscription1 = this.context.focusChange.subscribe(_eventHandler.bind(view,'focusChange'))); }
    if (emit2) { (this.subscription2 = this.context.selectChange.subscribe(_eventHandler.bind(view,'selectChange'))); }
  }
}
const nodeDebugInfos_MdTabGroup_Host0:import15.StaticNodeDebugInfo[] = [new import15.StaticNodeDebugInfo([import1.MdTabGroup],import1.MdTabGroup,{})];
var renderType_MdTabGroup_Host:import16.RenderComponentType = import14.createRenderComponentType('',0,import17.ViewEncapsulation.None,([] as any[]),{});
class View_MdTabGroup_Host0 extends import13.DebugAppView<any> {
  _el_0:any;
  compView_0:import13.AppView<import1.MdTabGroup>;
  _MdTabGroup_0_3:Wrapper_MdTabGroup;
  _query_MdTab_0_0:import18.QueryList<any>;
  constructor(viewUtils:import14.ViewUtils,parentView:import13.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdTabGroup_Host0,renderType_MdTabGroup_Host,import19.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import20.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTabGroup_Host0);
  }
  createInternal(rootSelector:string):import21.ComponentRef<any> {
    this._el_0 = import14.selectOrCreateRenderHostElement(this.renderer,'md-tab-group',import14.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdTabGroup0(this.viewUtils,this,0,this._el_0);
    this._MdTabGroup_0_3 = new Wrapper_MdTabGroup(this.renderer);
    this._query_MdTab_0_0 = new import18.QueryList<any>();
    this.compView_0.create(this._MdTabGroup_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import21.ComponentRef_<any>(0,this,this._el_0,this._MdTabGroup_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdTabGroup) && (0 === requestNodeIndex))) { return this._MdTabGroup_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdTabGroup_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdTab_0_0.dirty) {
        this._query_MdTab_0_0.reset(([] as any[]));
        this._MdTabGroup_0_3.context._tabs = this._query_MdTab_0_0;
        this._query_MdTab_0_0.notifyOnChanges();
      }
      this.debug(0,0,0);
      this._MdTabGroup_0_3.context.ngAfterContentChecked();
    }
    this._MdTabGroup_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      this.debug(0,0,0);
      this._MdTabGroup_0_3.context.ngAfterViewChecked();
    }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdTabGroup_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const MdTabGroupNgFactory:import21.ComponentFactory<import1.MdTabGroup> = new import21.ComponentFactory<import1.MdTabGroup>('md-tab-group, mat-tab-group',View_MdTabGroup_Host0,import1.MdTabGroup);
const styles_MdTabGroup:any[] = [import22.styles];
const nodeDebugInfos_MdTabGroup3:import15.StaticNodeDebugInfo[] = ([] as any[]);
class View_MdTabGroup3 extends import13.DebugAppView<any> {
  _el_0:any;
  constructor(viewUtils:import14.ViewUtils,parentView:import13.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import23.ViewContainer) {
    super(View_MdTabGroup3,renderType_MdTabGroup,import19.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import20.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTabGroup3,declaredViewContainer);
  }
  createInternal(rootSelector:string):import21.ComponentRef<any> {
    this._el_0 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
  const nodeDebugInfos_MdTabGroup2:import15.StaticNodeDebugInfo[] = [new import15.StaticNodeDebugInfo([
    import24.TemplateRef,
    import3.PortalHostDirective
  ]
,(null as any),{})];
class View_MdTabGroup2 extends import13.DebugAppView<any> {
  _anchor_0:any;
  /*private*/ _vc_0:import23.ViewContainer;
  _TemplateRef_0_5:any;
  _PortalHostDirective_0_6:import25.Wrapper_PortalHostDirective;
  _el_1:any;
  constructor(viewUtils:import14.ViewUtils,parentView:import13.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import23.ViewContainer) {
    super(View_MdTabGroup2,renderType_MdTabGroup,import19.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import20.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTabGroup2,declaredViewContainer);
  }
  createInternal(rootSelector:string):import21.ComponentRef<any> {
    this._anchor_0 = this.renderer.createTemplateAnchor((null as any),this.debug(0,0,568));
    this._vc_0 = new import23.ViewContainer(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import24.TemplateRef_(this,0,this._anchor_0);
    this._PortalHostDirective_0_6 = new import25.Wrapper_PortalHostDirective(this.parentView.parentView.parentView.injectorGet(import26.ComponentFactoryResolver,this.parentView.parentView.parentIndex),this._vc_0.vcRef);
    this._el_1 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this.init(this._el_1,((<any>this.renderer).directRenderer? (null as any): [this._anchor_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import24.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import3.PortalHostDirective) && (0 === requestNodeIndex))) { return this._PortalHostDirective_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,578);
    const currVal_0_0_0:any = this.parentView.context.$implicit.templateLabel;
    this._PortalHostDirective_0_6.check_portal(currVal_0_0_0,throwOnChange,false);
    this._PortalHostDirective_0_6.ngDoCheck(this,this._anchor_0,throwOnChange);
    this._vc_0.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
    this._PortalHostDirective_0_6.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._vc_0.nativeElement,ctx);
    this._vc_0.visitNestedViewRootNodes(cb,ctx);
    cb(this._el_1,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import13.AppView<any> {
    if ((nodeIndex == 0)) { return new View_MdTabGroup3(this.viewUtils,this,0,this._anchor_0,this._vc_0); }
    return (null as any);
  }
}
const nodeDebugInfos_MdTabGroup4:import15.StaticNodeDebugInfo[] = [new import15.StaticNodeDebugInfo(([] as any[]),(null as any),{})];
class View_MdTabGroup4 extends import13.DebugAppView<any> {
  _text_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import14.ViewUtils,parentView:import13.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import23.ViewContainer) {
    super(View_MdTabGroup4,renderType_MdTabGroup,import19.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import20.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTabGroup4,declaredViewContainer);
    this._expr_1 = import12.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import21.ComponentRef<any> {
    this._text_0 = this.renderer.createText((null as any),'',this.debug(0,0,674));
    this.init(this._text_0,((<any>this.renderer).directRenderer? (null as any): [this._text_0]),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,674);
    const currVal_1:any = import14.inlineInterpolate(1,'',this.parentView.context.$implicit.textLabel,'');
    if (import14.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setText(this._text_0,currVal_1);
      this._expr_1 = currVal_1;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._text_0,ctx);
  }
}
const nodeDebugInfos_MdTabGroup1:import15.StaticNodeDebugInfo[] = [
  new import15.StaticNodeDebugInfo([
    import5.MdRipple,
    import27.MdTabLabelWrapper
  ]
  ,(null as any),{}),
  new import15.StaticNodeDebugInfo([
    import24.TemplateRef,
    import28.NgIf
  ]
  ,(null as any),{}),
  new import15.StaticNodeDebugInfo([
    import24.TemplateRef,
    import28.NgIf
  ]
  ,(null as any),{})
]
;
class View_MdTabGroup1 extends import13.DebugAppView<any> {
  _el_0:any;
  _MdRipple_0_3:import29.Wrapper_MdRipple;
  _MdTabLabelWrapper_0_4:import30.Wrapper_MdTabLabelWrapper;
  _anchor_1:any;
  /*private*/ _vc_1:import23.ViewContainer;
  _TemplateRef_1_5:any;
  _NgIf_1_6:import31.Wrapper_NgIf;
  _anchor_2:any;
  /*private*/ _vc_2:import23.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import31.Wrapper_NgIf;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  constructor(viewUtils:import14.ViewUtils,parentView:import13.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import23.ViewContainer) {
    super(View_MdTabGroup1,renderType_MdTabGroup,import19.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import20.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTabGroup1,declaredViewContainer);
    this._expr_11 = import12.UNINITIALIZED;
    this._expr_12 = import12.UNINITIALIZED;
    this._expr_13 = import12.UNINITIALIZED;
    this._expr_14 = import12.UNINITIALIZED;
    this._expr_15 = import12.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import21.ComponentRef<any> {
    this._el_0 = import14.createRenderElement(this.renderer,(null as any),'div',new import14.InlineArray8(8,'class','mat-tab-label','md-ripple','','md-tab-label-wrapper','','role','tab'),this.debug(0,0,143));
    this._MdRipple_0_3 = new import29.Wrapper_MdRipple(new import32.ElementRef(this._el_0),this.parentView.parentView.injectorGet(import33.NgZone,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import11.ViewportRuler,this.parentView.parentIndex));
    this._MdTabLabelWrapper_0_4 = new import30.Wrapper_MdTabLabelWrapper(new import32.ElementRef(this._el_0),this.renderer);
    this._anchor_1 = this.renderer.createTemplateAnchor(this._el_0,this.debug(1,0,531));
    this._vc_1 = new import23.ViewContainer(1,0,this,this._anchor_1);
    this._TemplateRef_1_5 = new import24.TemplateRef_(this,1,this._anchor_1);
    this._NgIf_1_6 = new import31.Wrapper_NgIf(this._vc_1.vcRef,this._TemplateRef_1_5);
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,this.debug(2,0,636));
    this._vc_2 = new import23.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import24.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import31.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    var disposable_0:Function = import14.subscribeToRenderElement(this,this._el_0,new import14.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._anchor_1,
      this._anchor_2
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import24.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import28.NgIf) && (1 === requestNodeIndex))) { return this._NgIf_1_6.context; }
    if (((token === import24.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import28.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    if (((token === import5.MdRipple) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 2)))) { return this._MdRipple_0_3.context; }
    if (((token === import27.MdTabLabelWrapper) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 2)))) { return this._MdTabLabelWrapper_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,143);
    this._MdRipple_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.debug(0,0,454);
    const currVal_0_1_0:any = this.context.$implicit.disabled;
    this._MdTabLabelWrapper_0_4.check_disabled(currVal_0_1_0,throwOnChange,false);
    this._MdTabLabelWrapper_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.debug(1,0,541);
    const currVal_1_0_0:any = this.context.$implicit.templateLabel;
    this._NgIf_1_6.check_ngIf(currVal_1_0_0,throwOnChange,false);
    this._NgIf_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    this.debug(2,0,646);
    const currVal_2_0_0:boolean = !this.context.$implicit.templateLabel;
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this.debug(0,0,253);
    const currVal_11:any = this.parentView.context._getTabLabelId(this.context.index);
    if (import14.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      this.renderer.setElementProperty(this._el_0,'id',currVal_11);
      this._expr_11 = currVal_11;
    }
    this.debug(0,0,278);
    const currVal_12:any = ((this.parentView.context.selectedIndex == this.context.index)? 0: (0 - 1));
    if (import14.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setElementProperty(this._el_0,'tabIndex',currVal_12);
      this._expr_12 = currVal_12;
    }
    this.debug(0,0,319);
    const currVal_13:any = this.parentView.context._getTabContentId(this.context.index);
    if (import14.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setElementAttribute(this._el_0,'aria-controls',((currVal_13 == null)? (null as any): currVal_13.toString()));
      this._expr_13 = currVal_13;
    }
    this.debug(0,0,362);
    const currVal_14:any = (this.parentView.context.selectedIndex == this.context.index);
    if (import14.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setElementAttribute(this._el_0,'aria-selected',((currVal_14 == null)? (null as any): currVal_14.toString()));
      this._expr_14 = currVal_14;
    }
    this.debug(0,0,404);
    const currVal_15:any = (this.parentView.context.selectedIndex == this.context.index);
    if (import14.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      this.renderer.setElementClass(this._el_0,'mat-tab-label-active',currVal_15);
      this._expr_15 = currVal_15;
    }
    this._MdRipple_0_3.checkHost(this,this,this._el_0,throwOnChange);
    this._MdTabLabelWrapper_0_4.checkHost(this,this,this._el_0,throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<View_MdTabGroup0>this.parentView)._query_MdTabLabelWrapper_0_0.setDirty();
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
    this._vc_2.destroyNestedViews();
    this.debug(1,0,531);
    this.debug(2,0,636);
    this._MdRipple_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import13.AppView<any> {
    if ((nodeIndex == 1)) { return new View_MdTabGroup2(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    if ((nodeIndex == 2)) { return new View_MdTabGroup4(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,143);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>((<View_MdTabGroup0>this.parentView)._MdTabHeader_0_4.context.focusIndex = (this.parentView.context.selectedIndex = this.context.index))) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
  const nodeDebugInfos_MdTabGroup5:import15.StaticNodeDebugInfo[] = [new import15.StaticNodeDebugInfo([
    import4.MdPrefixRejector,
    import34.MdTabBody
  ]
,import34.MdTabBody,{})];
class View_MdTabGroup5 extends import13.DebugAppView<any> {
  _el_0:any;
  compView_0:import13.AppView<import34.MdTabBody>;
  _MdPrefixRejector_0_3:import35.Wrapper_MdPrefixRejector;
  _MdTabBody_0_4:import36.Wrapper_MdTabBody;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  constructor(viewUtils:import14.ViewUtils,parentView:import13.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import23.ViewContainer) {
    super(View_MdTabGroup5,renderType_MdTabGroup,import19.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import20.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTabGroup5,declaredViewContainer);
    this._expr_4 = import12.UNINITIALIZED;
    this._expr_5 = import12.UNINITIALIZED;
    this._expr_6 = import12.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import21.ComponentRef<any> {
    this._el_0 = import14.createRenderElement(this.renderer,(null as any),'md-tab-body',new import14.InlineArray2(2,'role','tabpanel'),this.debug(0,0,774));
    this.compView_0 = new import36.View_MdTabBody0(this.viewUtils,this,0,this._el_0);
    this._MdPrefixRejector_0_3 = new import35.Wrapper_MdPrefixRejector(this.parentView.parentView.injectorGet(import4.MATERIAL_COMPATIBILITY_MODE,this.parentView.parentIndex,(null as any)));
    this._MdTabBody_0_4 = new import36.Wrapper_MdTabBody(this.parentView.parentView.injectorGet(import37.Dir,this.parentView.parentIndex,(null as any)),new import32.ElementRef(this._el_0),this.compView_0.ref);
    this.compView_0.create(this._MdTabBody_0_4.context);
    var disposable_0:Function = import14.subscribeToRenderElement(this,this._el_0,new import14.InlineArray4(4,'onCentered',(null as any),'onCentering',(null as any)),this.eventHandler(this.handleEvent_0));
    this._MdTabBody_0_4.subscribe(this,this.eventHandler(this.handleEvent_0),true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import4.MdPrefixRejector) && (0 === requestNodeIndex))) { return this._MdPrefixRejector_0_3.context; }
    if (((token === import34.MdTabBody) && (0 === requestNodeIndex))) { return this._MdTabBody_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,774);
    this._MdPrefixRejector_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.debug(0,0,963);
    const currVal_0_1_0:any = this.context.$implicit.content;
    this._MdTabBody_0_4.check__content(currVal_0_1_0,throwOnChange,false);
    this.debug(0,0,987);
    const currVal_0_1_1:any = this.context.$implicit.position;
    this._MdTabBody_0_4.check_position(currVal_0_1_1,throwOnChange,false);
    this.debug(0,0,1013);
    const currVal_0_1_2:any = this.context.$implicit.origin;
    this._MdTabBody_0_4.check_origin(currVal_0_1_2,throwOnChange,false);
    this._MdTabBody_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) {
      this.debug(0,0,774);
      this._MdTabBody_0_4.context.ngAfterContentChecked();
    }
    this.debug(0,0,844);
    const currVal_4:any = this.parentView.context._getTabContentId(this.context.index);
    if (import14.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementProperty(this._el_0,'id',currVal_4);
      this._expr_4 = currVal_4;
    }
    this.debug(0,0,871);
    const currVal_5:any = this.parentView.context._getTabLabelId(this.context.index);
    if (import14.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setElementAttribute(this._el_0,'aria-labelledby',((currVal_5 == null)? (null as any): currVal_5.toString()));
      this._expr_5 = currVal_5;
    }
    this.debug(0,0,914);
    const currVal_6:any = (this.parentView.context.selectedIndex == this.context.index);
    if (import14.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setElementClass(this._el_0,'mat-tab-body-active',currVal_6);
      this._expr_6 = currVal_6;
    }
    this._MdTabBody_0_4.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      this.debug(0,0,774);
      this._MdTabBody_0_4.context.ngAfterViewChecked();
    }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdTabBody_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,774);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'onCentered')) {
      const pd_sub_0:any = ((<any>this.parentView.context._removeTabBodyWrapperHeight()) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onCentering')) {
      const pd_sub_1:any = ((<any>this.parentView.context._setTabBodyWrapperHeight($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
const nodeDebugInfos_MdTabGroup0:import15.StaticNodeDebugInfo[] = [
  new import15.StaticNodeDebugInfo([
    import4.MdPrefixRejector,
    import38.MdTabHeader
  ]
  ,import38.MdTabHeader,{tabHeader: import38.MdTabHeader}),
  new import15.StaticNodeDebugInfo([
    import24.TemplateRef,
    import39.NgFor
  ]
  ,(null as any),{}),
  new import15.StaticNodeDebugInfo(([] as any[]),(null as any),{tabBodyWrapper: (null as any)}),
  new import15.StaticNodeDebugInfo([
    import24.TemplateRef,
    import39.NgFor
  ]
  ,(null as any),{})
]
;
var renderType_MdTabGroup:import16.RenderComponentType = import14.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/node_modules/@angular/material/tabs/tab-group.html',0,import17.ViewEncapsulation.Emulated,styles_MdTabGroup,{});
export class View_MdTabGroup0 extends import13.DebugAppView<import1.MdTabGroup> {
  _viewQuery_tabBodyWrapper_0:import18.QueryList<any>;
  _el_0:any;
  compView_0:import13.AppView<import38.MdTabHeader>;
  _MdPrefixRejector_0_3:import35.Wrapper_MdPrefixRejector;
  _MdTabHeader_0_4:import40.Wrapper_MdTabHeader;
  _query_MdTabLabelWrapper_0_0:import18.QueryList<any>;
  _anchor_1:any;
  /*private*/ _vc_1:import23.ViewContainer;
  _TemplateRef_1_5:any;
  _NgFor_1_6:import41.Wrapper_NgFor;
  _el_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import23.ViewContainer;
  _TemplateRef_3_5:any;
  _NgFor_3_6:import41.Wrapper_NgFor;
  constructor(viewUtils:import14.ViewUtils,parentView:import13.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdTabGroup0,renderType_MdTabGroup,import19.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import20.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTabGroup0);
  }
  createInternal(rootSelector:string):import21.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_tabBodyWrapper_0 = new import18.QueryList<any>();
    this._el_0 = import14.createRenderElement(this.renderer,parentRenderNode,'md-tab-header',new import14.InlineArray2(2,'class','mat-tab-header'),this.debug(0,0,0));
    this.compView_0 = new import40.View_MdTabHeader0(this.viewUtils,this,0,this._el_0);
    this._MdPrefixRejector_0_3 = new import35.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import4.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdTabHeader_0_4 = new import40.Wrapper_MdTabHeader(this.parentView.injectorGet(import33.NgZone,this.parentIndex),new import32.ElementRef(this._el_0),this.parentView.injectorGet(import37.Dir,this.parentIndex,(null as any)));
    this._query_MdTabLabelWrapper_0_0 = new import18.QueryList<any>();
    this._anchor_1 = this.renderer.createTemplateAnchor((null as any),this.debug(1,0,143));
    this._vc_1 = new import23.ViewContainer(1,0,this,this._anchor_1);
    this._TemplateRef_1_5 = new import24.TemplateRef_(this,1,this._anchor_1);
    this._NgFor_1_6 = new import41.Wrapper_NgFor(this._vc_1.vcRef,this._TemplateRef_1_5,this.parentView.injectorGet(import42.IterableDiffers,this.parentIndex),this.ref);
    this.compView_0.create(this._MdTabHeader_0_4.context);
    this._el_2 = import14.createRenderElement(this.renderer,parentRenderNode,'div',new import14.InlineArray2(2,'class','mat-tab-body-wrapper'),this.debug(2,0,724));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_2,this.debug(3,0,774));
    this._vc_3 = new import23.ViewContainer(3,2,this,this._anchor_3);
    this._TemplateRef_3_5 = new import24.TemplateRef_(this,3,this._anchor_3);
    this._NgFor_3_6 = new import41.Wrapper_NgFor(this._vc_3.vcRef,this._TemplateRef_3_5,this.parentView.injectorGet(import42.IterableDiffers,this.parentIndex),this.ref);
    var disposable_0:Function = import14.subscribeToRenderElement(this,this._el_0,new import14.InlineArray4(4,'indexFocused',(null as any),'selectFocusedIndex',(null as any)),this.eventHandler(this.handleEvent_0));
    this._MdTabHeader_0_4.subscribe(this,this.eventHandler(this.handleEvent_0),true,true);
    this._viewQuery_tabBodyWrapper_0.reset([new import32.ElementRef(this._el_2)]);
    this.context._tabBodyWrapper = this._viewQuery_tabBodyWrapper_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._anchor_1,
      this._el_2,
      this._anchor_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import24.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import39.NgFor) && (1 === requestNodeIndex))) { return this._NgFor_1_6.context; }
    if (((token === import4.MdPrefixRejector) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._MdPrefixRejector_0_3.context; }
    if (((token === import38.MdTabHeader) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._MdTabHeader_0_4.context; }
    if (((token === import24.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import39.NgFor) && (3 === requestNodeIndex))) { return this._NgFor_3_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdPrefixRejector_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.debug(0,0,15);
    const currVal_0_1_0:any = this.context.selectedIndex;
    this._MdTabHeader_0_4.check_selectedIndex(currVal_0_1_0,throwOnChange,false);
    this._MdTabHeader_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.debug(1,0,212);
    const currVal_1_0_0:any = this.context._tabs;
    this._NgFor_1_6.check_ngForOf(currVal_1_0_0,throwOnChange,false);
    this._NgFor_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    this.debug(3,0,803);
    const currVal_3_0_0:any = this.context._tabs;
    this._NgFor_3_6.check_ngForOf(currVal_3_0_0,throwOnChange,false);
    this._NgFor_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdTabLabelWrapper_0_0.dirty) {
          this._query_MdTabLabelWrapper_0_0.reset([this._vc_1.mapNestedViews(View_MdTabGroup1,(nestedView:View_MdTabGroup1):any => {
            return [nestedView._MdTabLabelWrapper_0_4.context];
        })]);
        this._MdTabHeader_0_4.context._labelWrappers = this._query_MdTabLabelWrapper_0_0;
        this._query_MdTabLabelWrapper_0_0.notifyOnChanges();
      }
      this.debug(0,0,0);
      if ((this.numberOfChecks === 0)) { this._MdTabHeader_0_4.context.ngAfterContentInit(); }
      this._MdTabHeader_0_4.context.ngAfterContentChecked();
    }
    this._MdTabHeader_0_4.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
    this._vc_3.destroyNestedViews();
    this.compView_0.destroy();
    this.debug(1,0,143);
    this._MdTabHeader_0_4.ngOnDestroy();
    this.debug(0,0,0);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {
      cb(this._vc_1.nativeElement,ctx);
      this._vc_1.visitNestedViewRootNodes(cb,ctx);
    }
  }
  createEmbeddedViewInternal(nodeIndex:number):import13.AppView<any> {
    if ((nodeIndex == 1)) { return new View_MdTabGroup1(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    if ((nodeIndex == 3)) { return new View_MdTabGroup5(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'indexFocused')) {
      const pd_sub_0:any = ((<any>this.context._focusChanged($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'selectFocusedIndex')) {
      const pd_sub_1:any = ((<any>(this.context.selectedIndex = $event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}