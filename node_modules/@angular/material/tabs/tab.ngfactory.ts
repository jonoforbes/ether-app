/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/material/tabs/tab';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_container';
import * as import8 from '@angular/core/src/linker/query_list';
import * as import9 from '@angular/core/src/linker/view_type';
import * as import10 from '@angular/core/src/change_detection/constants';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '@angular/core/src/linker/template_ref';
export class Wrapper_MdTab {
  /*private*/ _eventHandler:Function;
  context:import0.MdTab;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.MdTab(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_textLabel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.textLabel = currValue;
      this._expr_0 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_MdTab_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import0.MdTab],import0.MdTab,{})];
var renderType_MdTab_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_MdTab_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  /*private*/ _vc_0:import7.ViewContainer;
  compView_0:import2.AppView<import0.MdTab>;
  _MdTab_0_5:Wrapper_MdTab;
  _query_MdTabLabel_0_0:import8.QueryList<any>;
  _el_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdTab_Host0,renderType_MdTab_Host,import9.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import10.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTab_Host0);
  }
  createInternal(rootSelector:string):import11.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'md-tab',import3.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this._vc_0 = new import7.ViewContainer(0,(null as any),this,this._el_0);
    this.compView_0 = new View_MdTab0(this.viewUtils,this,0,this._el_0);
    this._MdTab_0_5 = new Wrapper_MdTab(this._vc_0.vcRef);
    this._query_MdTabLabel_0_0 = new import8.QueryList<any>();
    this.compView_0.create(this._MdTab_0_5.context);
    this._el_1 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._query_MdTabLabel_0_0.reset(([] as any[]));
    this._MdTab_0_5.context.templateLabel = this._query_MdTabLabel_0_0.first;
    this.init(this._el_1,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import11.ComponentRef_<any>(0,this,this._el_0,this._MdTab_0_5.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MdTab) && (0 === requestNodeIndex))) { return this._MdTab_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdTab_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    this._vc_0.detectChangesInNestedViews(throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._vc_0.nativeElement,ctx);
    this._vc_0.visitNestedViewRootNodes(cb,ctx);
    cb(this._el_1,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const MdTabNgFactory:import11.ComponentFactory<import0.MdTab> = new import11.ComponentFactory<import0.MdTab>('md-tab, mat-tab',View_MdTab_Host0,import0.MdTab);
const styles_MdTab:any[] = ([] as any[]);
const nodeDebugInfos_MdTab1:import4.StaticNodeDebugInfo[] = ([] as any[]);
class View_MdTab1 extends import2.DebugAppView<any> {
  _el_0:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import7.ViewContainer) {
    super(View_MdTab1,renderType_MdTab,import9.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import10.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTab1,declaredViewContainer);
  }
  createInternal(rootSelector:string):import11.ComponentRef<any> {
    this.debug((null as any),0,10);
    this._el_0 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    this.visitProjectedNodes(0,cb,ctx);
    cb(this._el_0,ctx);
  }
}
const nodeDebugInfos_MdTab0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import12.TemplateRef],(null as any),{})];
var renderType_MdTab:import5.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/node_modules/@angular/material/tabs/tab.html',1,import6.ViewEncapsulation.None,styles_MdTab,{});
export class View_MdTab0 extends import2.DebugAppView<import0.MdTab> {
  _viewQuery_TemplateRef_0:import8.QueryList<any>;
  _anchor_0:any;
  /*private*/ _vc_0:import7.ViewContainer;
  _TemplateRef_0_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdTab0,renderType_MdTab,import9.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import10.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTab0);
  }
  createInternal(rootSelector:string):import11.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_TemplateRef_0 = new import8.QueryList<any>();
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,this.debug(0,0,0));
    this._vc_0 = new import7.ViewContainer(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_4 = new import12.TemplateRef_(this,0,this._anchor_0);
    this._viewQuery_TemplateRef_0.reset([this._TemplateRef_0_4]);
    this.context._content = this._viewQuery_TemplateRef_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [this._anchor_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._vc_0.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 0)) { return new View_MdTab1(this.viewUtils,this,0,this._anchor_0,this._vc_0); }
    return (null as any);
  }
}