/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/material/tabs/tab-body';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/material/core/rtl/dir';
import * as import11 from '@angular/core/src/linker/element_ref';
import * as import12 from '@angular/core/src/animation/animation_transition';
import * as import13 from '@angular/core/src/animation/animation_sequence_player';
import * as import14 from '@angular/core/src/animation/animation_styles';
import * as import15 from '@angular/core/src/animation/animation_style_util';
import * as import16 from '@angular/core/src/animation/animation_keyframe';
import * as import17 from '@angular/core/src/animation/animation_player';
import * as import18 from '@angular/core/src/linker/view_container';
import * as import19 from '@angular/core/src/linker/template_ref';
import * as import20 from '@angular/material/core/portal/portal-directives';
import * as import21 from '@angular/core/src/linker/query_list';
import * as import22 from '../core/portal/portal-directives.ngfactory';
import * as import23 from '@angular/core/src/linker/component_factory_resolver';
export class Wrapper_MdTabBody {
  /*private*/ _eventHandler:Function;
  context:import0.MdTabBody;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  subscription0:any;
  subscription1:any;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import0.MdTabBody(p0,p1,p2);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
  }
  check__content(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context._content = currValue;
      this._expr_0 = currValue;
    }
  }
  check_position(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.position = currValue;
      this._expr_1 = currValue;
    }
  }
  check_origin(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.origin = currValue;
      this._expr_2 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_3:any = true;
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      view.renderer.setElementClass(el,'mat-tab-body',currVal_3);
      this._expr_3 = currVal_3;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onCentering.subscribe(_eventHandler.bind(view,'onCentering'))); }
    if (emit1) { (this.subscription1 = this.context.onCentered.subscribe(_eventHandler.bind(view,'onCentered'))); }
  }
}
const nodeDebugInfos_MdTabBody_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import0.MdTabBody],import0.MdTabBody,{})];
var renderType_MdTabBody_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_MdTabBody_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.MdTabBody>;
  _MdTabBody_0_3:Wrapper_MdTabBody;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdTabBody_Host0,renderType_MdTabBody_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTabBody_Host0);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'md-tab-body',import3.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdTabBody0(this.viewUtils,this,0,this._el_0);
    this._MdTabBody_0_3 = new Wrapper_MdTabBody(this.injectorGet(import10.Dir,this.parentIndex,(null as any)),new import11.ElementRef(this._el_0),this.compView_0.ref);
    this.compView_0.create(this._MdTabBody_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import9.ComponentRef_<any>(0,this,this._el_0,this._MdTabBody_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MdTabBody) && (0 === requestNodeIndex))) { return this._MdTabBody_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdTabBody_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) {
      this.debug(0,0,0);
      this._MdTabBody_0_3.context.ngAfterContentChecked();
    }
    this._MdTabBody_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      this.debug(0,0,0);
      this._MdTabBody_0_3.context.ngAfterViewChecked();
    }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdTabBody_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const MdTabBodyNgFactory:import9.ComponentFactory<import0.MdTabBody> = new import9.ComponentFactory<import0.MdTabBody>('md-tab-body, mat-tab-body',View_MdTabBody_Host0,import0.MdTabBody);
const styles_MdTabBody:any[] = ([] as any[]);
var MdTabBody_translateTab_states:any = {
  'left': {'transform': 'translate3d(-100%, 0, 0)'},
  'left-origin-center': {'transform': 'translate3d(0, 0, 0)'},
  'right-origin-center': {'transform': 'translate3d(0, 0, 0)'},
  'center': {'transform': 'translate3d(0, 0, 0)'},
  'right': {'transform': 'translate3d(100%, 0, 0)'},
  '*': {},
  'void': {}
}
;
function MdTabBody_translateTab_factory(view:import2.AppView<any>,element:any,currentState:any,nextState:any):import12.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,((nextState == 'void')? (null as any): 'translateTab'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = MdTabBody_translateTab_states['*'];
  var startStateStyles:any = MdTabBody_translateTab_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = MdTabBody_translateTab_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && ((((true && (nextState == 'left')) || (true && (nextState == 'right'))) || ((currentState == 'left') && (nextState == 'center'))) || ((currentState == 'right') && (nextState == 'center'))))) {
      player = new import13.AnimationSequencePlayer([view.renderer.animate(element,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[startStateStyles])),import15.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import16.AnimationKeyframe(0,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}]))),
        new import16.AnimationKeyframe(1,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),500,0,'cubic-bezier(0.35, 0, 0.25, 1)',previousPlayers)]);
    totalTime = 500;
  }
  if (((player == (null as any)) && ((currentState == 'void') && (nextState == 'left-origin-center')))) {
      player = new import13.AnimationSequencePlayer([view.renderer.animate(element,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {'transform': 'translate3d(-100%, 0, 0)'}
      ]
      )),import15.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import16.AnimationKeyframe(0,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}]))),
        new import16.AnimationKeyframe(1,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),500,0,'cubic-bezier(0.35, 0, 0.25, 1)',previousPlayers)]);
    totalTime = 500;
  }
  if (((player == (null as any)) && ((currentState == 'void') && (nextState == 'right-origin-center')))) {
      player = new import13.AnimationSequencePlayer([view.renderer.animate(element,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {'transform': 'translate3d(100%, 0, 0)'}
      ]
      )),import15.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import16.AnimationKeyframe(0,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}]))),
        new import16.AnimationKeyframe(1,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),500,0,'cubic-bezier(0.35, 0, 0.25, 1)',previousPlayers)]);
    totalTime = 500;
  }
  if ((player == (null as any))) { (player = new import17.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import15.renderStyles(element,view.renderer,import15.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import13.AnimationSequencePlayer(previousPlayers).destroy();
  import15.renderStyles(element,view.renderer,import15.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'translateTab',player);
  return new import12.AnimationTransition(player,currentState,nextState,totalTime);
}
const nodeDebugInfos_MdTabBody1:import4.StaticNodeDebugInfo[] = ([] as any[]);
class View_MdTabBody1 extends import2.DebugAppView<any> {
  _el_0:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import18.ViewContainer) {
    super(View_MdTabBody1,renderType_MdTabBody,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTabBody1,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
const nodeDebugInfos_MdTabBody0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{content: (null as any)}),
  new import4.StaticNodeDebugInfo([
    import19.TemplateRef,
    import20.PortalHostDirective
  ]
  ,(null as any),{})
]
;
var renderType_MdTabBody:import5.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/winecellar/node_modules/@angular/material/tabs/tab-body.html',0,import6.ViewEncapsulation.None,styles_MdTabBody,{'translateTab': MdTabBody_translateTab_factory});
export class View_MdTabBody0 extends import2.DebugAppView<import0.MdTabBody> {
  _viewQuery_PortalHostDirective_0:import21.QueryList<any>;
  _el_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import18.ViewContainer;
  _TemplateRef_1_5:any;
  _PortalHostDirective_1_6:import22.Wrapper_PortalHostDirective;
  /*private*/ _expr_6:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdTabBody0,renderType_MdTabBody,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTabBody0);
    this._expr_6 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_PortalHostDirective_0 = new import21.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','mat-tab-body-content'),this.debug(0,0,0));
    this._anchor_1 = this.renderer.createTemplateAnchor(this._el_0,this.debug(1,0,205));
    this._vc_1 = new import18.ViewContainer(1,0,this,this._anchor_1);
    this._TemplateRef_1_5 = new import19.TemplateRef_(this,1,this._anchor_1);
    this._PortalHostDirective_1_6 = new import22.Wrapper_PortalHostDirective(this.parentView.injectorGet(import23.ComponentFactoryResolver,this.parentIndex),this._vc_1.vcRef);
    this._viewQuery_PortalHostDirective_0.reset([this._PortalHostDirective_1_6.context]);
    this.context._portalHost = this._viewQuery_PortalHostDirective_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._anchor_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import20.PortalHostDirective) && (1 === requestNodeIndex))) { return this._PortalHostDirective_1_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_6:any = (this.context._canBeAnimated? this.context._position: (null as any));
    if (import3.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      var animationTransition_translateTab:any = this.componentType.animations['translateTab'](this,this._el_0,((this._expr_6 == import1.UNINITIALIZED)? 'void': this._expr_6),((currVal_6 == import1.UNINITIALIZED)? 'void': currVal_6));
      animationTransition_translateTab.onStart(this.handleEvent_0.bind(this).bind(this,'@translateTab.start'));
      animationTransition_translateTab.onDone(this.handleEvent_0.bind(this).bind(this,'@translateTab.done'));
      this._expr_6 = currVal_6;
    }
    this.debug(1,0,215);
    const currVal_1_0_0:any = '';
    this._PortalHostDirective_1_6.check_portal(currVal_1_0_0,throwOnChange,false);
    this._PortalHostDirective_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
    this._PortalHostDirective_1_6.ngOnDestroy();
  }
  detachInternal():void {
    var animationTransition_translateTab:any = this.componentType.animations['translateTab'](this,this._el_0,this._expr_6,'void');
    animationTransition_translateTab.onStart(this.handleEvent_0.bind(this).bind(this,'@translateTab.start'));
    animationTransition_translateTab.onDone(this.handleEvent_0.bind(this).bind(this,'@translateTab.done'));
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 1)) { return new View_MdTabBody1(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == '@translateTab.start')) {
      const pd_sub_0:any = ((<any>this.context._onTranslateTabStarted($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == '@translateTab.done')) {
      const pd_sub_1:any = ((<any>this.context._onTranslateTabComplete($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}