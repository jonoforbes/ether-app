/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/material/tabs/tab-header';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/query_list';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/change_detection/constants';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '@angular/core/src/zone/ng_zone';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from '@angular/material/core/rtl/dir';
import * as import14 from './tab-header.css.ngstyle';
import * as import15 from '@angular/material/core/ripple/ripple';
import * as import16 from '@angular/material/core/observe-content/observe-content';
import * as import17 from '@angular/material/core/compatibility/compatibility';
import * as import18 from '@angular/material/tabs/ink-bar';
import * as import19 from '../core/ripple/ripple.ngfactory';
import * as import20 from '../core/observe-content/observe-content.ngfactory';
import * as import21 from '../core/compatibility/compatibility.ngfactory';
import * as import22 from './ink-bar.ngfactory';
import * as import23 from '@angular/material/core/overlay/position/viewport-ruler';
export class Wrapper_MdTabHeader {
  /*private*/ _eventHandler:Function;
  context:import0.MdTabHeader;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  subscription0:any;
  subscription1:any;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import0.MdTabHeader(p0,p1,p2);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
  }
  check_selectedIndex(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.selectedIndex = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_1:any = this.context._showPaginationControls;
    if (import3.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      view.renderer.setElementClass(el,'mat-tab-header-pagination-controls-enabled',currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = (this.context._getLayoutDirection() == 'rtl');
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      view.renderer.setElementClass(el,'mat-tab-header-rtl',currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.selectFocusedIndex.subscribe(_eventHandler.bind(view,'selectFocusedIndex'))); }
    if (emit1) { (this.subscription1 = this.context.indexFocused.subscribe(_eventHandler.bind(view,'indexFocused'))); }
  }
}
const nodeDebugInfos_MdTabHeader_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import0.MdTabHeader],import0.MdTabHeader,{})];
var renderType_MdTabHeader_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_MdTabHeader_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.MdTabHeader>;
  _MdTabHeader_0_3:Wrapper_MdTabHeader;
  _query_MdTabLabelWrapper_0_0:import7.QueryList<any>;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdTabHeader_Host0,renderType_MdTabHeader_Host,import8.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTabHeader_Host0);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'md-tab-header',new import3.InlineArray2(2,'class','mat-tab-header'),rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdTabHeader0(this.viewUtils,this,0,this._el_0);
    this._MdTabHeader_0_3 = new Wrapper_MdTabHeader(this.injectorGet(import11.NgZone,this.parentIndex),new import12.ElementRef(this._el_0),this.injectorGet(import13.Dir,this.parentIndex,(null as any)));
    this._query_MdTabLabelWrapper_0_0 = new import7.QueryList<any>();
    this.compView_0.create(this._MdTabHeader_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import10.ComponentRef_<any>(0,this,this._el_0,this._MdTabHeader_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MdTabHeader) && (0 === requestNodeIndex))) { return this._MdTabHeader_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdTabHeader_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdTabLabelWrapper_0_0.dirty) {
        this._query_MdTabLabelWrapper_0_0.reset(([] as any[]));
        this._MdTabHeader_0_3.context._labelWrappers = this._query_MdTabLabelWrapper_0_0;
        this._query_MdTabLabelWrapper_0_0.notifyOnChanges();
      }
      this.debug(0,0,0);
      if ((this.numberOfChecks === 0)) { this._MdTabHeader_0_3.context.ngAfterContentInit(); }
      this._MdTabHeader_0_3.context.ngAfterContentChecked();
    }
    this._MdTabHeader_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdTabHeader_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const MdTabHeaderNgFactory:import10.ComponentFactory<import0.MdTabHeader> = new import10.ComponentFactory<import0.MdTabHeader>('md-tab-header, mat-tab-header',View_MdTabHeader_Host0,import0.MdTabHeader);
const styles_MdTabHeader:any[] = [import14.styles];
const nodeDebugInfos_MdTabHeader0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo([import15.MdRipple],(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{tabListContainer: (null as any)}),
  new import4.StaticNodeDebugInfo([import16.ObserveContent],(null as any),{tabList: (null as any)}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import17.MdPrefixRejector,
    import18.MdInkBar
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo([import15.MdRipple],(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_MdTabHeader:import5.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/node_modules/@angular/material/tabs/tab-header.html',1,import6.ViewEncapsulation.None,styles_MdTabHeader,{});
export class View_MdTabHeader0 extends import2.DebugAppView<import0.MdTabHeader> {
  _viewQuery_MdInkBar_0:import7.QueryList<any>;
  _viewQuery_tabListContainer_1:import7.QueryList<any>;
  _viewQuery_tabList_2:import7.QueryList<any>;
  _el_0:any;
  _MdRipple_0_3:import19.Wrapper_MdRipple;
  _el_1:any;
  _el_2:any;
  _el_3:any;
  _ObserveContent_3_3:import20.Wrapper_ObserveContent;
  _el_4:any;
  _el_5:any;
  _MdPrefixRejector_5_3:import21.Wrapper_MdPrefixRejector;
  _MdInkBar_5_4:import22.Wrapper_MdInkBar;
  _el_6:any;
  _MdRipple_6_3:import19.Wrapper_MdRipple;
  _el_7:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdTabHeader0,renderType_MdTabHeader,import8.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdTabHeader0);
    this._expr_16 = import1.UNINITIALIZED;
    this._expr_17 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_MdInkBar_0 = new import7.QueryList<any>();
    this._viewQuery_tabListContainer_1 = new import7.QueryList<any>();
    this._viewQuery_tabList_2 = new import7.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray8(6,'aria-hidden','true','class','mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4','md-ripple',''),this.debug(0,0,0));
    this._MdRipple_0_3 = new import19.Wrapper_MdRipple(new import12.ElementRef(this._el_0),this.parentView.injectorGet(import11.NgZone,this.parentIndex),this.parentView.injectorGet(import23.ViewportRuler,this.parentIndex));
    this._el_1 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','mat-tab-header-pagination-chevron'),this.debug(1,0,260));
    this._el_2 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','mat-tab-label-container'),this.debug(2,0,319));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray4(4,'class','mat-tab-list','role','tablist'),this.debug(3,0,409));
    this._ObserveContent_3_3 = new import20.Wrapper_ObserveContent(new import12.ElementRef(this._el_3));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_3,'div',new import3.InlineArray2(2,'class','mat-tab-labels'),this.debug(4,0,501));
    this.debug((null as any),0,529);
    this.projectNodes(this._el_4,0);
    this._el_5 = import3.createRenderElement(this.renderer,this._el_3,'md-ink-bar',import3.EMPTY_INLINE_ARRAY,this.debug(5,0,560));
    this._MdPrefixRejector_5_3 = new import21.Wrapper_MdPrefixRejector(this.parentView.injectorGet(import17.MATERIAL_COMPATIBILITY_MODE,this.parentIndex,(null as any)));
    this._MdInkBar_5_4 = new import22.Wrapper_MdInkBar(this.renderer,new import12.ElementRef(this._el_5));
    this._el_6 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray8(6,'aria-hidden','true','class','mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4','md-ripple',''),this.debug(6,0,597));
    this._MdRipple_6_3 = new import19.Wrapper_MdRipple(new import12.ElementRef(this._el_6),this.parentView.injectorGet(import11.NgZone,this.parentIndex),this.parentView.injectorGet(import23.ViewportRuler,this.parentIndex));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_6,'div',new import3.InlineArray2(2,'class','mat-tab-header-pagination-chevron'),this.debug(7,0,853));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'keydown',(null as any)),this.eventHandler(this.handleEvent_2));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_3,new import3.InlineArray2(2,'cdkObserveContent',(null as any)),this.eventHandler(this.handleEvent_3));
    this._ObserveContent_3_3.subscribe(this,this.eventHandler(this.handleEvent_3),true);
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_6,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_6));
    this._viewQuery_MdInkBar_0.reset([this._MdInkBar_5_4.context]);
    this.context._inkBar = this._viewQuery_MdInkBar_0.first;
    this._viewQuery_tabListContainer_1.reset([new import12.ElementRef(this._el_2)]);
    this.context._tabListContainer = this._viewQuery_tabListContainer_1.first;
    this._viewQuery_tabList_2.reset([new import12.ElementRef(this._el_3)]);
    this.context._tabList = this._viewQuery_tabList_2.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1,
      this._el_2,
      this._el_3,
      this._el_4,
      this._el_5,
      this._el_6,
      this._el_7
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.MdRipple) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._MdRipple_0_3.context; }
    if (((token === import17.MdPrefixRejector) && (5 === requestNodeIndex))) { return this._MdPrefixRejector_5_3.context; }
    if (((token === import18.MdInkBar) && (5 === requestNodeIndex))) { return this._MdInkBar_5_4.context; }
    if (((token === import16.ObserveContent) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._ObserveContent_3_3.context; }
    if (((token === import15.MdRipple) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._MdRipple_6_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,118);
    const currVal_0_0_0:any = this.context._disableScrollBefore;
    this._MdRipple_0_3.check_disabled(currVal_0_0_0,throwOnChange,false);
    this._MdRipple_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.debug(3,0,409);
    this._ObserveContent_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    this.debug(5,0,560);
    this._MdPrefixRejector_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    this._MdInkBar_5_4.ngDoCheck(this,this._el_5,throwOnChange);
    this.debug(6,0,714);
    const currVal_6_0_0:any = this.context._disableScrollAfter;
    this._MdRipple_6_3.check_disabled(currVal_6_0_0,throwOnChange,false);
    this._MdRipple_6_3.ngDoCheck(this,this._el_6,throwOnChange);
    if (!throwOnChange) {
      this.debug(3,0,409);
      if ((this.numberOfChecks === 0)) { this._ObserveContent_3_3.context.ngAfterContentInit(); }
    }
    this.debug(0,0,160);
    const currVal_16:any = this.context._disableScrollBefore;
    if (import3.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementClass(this._el_0,'mat-tab-header-pagination-disabled',currVal_16);
      this._expr_16 = currVal_16;
    }
    this._MdRipple_0_3.checkHost(this,this,this._el_0,throwOnChange);
    this._MdInkBar_5_4.checkHost(this,this,this._el_5,throwOnChange);
    this.debug(6,0,755);
    const currVal_17:any = this.context._disableScrollAfter;
    if (import3.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementClass(this._el_6,'mat-tab-header-pagination-disabled',currVal_17);
      this._expr_17 = currVal_17;
    }
    this._MdRipple_6_3.checkHost(this,this,this._el_6,throwOnChange);
  }
  destroyInternal():void {
    this._MdRipple_0_3.ngOnDestroy();
    this.debug(0,0,0);
    this.debug(5,0,560);
    this._ObserveContent_3_3.ngOnDestroy();
    this.debug(3,0,409);
    this._MdRipple_6_3.ngOnDestroy();
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context._scrollHeader('before')) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.debug(2,0,319);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'keydown')) {
      const pd_sub_0:any = ((<any>this.context._handleKeydown($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_3(eventName:string,$event:any):boolean {
    this.debug(3,0,409);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'cdkObserveContent')) {
      const pd_sub_0:any = ((<any>this.context._onContentChanges()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_6(eventName:string,$event:any):boolean {
    this.debug(6,0,597);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context._scrollHeader('after')) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}