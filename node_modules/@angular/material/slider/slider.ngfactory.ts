/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/slider/slider';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/forms/src/directives';
import * as import4 from '@angular/forms/src/form_providers';
import * as import5 from '@angular/material/core/compatibility/compatibility';
import * as import6 from '@angular/common/src/localization';
import * as import7 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import8 from '@angular/material/core/gestures/gesture-config';
import * as import9 from '@angular/core/src/di/injector';
import * as import10 from '@angular/core/src/i18n/tokens';
import * as import11 from '@angular/platform-browser/src/dom/events/hammer_gestures';
import * as import12 from '@angular/core/src/change_detection/change_detection_util';
import * as import13 from '@angular/core/src/linker/view';
import * as import14 from '@angular/core/src/linker/view_utils';
import * as import15 from '@angular/core/src/linker/debug_context';
import * as import16 from '@angular/forms/src/directives/control_value_accessor';
import * as import17 from '@angular/core/src/render/api';
import * as import18 from '@angular/core/src/metadata/view';
import * as import19 from '@angular/core/src/linker/view_type';
import * as import20 from '@angular/core/src/change_detection/constants';
import * as import21 from '@angular/core/src/linker/component_factory';
import * as import22 from '@angular/material/core/rtl/dir';
import * as import23 from '@angular/core/src/linker/element_ref';
import * as import24 from './slider.css.ngstyle';
import * as import25 from '@angular/common/src/directives/ng_style';
import * as import26 from '../../common/src/directives/ng_style.ngfactory';
import * as import27 from '@angular/core/src/change_detection/differs/keyvalue_differs';
class MdSliderModuleInjector extends import0.NgModuleInjector<import1.MdSliderModule> {
  _CommonModule_0:import2.CommonModule;
  _InternalFormsSharedModule_1:import3.InternalFormsSharedModule;
  _FormsModule_2:import4.FormsModule;
  _CompatibilityModule_3:import5.CompatibilityModule;
  _MdSliderModule_4:import1.MdSliderModule;
  __NgLocalization_5:import6.NgLocaleLocalization;
  __RadioControlRegistry_6:import7.RadioControlRegistry;
  __HAMMER_GESTURE_CONFIG_7:import8.GestureConfig;
  constructor(parent:import9.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_5():import6.NgLocaleLocalization {
    if ((this.__NgLocalization_5 == null)) { (this.__NgLocalization_5 = new import6.NgLocaleLocalization(this.parent.get(import10.LOCALE_ID))); }
    return this.__NgLocalization_5;
  }
  get _RadioControlRegistry_6():import7.RadioControlRegistry {
    if ((this.__RadioControlRegistry_6 == null)) { (this.__RadioControlRegistry_6 = new import7.RadioControlRegistry()); }
    return this.__RadioControlRegistry_6;
  }
  get _HAMMER_GESTURE_CONFIG_7():import8.GestureConfig {
    if ((this.__HAMMER_GESTURE_CONFIG_7 == null)) { (this.__HAMMER_GESTURE_CONFIG_7 = new import8.GestureConfig()); }
    return this.__HAMMER_GESTURE_CONFIG_7;
  }
  createInternal():import1.MdSliderModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._InternalFormsSharedModule_1 = new import3.InternalFormsSharedModule();
    this._FormsModule_2 = new import4.FormsModule();
    this._CompatibilityModule_3 = new import5.CompatibilityModule();
    this._MdSliderModule_4 = new import1.MdSliderModule();
    return this._MdSliderModule_4;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_1; }
    if ((token === import4.FormsModule)) { return this._FormsModule_2; }
    if ((token === import5.CompatibilityModule)) { return this._CompatibilityModule_3; }
    if ((token === import1.MdSliderModule)) { return this._MdSliderModule_4; }
    if ((token === import6.NgLocalization)) { return this._NgLocalization_5; }
    if ((token === import7.RadioControlRegistry)) { return this._RadioControlRegistry_6; }
    if ((token === import11.HAMMER_GESTURE_CONFIG)) { return this._HAMMER_GESTURE_CONFIG_7; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdSliderModuleNgFactory:import0.NgModuleFactory<import1.MdSliderModule> = new import0.NgModuleFactory(MdSliderModuleInjector,import1.MdSliderModule);
export class Wrapper_MdSlider {
  /*private*/ _eventHandler:Function;
  context:import1.MdSlider;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  /*private*/ _expr_23:any;
  /*private*/ _expr_24:any;
  /*private*/ _expr_25:any;
  subscription0:any;
  subscription1:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import1.MdSlider(p0,p1);
    this._expr_0 = import12.UNINITIALIZED;
    this._expr_1 = import12.UNINITIALIZED;
    this._expr_2 = import12.UNINITIALIZED;
    this._expr_3 = import12.UNINITIALIZED;
    this._expr_4 = import12.UNINITIALIZED;
    this._expr_5 = import12.UNINITIALIZED;
    this._expr_6 = import12.UNINITIALIZED;
    this._expr_7 = import12.UNINITIALIZED;
    this._expr_8 = import12.UNINITIALIZED;
    this._expr_9 = import12.UNINITIALIZED;
    this._expr_10 = import12.UNINITIALIZED;
    this._expr_11 = import12.UNINITIALIZED;
    this._expr_12 = import12.UNINITIALIZED;
    this._expr_13 = import12.UNINITIALIZED;
    this._expr_14 = import12.UNINITIALIZED;
    this._expr_15 = import12.UNINITIALIZED;
    this._expr_16 = import12.UNINITIALIZED;
    this._expr_17 = import12.UNINITIALIZED;
    this._expr_18 = import12.UNINITIALIZED;
    this._expr_19 = import12.UNINITIALIZED;
    this._expr_20 = import12.UNINITIALIZED;
    this._expr_21 = import12.UNINITIALIZED;
    this._expr_22 = import12.UNINITIALIZED;
    this._expr_23 = import12.UNINITIALIZED;
    this._expr_24 = import12.UNINITIALIZED;
    this._expr_25 = import12.UNINITIALIZED;
  }
  ngOnDetach(view:import13.AppView<any>,componentView:import13.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_0 = currValue;
    }
  }
  check_thumbLabel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.thumbLabel = currValue;
      this._expr_1 = currValue;
    }
  }
  check__thumbLabelDeprecated(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context._thumbLabelDeprecated = currValue;
      this._expr_2 = currValue;
    }
  }
  check_step(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.step = currValue;
      this._expr_3 = currValue;
    }
  }
  check_tickInterval(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.tickInterval = currValue;
      this._expr_4 = currValue;
    }
  }
  check__tickIntervalDeprecated(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context._tickIntervalDeprecated = currValue;
      this._expr_5 = currValue;
    }
  }
  check_value(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.value = currValue;
      this._expr_6 = currValue;
    }
  }
  check_min(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.min = currValue;
      this._expr_7 = currValue;
    }
  }
  check_max(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.max = currValue;
      this._expr_8 = currValue;
    }
  }
  check_invert(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_9,currValue))) {
      this._changed = true;
      this.context.invert = currValue;
      this._expr_9 = currValue;
    }
  }
  check_vertical(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import14.checkBinding(throwOnChange,this._expr_10,currValue))) {
      this._changed = true;
      this.context.vertical = currValue;
      this._expr_10 = currValue;
    }
  }
  ngDoCheck(view:import13.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import13.AppView<any>,componentView:import13.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_11:any = true;
    if (import14.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      view.renderer.setElementClass(el,'mat-slider',currVal_11);
      this._expr_11 = currVal_11;
    }
    const currVal_12:any = this.context.disabled;
    if (import14.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      view.renderer.setElementAttribute(el,'aria-disabled',((currVal_12 == null)? (null as any): currVal_12.toString()));
      this._expr_12 = currVal_12;
    }
    const currVal_13:any = this.context.max;
    if (import14.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      view.renderer.setElementAttribute(el,'aria-valuemax',((currVal_13 == null)? (null as any): currVal_13.toString()));
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = this.context.min;
    if (import14.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      view.renderer.setElementAttribute(el,'aria-valuemin',((currVal_14 == null)? (null as any): currVal_14.toString()));
      this._expr_14 = currVal_14;
    }
    const currVal_15:any = this.context.value;
    if (import14.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      view.renderer.setElementAttribute(el,'aria-valuenow',((currVal_15 == null)? (null as any): currVal_15.toString()));
      this._expr_15 = currVal_15;
    }
    const currVal_16:any = this.context._isActive;
    if (import14.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      view.renderer.setElementClass(el,'mat-slider-active',currVal_16);
      this._expr_16 = currVal_16;
    }
    const currVal_17:any = this.context.disabled;
    if (import14.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      view.renderer.setElementClass(el,'mat-slider-disabled',currVal_17);
      this._expr_17 = currVal_17;
    }
    const currVal_18:any = this.context.tickInterval;
    if (import14.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      view.renderer.setElementClass(el,'mat-slider-has-ticks',currVal_18);
      this._expr_18 = currVal_18;
    }
    const currVal_19:boolean = !this.context.vertical;
    if (import14.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      view.renderer.setElementClass(el,'mat-slider-horizontal',currVal_19);
      this._expr_19 = currVal_19;
    }
    const currVal_20:any = this.context.invertAxis;
    if (import14.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      view.renderer.setElementClass(el,'mat-slider-axis-inverted',currVal_20);
      this._expr_20 = currVal_20;
    }
    const currVal_21:any = this.context._isSliding;
    if (import14.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      view.renderer.setElementClass(el,'mat-slider-sliding',currVal_21);
      this._expr_21 = currVal_21;
    }
    const currVal_22:any = this.context.thumbLabel;
    if (import14.checkBinding(throwOnChange,this._expr_22,currVal_22)) {
      view.renderer.setElementClass(el,'mat-slider-thumb-label-showing',currVal_22);
      this._expr_22 = currVal_22;
    }
    const currVal_23:any = this.context.vertical;
    if (import14.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      view.renderer.setElementClass(el,'mat-slider-vertical',currVal_23);
      this._expr_23 = currVal_23;
    }
    const currVal_24:any = this.context._isMinValue;
    if (import14.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      view.renderer.setElementClass(el,'mat-slider-min-value',currVal_24);
      this._expr_24 = currVal_24;
    }
    const currVal_25:any = ((this.context._isMinValue && this.context._thumbGap) && this.context.invertAxis);
    if (import14.checkBinding(throwOnChange,this._expr_25,currVal_25)) {
      view.renderer.setElementClass(el,'mat-slider-hide-last-tick',currVal_25);
      this._expr_25 = currVal_25;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    if ((eventName == 'blur')) {
      const pd_sub_0:any = ((<any>this.context._onBlur()) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'click')) {
      const pd_sub_1:any = ((<any>this.context._onClick($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'keydown')) {
      const pd_sub_2:any = ((<any>this.context._onKeydown($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'keyup')) {
      const pd_sub_3:any = ((<any>this.context._onKeyup()) !== false);
      result = (pd_sub_3 && result);
    }
    if ((eventName == 'mouseenter')) {
      const pd_sub_4:any = ((<any>this.context._onMouseenter()) !== false);
      result = (pd_sub_4 && result);
    }
    if ((eventName == 'slide')) {
      const pd_sub_5:any = ((<any>this.context._onSlide($event)) !== false);
      result = (pd_sub_5 && result);
    }
    if ((eventName == 'slideend')) {
      const pd_sub_6:any = ((<any>this.context._onSlideEnd()) !== false);
      result = (pd_sub_6 && result);
    }
    if ((eventName == 'slidestart')) {
      const pd_sub_7:any = ((<any>this.context._onSlideStart($event)) !== false);
      result = (pd_sub_7 && result);
    }
    return result;
  }
  subscribe(view:import13.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.change.subscribe(_eventHandler.bind(view,'change'))); }
    if (emit1) { (this.subscription1 = this.context.input.subscribe(_eventHandler.bind(view,'input'))); }
  }
}
  const nodeDebugInfos_MdSlider_Host0:import15.StaticNodeDebugInfo[] = [new import15.StaticNodeDebugInfo([
    import1.MdSlider,
    import16.NG_VALUE_ACCESSOR
  ]
,import1.MdSlider,{})];
var renderType_MdSlider_Host:import17.RenderComponentType = import14.createRenderComponentType('',0,import18.ViewEncapsulation.None,([] as any[]),{});
class View_MdSlider_Host0 extends import13.DebugAppView<any> {
  _el_0:any;
  compView_0:import13.AppView<import1.MdSlider>;
  _MdSlider_0_3:Wrapper_MdSlider;
  __NG_VALUE_ACCESSOR_0_4:any[];
  constructor(viewUtils:import14.ViewUtils,parentView:import13.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSlider_Host0,renderType_MdSlider_Host,import19.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import20.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSlider_Host0);
  }
  get _NG_VALUE_ACCESSOR_0_4():any[] {
    this.debug(0,0,0);
    if ((this.__NG_VALUE_ACCESSOR_0_4 == null)) { (this.__NG_VALUE_ACCESSOR_0_4 = [this._MdSlider_0_3.context]); }
    return this.__NG_VALUE_ACCESSOR_0_4;
  }
  createInternal(rootSelector:string):import21.ComponentRef<any> {
    this._el_0 = import14.selectOrCreateRenderHostElement(this.renderer,'md-slider',new import14.InlineArray4(4,'role','slider','tabindex','0'),rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdSlider0(this.viewUtils,this,0,this._el_0);
    this._MdSlider_0_3 = new Wrapper_MdSlider(this.injectorGet(import22.Dir,this.parentIndex,(null as any)),new import23.ElementRef(this._el_0));
    this.compView_0.create(this._MdSlider_0_3.context);
    var disposable_0:Function = import14.subscribeToRenderElement(this,this._el_0,new import14.InlineArray16(16,'blur',(null as any),'click',(null as any),'keydown',(null as any),'keyup',(null as any),'mouseenter',(null as any),'slide',(null as any),'slideend',(null as any),'slidestart',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return new import21.ComponentRef_<any>(0,this,this._el_0,this._MdSlider_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdSlider) && (0 === requestNodeIndex))) { return this._MdSlider_0_3.context; }
    if (((token === import16.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdSlider_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._MdSlider_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdSlider_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdSlider_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
export const MdSliderNgFactory:import21.ComponentFactory<import1.MdSlider> = new import21.ComponentFactory<import1.MdSlider>('md-slider, mat-slider',View_MdSlider_Host0,import1.MdSlider);
const styles_MdSlider:any[] = [import24.styles];
const nodeDebugInfos_MdSlider0:import15.StaticNodeDebugInfo[] = [
  new import15.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import15.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import15.StaticNodeDebugInfo([import25.NgStyle],(null as any),{}),
  new import15.StaticNodeDebugInfo([import25.NgStyle],(null as any),{}),
  new import15.StaticNodeDebugInfo([import25.NgStyle],(null as any),{}),
  new import15.StaticNodeDebugInfo([import25.NgStyle],(null as any),{}),
  new import15.StaticNodeDebugInfo([import25.NgStyle],(null as any),{}),
  new import15.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import15.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import15.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import15.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_MdSlider:import17.RenderComponentType = import14.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/node_modules/@angular/material/slider/slider.html',0,import18.ViewEncapsulation.None,styles_MdSlider,{});
export class View_MdSlider0 extends import13.DebugAppView<import1.MdSlider> {
  _el_0:any;
  _el_1:any;
  _el_2:any;
  _NgStyle_2_3:import26.Wrapper_NgStyle;
  _el_3:any;
  _NgStyle_3_3:import26.Wrapper_NgStyle;
  _el_4:any;
  _NgStyle_4_3:import26.Wrapper_NgStyle;
  _el_5:any;
  _NgStyle_5_3:import26.Wrapper_NgStyle;
  _el_6:any;
  _NgStyle_6_3:import26.Wrapper_NgStyle;
  _el_7:any;
  _el_8:any;
  _el_9:any;
  _text_10:any;
  /*private*/ _expr_16:any;
  constructor(viewUtils:import14.ViewUtils,parentView:import13.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSlider0,renderType_MdSlider,import19.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import20.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSlider0);
    this._expr_16 = import12.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import21.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import14.createRenderElement(this.renderer,parentRenderNode,'div',new import14.InlineArray2(2,'class','mat-slider-wrapper'),this.debug(0,0,0));
    this._el_1 = import14.createRenderElement(this.renderer,this._el_0,'div',new import14.InlineArray2(2,'class','mat-slider-track-wrapper'),this.debug(1,0,32));
    this._el_2 = import14.createRenderElement(this.renderer,this._el_1,'div',new import14.InlineArray2(2,'class','mat-slider-track-background'),this.debug(2,0,70));
    this._NgStyle_2_3 = new import26.Wrapper_NgStyle(this.parentView.injectorGet(import27.KeyValueDiffers,this.parentIndex),new import23.ElementRef(this._el_2),this.renderer);
    this._el_3 = import14.createRenderElement(this.renderer,this._el_1,'div',new import14.InlineArray2(2,'class','mat-slider-track-fill'),this.debug(3,0,151));
    this._NgStyle_3_3 = new import26.Wrapper_NgStyle(this.parentView.injectorGet(import27.KeyValueDiffers,this.parentIndex),new import23.ElementRef(this._el_3),this.renderer);
    this._el_4 = import14.createRenderElement(this.renderer,this._el_0,'div',new import14.InlineArray2(2,'class','mat-slider-ticks-container'),this.debug(4,0,226));
    this._NgStyle_4_3 = new import26.Wrapper_NgStyle(this.parentView.injectorGet(import27.KeyValueDiffers,this.parentIndex),new import23.ElementRef(this._el_4),this.renderer);
    this._el_5 = import14.createRenderElement(this.renderer,this._el_4,'div',new import14.InlineArray2(2,'class','mat-slider-ticks'),this.debug(5,0,299));
    this._NgStyle_5_3 = new import26.Wrapper_NgStyle(this.parentView.injectorGet(import27.KeyValueDiffers,this.parentIndex),new import23.ElementRef(this._el_5),this.renderer);
    this._el_6 = import14.createRenderElement(this.renderer,this._el_0,'div',new import14.InlineArray2(2,'class','mat-slider-thumb-container'),this.debug(6,0,365));
    this._NgStyle_6_3 = new import26.Wrapper_NgStyle(this.parentView.injectorGet(import27.KeyValueDiffers,this.parentIndex),new import23.ElementRef(this._el_6),this.renderer);
    this._el_7 = import14.createRenderElement(this.renderer,this._el_6,'div',new import14.InlineArray2(2,'class','mat-slider-thumb'),this.debug(7,0,438));
    this._el_8 = import14.createRenderElement(this.renderer,this._el_6,'div',new import14.InlineArray2(2,'class','mat-slider-thumb-label'),this.debug(8,0,474));
    this._el_9 = import14.createRenderElement(this.renderer,this._el_8,'span',new import14.InlineArray2(2,'class','mat-slider-thumb-label-text'),this.debug(9,0,510));
    this._text_10 = this.renderer.createText(this._el_9,'',this.debug(10,0,552));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1,
      this._el_2,
      this._el_3,
      this._el_4,
      this._el_5,
      this._el_6,
      this._el_7,
      this._el_8,
      this._el_9,
      this._text_10
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import25.NgStyle) && (2 === requestNodeIndex))) { return this._NgStyle_2_3.context; }
    if (((token === import25.NgStyle) && (3 === requestNodeIndex))) { return this._NgStyle_3_3.context; }
    if (((token === import25.NgStyle) && (5 === requestNodeIndex))) { return this._NgStyle_5_3.context; }
    if (((token === import25.NgStyle) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._NgStyle_4_3.context; }
    if (((token === import25.NgStyle) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._NgStyle_6_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(2,0,111);
    const currVal_2_0_0:any = this.context.trackBackgroundStyles;
    this._NgStyle_2_3.check_ngStyle(currVal_2_0_0,throwOnChange,false);
    this._NgStyle_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    this.debug(3,0,186);
    const currVal_3_0_0:any = this.context.trackFillStyles;
    this._NgStyle_3_3.check_ngStyle(currVal_3_0_0,throwOnChange,false);
    this._NgStyle_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    this.debug(4,0,266);
    const currVal_4_0_0:any = this.context.ticksContainerStyles;
    this._NgStyle_4_3.check_ngStyle(currVal_4_0_0,throwOnChange,false);
    this._NgStyle_4_3.ngDoCheck(this,this._el_4,throwOnChange);
    this.debug(5,0,329);
    const currVal_5_0_0:any = this.context.ticksStyles;
    this._NgStyle_5_3.check_ngStyle(currVal_5_0_0,throwOnChange,false);
    this._NgStyle_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    this.debug(6,0,405);
    const currVal_6_0_0:any = this.context.thumbContainerStyles;
    this._NgStyle_6_3.check_ngStyle(currVal_6_0_0,throwOnChange,false);
    this._NgStyle_6_3.ngDoCheck(this,this._el_6,throwOnChange);
    this.debug(10,0,552);
    const currVal_16:any = import14.inlineInterpolate(1,'',this.context.displayValue,'');
    if (import14.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setText(this._text_10,currVal_16);
      this._expr_16 = currVal_16;
    }
  }
  destroyInternal():void {
    this.debug(2,0,70);
    this.debug(3,0,151);
    this.debug(5,0,299);
    this.debug(4,0,226);
  }
}