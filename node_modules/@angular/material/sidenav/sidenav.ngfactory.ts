/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/sidenav/sidenav';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/material/core/compatibility/compatibility';
import * as import4 from '@angular/material/core/platform/index';
import * as import5 from '@angular/material/core/a11y/index';
import * as import6 from '@angular/material/core/portal/portal-directives';
import * as import7 from '@angular/material/core/overlay/overlay-directives';
import * as import8 from '@angular/common/src/localization';
import * as import9 from '@angular/material/core/platform/platform';
import * as import10 from '@angular/material/core/a11y/interactivity-checker';
import * as import11 from '@angular/material/core/overlay/position/overlay-position-builder';
import * as import12 from '@angular/material/core/overlay/overlay';
import * as import13 from '@angular/core/src/di/injector';
import * as import14 from '@angular/core/src/i18n/tokens';
import * as import15 from '@angular/material/core/a11y/live-announcer';
import * as import16 from '@angular/material/core/overlay/overlay-container';
import * as import17 from '@angular/material/core/overlay/scroll/scroll-dispatcher';
import * as import18 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import19 from '@angular/core/src/application_ref';
import * as import20 from '@angular/core/src/zone/ng_zone';
import * as import21 from '@angular/core/src/change_detection/change_detection_util';
import * as import22 from '@angular/core/src/linker/view';
import * as import23 from '@angular/core/src/linker/view_utils';
import * as import24 from '@angular/core/src/linker/debug_context';
import * as import25 from '@angular/core/src/render/api';
import * as import26 from '@angular/core/src/metadata/view';
import * as import27 from '@angular/core/src/linker/query_list';
import * as import28 from '@angular/core/src/linker/view_type';
import * as import29 from '@angular/core/src/change_detection/constants';
import * as import30 from '@angular/core/src/linker/component_factory';
import * as import31 from '@angular/material/core/rtl/dir';
import * as import32 from '@angular/core/src/linker/element_ref';
import * as import33 from './sidenav.css.ngstyle';
import * as import34 from './sidenav-transitions.css.ngstyle';
import * as import35 from '@angular/common/src/directives/ng_style';
import * as import36 from '@angular/material/core/overlay/scroll/scrollable';
import * as import37 from '../../common/src/directives/ng_style.ngfactory';
import * as import38 from '../core/overlay/scroll/scrollable.ngfactory';
import * as import39 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import40 from '@angular/material/core/a11y/focus-trap';
import * as import41 from '../core/a11y/focus-trap.ngfactory';
class MdSidenavModuleInjector extends import0.NgModuleInjector<import1.MdSidenavModule> {
  _CommonModule_0:import2.CommonModule;
  _CompatibilityModule_1:import3.CompatibilityModule;
  _PlatformModule_2:import4.PlatformModule;
  _A11yModule_3:import5.A11yModule;
  _PortalModule_4:import6.PortalModule;
  _OverlayModule_5:import7.OverlayModule;
  _MdSidenavModule_6:import1.MdSidenavModule;
  __NgLocalization_7:import8.NgLocaleLocalization;
  __Platform_8:import9.Platform;
  __InteractivityChecker_9:import10.InteractivityChecker;
  __LiveAnnouncer_10:any;
  __OverlayContainer_11:any;
  __ScrollDispatcher_12:any;
  __ViewportRuler_13:any;
  __OverlayPositionBuilder_14:import11.OverlayPositionBuilder;
  __Overlay_15:import12.Overlay;
  constructor(parent:import13.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_7():import8.NgLocaleLocalization {
    if ((this.__NgLocalization_7 == null)) { (this.__NgLocalization_7 = new import8.NgLocaleLocalization(this.parent.get(import14.LOCALE_ID))); }
    return this.__NgLocalization_7;
  }
  get _Platform_8():import9.Platform {
    if ((this.__Platform_8 == null)) { (this.__Platform_8 = new import9.Platform()); }
    return this.__Platform_8;
  }
  get _InteractivityChecker_9():import10.InteractivityChecker {
    if ((this.__InteractivityChecker_9 == null)) { (this.__InteractivityChecker_9 = new import10.InteractivityChecker(this._Platform_8)); }
    return this.__InteractivityChecker_9;
  }
  get _LiveAnnouncer_10():any {
    if ((this.__LiveAnnouncer_10 == null)) { (this.__LiveAnnouncer_10 = import15.LIVE_ANNOUNCER_PROVIDER_FACTORY(this.parent.get(import15.LiveAnnouncer,(null as any)),this.parent.get(import15.LIVE_ANNOUNCER_ELEMENT_TOKEN,(null as any)))); }
    return this.__LiveAnnouncer_10;
  }
  get _OverlayContainer_11():any {
    if ((this.__OverlayContainer_11 == null)) { (this.__OverlayContainer_11 = import16.OVERLAY_CONTAINER_PROVIDER_FACTORY(this.parent.get(import16.OverlayContainer,(null as any)))); }
    return this.__OverlayContainer_11;
  }
  get _ScrollDispatcher_12():any {
    if ((this.__ScrollDispatcher_12 == null)) { (this.__ScrollDispatcher_12 = import17.SCROLL_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import17.ScrollDispatcher,(null as any)))); }
    return this.__ScrollDispatcher_12;
  }
  get _ViewportRuler_13():any {
    if ((this.__ViewportRuler_13 == null)) { (this.__ViewportRuler_13 = import18.VIEWPORT_RULER_PROVIDER_FACTORY(this.parent.get(import18.ViewportRuler,(null as any)),this._ScrollDispatcher_12)); }
    return this.__ViewportRuler_13;
  }
  get _OverlayPositionBuilder_14():import11.OverlayPositionBuilder {
    if ((this.__OverlayPositionBuilder_14 == null)) { (this.__OverlayPositionBuilder_14 = new import11.OverlayPositionBuilder(this._ViewportRuler_13)); }
    return this.__OverlayPositionBuilder_14;
  }
  get _Overlay_15():import12.Overlay {
    if ((this.__Overlay_15 == null)) { (this.__Overlay_15 = new import12.Overlay(this._OverlayContainer_11,this,this._OverlayPositionBuilder_14,this.parent.get(import19.ApplicationRef),this,this.parent.get(import20.NgZone))); }
    return this.__Overlay_15;
  }
  createInternal():import1.MdSidenavModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._CompatibilityModule_1 = new import3.CompatibilityModule();
    this._PlatformModule_2 = new import4.PlatformModule();
    this._A11yModule_3 = new import5.A11yModule();
    this._PortalModule_4 = new import6.PortalModule();
    this._OverlayModule_5 = new import7.OverlayModule();
    this._MdSidenavModule_6 = new import1.MdSidenavModule();
    return this._MdSidenavModule_6;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.CompatibilityModule)) { return this._CompatibilityModule_1; }
    if ((token === import4.PlatformModule)) { return this._PlatformModule_2; }
    if ((token === import5.A11yModule)) { return this._A11yModule_3; }
    if ((token === import6.PortalModule)) { return this._PortalModule_4; }
    if ((token === import7.OverlayModule)) { return this._OverlayModule_5; }
    if ((token === import1.MdSidenavModule)) { return this._MdSidenavModule_6; }
    if ((token === import8.NgLocalization)) { return this._NgLocalization_7; }
    if ((token === import9.Platform)) { return this._Platform_8; }
    if ((token === import10.InteractivityChecker)) { return this._InteractivityChecker_9; }
    if ((token === import15.LiveAnnouncer)) { return this._LiveAnnouncer_10; }
    if ((token === import16.OverlayContainer)) { return this._OverlayContainer_11; }
    if ((token === import17.ScrollDispatcher)) { return this._ScrollDispatcher_12; }
    if ((token === import18.ViewportRuler)) { return this._ViewportRuler_13; }
    if ((token === import11.OverlayPositionBuilder)) { return this._OverlayPositionBuilder_14; }
    if ((token === import12.Overlay)) { return this._Overlay_15; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdSidenavModuleNgFactory:import0.NgModuleFactory<import1.MdSidenavModule> = new import0.NgModuleFactory(MdSidenavModuleInjector,import1.MdSidenavModule);
export class Wrapper_MdSidenavContainer {
  /*private*/ _eventHandler:Function;
  context:import1.MdSidenavContainer;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  subscription0:any;
  constructor(p0:any,p1:any,p2:any,p3:any) {
    this._changed = false;
    this.context = new import1.MdSidenavContainer(p0,p1,p2,p3);
    this._expr_0 = import21.UNINITIALIZED;
    this._expr_1 = import21.UNINITIALIZED;
  }
  ngOnDetach(view:import22.AppView<any>,componentView:import22.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  ngDoCheck(view:import22.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import22.AppView<any>,componentView:import22.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_0:any = true;
    if (import23.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      view.renderer.setElementClass(el,'mat-sidenav-container',currVal_0);
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this.context._enableTransitions;
    if (import23.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      view.renderer.setElementClass(el,'mat-sidenav-transition',currVal_1);
      this._expr_1 = currVal_1;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import22.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.backdropClick.subscribe(_eventHandler.bind(view,'backdropClick'))); }
  }
}
export class Wrapper_MdSidenav {
  /*private*/ _eventHandler:Function;
  context:import1.MdSidenav;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  subscription3:any;
  subscription4:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import1.MdSidenav(p0,p1);
    this._expr_0 = import21.UNINITIALIZED;
    this._expr_1 = import21.UNINITIALIZED;
    this._expr_2 = import21.UNINITIALIZED;
    this._expr_3 = import21.UNINITIALIZED;
    this._expr_4 = import21.UNINITIALIZED;
    this._expr_5 = import21.UNINITIALIZED;
    this._expr_6 = import21.UNINITIALIZED;
    this._expr_7 = import21.UNINITIALIZED;
    this._expr_8 = import21.UNINITIALIZED;
    this._expr_9 = import21.UNINITIALIZED;
    this._expr_10 = import21.UNINITIALIZED;
    this._expr_11 = import21.UNINITIALIZED;
    this._expr_12 = import21.UNINITIALIZED;
    this._expr_13 = import21.UNINITIALIZED;
    this._expr_14 = import21.UNINITIALIZED;
  }
  ngOnDetach(view:import22.AppView<any>,componentView:import22.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
    (this.subscription3 && this.subscription3.unsubscribe());
    (this.subscription4 && this.subscription4.unsubscribe());
  }
  check_align(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import23.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.align = currValue;
      this._expr_0 = currValue;
    }
  }
  check_mode(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import23.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.mode = currValue;
      this._expr_1 = currValue;
    }
  }
  check_disableClose(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import23.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.disableClose = currValue;
      this._expr_2 = currValue;
    }
  }
  check_opened(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import23.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.opened = currValue;
      this._expr_3 = currValue;
    }
  }
  ngDoCheck(view:import22.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import22.AppView<any>,componentView:import22.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_4:any = true;
    if (import23.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      view.renderer.setElementClass(el,'mat-sidenav',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = (null as any);
    if (import23.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      view.renderer.setElementAttribute(el,'align',((currVal_5 == null)? (null as any): currVal_5.toString()));
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this.context._isClosed;
    if (import23.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      view.renderer.setElementClass(el,'mat-sidenav-closed',currVal_6);
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this.context._isClosing;
    if (import23.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      view.renderer.setElementClass(el,'mat-sidenav-closing',currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this.context._isEnd;
    if (import23.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      view.renderer.setElementClass(el,'mat-sidenav-end',currVal_8);
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.context._isOpened;
    if (import23.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      view.renderer.setElementClass(el,'mat-sidenav-opened',currVal_9);
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this.context._isOpening;
    if (import23.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      view.renderer.setElementClass(el,'mat-sidenav-opening',currVal_10);
      this._expr_10 = currVal_10;
    }
    const currVal_11:any = this.context._modeOver;
    if (import23.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      view.renderer.setElementClass(el,'mat-sidenav-over',currVal_11);
      this._expr_11 = currVal_11;
    }
    const currVal_12:any = this.context._modePush;
    if (import23.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      view.renderer.setElementClass(el,'mat-sidenav-push',currVal_12);
      this._expr_12 = currVal_12;
    }
    const currVal_13:any = this.context._modeSide;
    if (import23.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      view.renderer.setElementClass(el,'mat-sidenav-side',currVal_13);
      this._expr_13 = currVal_13;
    }
    const currVal_14:boolean = !this.context.valid;
    if (import23.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      view.renderer.setElementClass(el,'mat-sidenav-invalid',currVal_14);
      this._expr_14 = currVal_14;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    if ((eventName == 'transitionend')) {
      const pd_sub_0:any = ((<any>this.context._onTransitionEnd($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'keydown')) {
      const pd_sub_1:any = ((<any>this.context.handleKeydown($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
  subscribe(view:import22.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean,emit3:boolean,emit4:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onOpenStart.subscribe(_eventHandler.bind(view,'open-start'))); }
    if (emit1) { (this.subscription1 = this.context.onOpen.subscribe(_eventHandler.bind(view,'open'))); }
    if (emit2) { (this.subscription2 = this.context.onCloseStart.subscribe(_eventHandler.bind(view,'close-start'))); }
    if (emit3) { (this.subscription3 = this.context.onClose.subscribe(_eventHandler.bind(view,'close'))); }
    if (emit4) { (this.subscription4 = this.context.onAlignChanged.subscribe(_eventHandler.bind(view,'align-changed'))); }
  }
}
const nodeDebugInfos_MdSidenavContainer_Host0:import24.StaticNodeDebugInfo[] = [new import24.StaticNodeDebugInfo([import1.MdSidenavContainer],import1.MdSidenavContainer,{})];
var renderType_MdSidenavContainer_Host:import25.RenderComponentType = import23.createRenderComponentType('',0,import26.ViewEncapsulation.None,([] as any[]),{});
class View_MdSidenavContainer_Host0 extends import22.DebugAppView<any> {
  _el_0:any;
  compView_0:import22.AppView<import1.MdSidenavContainer>;
  _MdSidenavContainer_0_3:Wrapper_MdSidenavContainer;
  _query_MdSidenav_0_0:import27.QueryList<any>;
  constructor(viewUtils:import23.ViewUtils,parentView:import22.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSidenavContainer_Host0,renderType_MdSidenavContainer_Host,import28.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import29.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSidenavContainer_Host0);
  }
  createInternal(rootSelector:string):import30.ComponentRef<any> {
    this._el_0 = import23.selectOrCreateRenderHostElement(this.renderer,'md-sidenav-container',import23.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdSidenavContainer0(this.viewUtils,this,0,this._el_0);
    this._MdSidenavContainer_0_3 = new Wrapper_MdSidenavContainer(this.injectorGet(import31.Dir,this.parentIndex,(null as any)),new import32.ElementRef(this._el_0),this.renderer,this.injectorGet(import20.NgZone,this.parentIndex));
    this._query_MdSidenav_0_0 = new import27.QueryList<any>();
    this.compView_0.create(this._MdSidenavContainer_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import30.ComponentRef_<any>(0,this,this._el_0,this._MdSidenavContainer_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdSidenavContainer) && (0 === requestNodeIndex))) { return this._MdSidenavContainer_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdSidenavContainer_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdSidenav_0_0.dirty) {
        this._query_MdSidenav_0_0.reset(([] as any[]));
        this._MdSidenavContainer_0_3.context._sidenavs = this._query_MdSidenav_0_0;
        this._query_MdSidenav_0_0.notifyOnChanges();
      }
      this.debug(0,0,0);
      if ((this.numberOfChecks === 0)) { this._MdSidenavContainer_0_3.context.ngAfterContentInit(); }
    }
    this._MdSidenavContainer_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdSidenavContainer_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
  }
}
export const MdSidenavContainerNgFactory:import30.ComponentFactory<import1.MdSidenavContainer> = new import30.ComponentFactory<import1.MdSidenavContainer>('md-sidenav-container, mat-sidenav-container',View_MdSidenavContainer_Host0,import1.MdSidenavContainer);
const styles_MdSidenavContainer:any[] = [
  import33.styles,
  import34.styles
]
;
const nodeDebugInfos_MdSidenavContainer0:import24.StaticNodeDebugInfo[] = [
  new import24.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import24.StaticNodeDebugInfo([
    import35.NgStyle,
    import36.Scrollable
  ]
  ,(null as any),{})
]
;
var renderType_MdSidenavContainer:import25.RenderComponentType = import23.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/node_modules/@angular/material/sidenav/sidenav-container.html',2,import26.ViewEncapsulation.None,styles_MdSidenavContainer,{});
export class View_MdSidenavContainer0 extends import22.DebugAppView<import1.MdSidenavContainer> {
  _el_0:any;
  _el_1:any;
  _NgStyle_1_3:import37.Wrapper_NgStyle;
  _Scrollable_1_4:import38.Wrapper_Scrollable;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import23.ViewUtils,parentView:import22.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSidenavContainer0,renderType_MdSidenavContainer,import28.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import29.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSidenavContainer0);
    this._expr_4 = import21.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import30.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import23.createRenderElement(this.renderer,parentRenderNode,'div',new import23.InlineArray2(2,'class','mat-sidenav-backdrop'),this.debug(0,0,0));
    this.debug((null as any),0,120);
    this.projectNodes(parentRenderNode,0);
    this._el_1 = import23.createRenderElement(this.renderer,parentRenderNode,'div',new import23.InlineArray4(4,'cdk-scrollable','','class','mat-sidenav-content'),this.debug(1,0,178));
    this._NgStyle_1_3 = new import37.Wrapper_NgStyle(this.parentView.injectorGet(import39.KeyValueDiffers,this.parentIndex),new import32.ElementRef(this._el_1),this.renderer);
    this._Scrollable_1_4 = new import38.Wrapper_Scrollable(new import32.ElementRef(this._el_1),this.parentView.injectorGet(import17.ScrollDispatcher,this.parentIndex));
    this.debug((null as any),0,251);
    this.projectNodes(this._el_1,1);
    var disposable_0:Function = import23.subscribeToRenderElement(this,this._el_0,new import23.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import35.NgStyle) && (1 === requestNodeIndex))) { return this._NgStyle_1_3.context; }
    if (((token === import36.Scrollable) && (1 === requestNodeIndex))) { return this._Scrollable_1_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(1,0,211);
    const currVal_1_0_0:any = this.context._getStyles();
    this._NgStyle_1_3.check_ngStyle(currVal_1_0_0,throwOnChange,false);
    this._NgStyle_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this.debug(1,0,178);
    this._Scrollable_1_4.ngDoCheck(this,this._el_1,throwOnChange);
    this.debug(0,0,65);
    const currVal_4:any = this.context._isShowingBackdrop();
    if (import23.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementClass(this._el_0,'mat-sidenav-shown',currVal_4);
      this._expr_4 = currVal_4;
    }
  }
  destroyInternal():void {
    this._Scrollable_1_4.ngOnDestroy();
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context._onBackdropClicked()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
const nodeDebugInfos_MdSidenav_Host0:import24.StaticNodeDebugInfo[] = [new import24.StaticNodeDebugInfo([import1.MdSidenav],import1.MdSidenav,{})];
var renderType_MdSidenav_Host:import25.RenderComponentType = import23.createRenderComponentType('',0,import26.ViewEncapsulation.None,([] as any[]),{});
class View_MdSidenav_Host0 extends import22.DebugAppView<any> {
  _el_0:any;
  compView_0:import22.AppView<import1.MdSidenav>;
  _MdSidenav_0_3:Wrapper_MdSidenav;
  constructor(viewUtils:import23.ViewUtils,parentView:import22.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSidenav_Host0,renderType_MdSidenav_Host,import28.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import29.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSidenav_Host0);
  }
  createInternal(rootSelector:string):import30.ComponentRef<any> {
    this._el_0 = import23.selectOrCreateRenderHostElement(this.renderer,'md-sidenav',new import23.InlineArray2(2,'tabIndex','-1'),rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdSidenav0(this.viewUtils,this,0,this._el_0);
    this._MdSidenav_0_3 = new Wrapper_MdSidenav(new import32.ElementRef(this._el_0),this.renderer);
    this.compView_0.create(this._MdSidenav_0_3.context);
    var disposable_0:Function = import23.subscribeToRenderElement(this,this._el_0,new import23.InlineArray4(4,'transitionend',(null as any),'keydown',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return new import30.ComponentRef_<any>(0,this,this._el_0,this._MdSidenav_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdSidenav) && (0 === requestNodeIndex))) { return this._MdSidenav_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._MdSidenav_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    if (!throwOnChange) {
      this.debug(0,0,0);
      if ((this.numberOfChecks === 0)) { this._MdSidenav_0_3.context.ngAfterContentInit(); }
    }
    this._MdSidenav_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdSidenav_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdSidenav_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
export const MdSidenavNgFactory:import30.ComponentFactory<import1.MdSidenav> = new import30.ComponentFactory<import1.MdSidenav>('md-sidenav, mat-sidenav',View_MdSidenav_Host0,import1.MdSidenav);
const styles_MdSidenav:any[] = ([] as any[]);
const nodeDebugInfos_MdSidenav0:import24.StaticNodeDebugInfo[] = [new import24.StaticNodeDebugInfo([import40.FocusTrap],import40.FocusTrap,{})];
var renderType_MdSidenav:import25.RenderComponentType = import23.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/node_modules/@angular/material/sidenav/sidenav.html',1,import26.ViewEncapsulation.None,styles_MdSidenav,{});
export class View_MdSidenav0 extends import22.DebugAppView<import1.MdSidenav> {
  _viewQuery_FocusTrap_0:import27.QueryList<any>;
  _el_0:any;
  compView_0:import22.AppView<import40.FocusTrap>;
  _FocusTrap_0_3:import41.Wrapper_FocusTrap;
  constructor(viewUtils:import23.ViewUtils,parentView:import22.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSidenav0,renderType_MdSidenav,import28.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import29.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_MdSidenav0);
  }
  createInternal(rootSelector:string):import30.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_FocusTrap_0 = new import27.QueryList<any>();
    this._el_0 = import23.createRenderElement(this.renderer,parentRenderNode,'cdk-focus-trap',new import23.InlineArray2(2,'class','mat-sidenav-focus-trap'),this.debug(0,0,0));
    this.compView_0 = new import41.View_FocusTrap0(this.viewUtils,this,0,this._el_0);
    this._FocusTrap_0_3 = new import41.Wrapper_FocusTrap(this.parentView.injectorGet(import10.InteractivityChecker,this.parentIndex),this.parentView.injectorGet(import20.NgZone,this.parentIndex));
    this.debug((null as any),0,80);
    this.compView_0.create(this._FocusTrap_0_3.context);
    this._viewQuery_FocusTrap_0.reset([this._FocusTrap_0_3.context]);
    this.context._focusTrap = this._viewQuery_FocusTrap_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import40.FocusTrap) && (0 === requestNodeIndex))) { return this._FocusTrap_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,47);
    const currVal_0_0_0:any = this.context.isFocusTrapDisabled;
    this._FocusTrap_0_3.check_disabled(currVal_0_0_0,throwOnChange,false);
    this._FocusTrap_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) { this.visitProjectedNodes(0,cb,ctx); }
  }
}