/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/material/select/select';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/query_list';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/change_detection/constants';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '@angular/core/src/linker/element_ref';
import * as import12 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import13 from '@angular/material/core/rtl/dir';
import * as import14 from './select.css.ngstyle';
import * as import15 from '@angular/core/src/animation/animation_transition';
import * as import16 from '@angular/core/src/animation/animation_sequence_player';
import * as import17 from '@angular/core/src/animation/animation_styles';
import * as import18 from '@angular/core/src/animation/animation_style_util';
import * as import19 from '@angular/core/src/animation/animation_keyframe';
import * as import20 from '@angular/core/src/animation/animation_player';
import * as import21 from '@angular/core/src/linker/view_container';
import * as import22 from '@angular/core/src/security';
import * as import23 from '@angular/material/core/overlay/overlay-directives';
import * as import24 from '@angular/core/src/linker/template_ref';
import * as import25 from '@angular/common/src/directives/ng_if';
import * as import26 from '../core/overlay/overlay-directives.ngfactory';
import * as import27 from '../../common/src/directives/ng_if.ngfactory';
import * as import28 from '@angular/material/core/overlay/overlay';
export class Wrapper_MdSelect {
  /*private*/ _eventHandler:Function;
  context:import0.MdSelect;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  constructor(p0:any,p1:any,p2:any,p3:any,p4:any,p5:any) {
    this._changed = false;
    this.context = new import0.MdSelect(p0,p1,p2,p3,p4,p5);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
    this._expr_9 = import1.UNINITIALIZED;
    this._expr_10 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
  }
  check_placeholder(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.placeholder = currValue;
      this._expr_0 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_1 = currValue;
    }
  }
  check_required(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.required = currValue;
      this._expr_2 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_3:any = this.context._getTabIndex();
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      view.renderer.setElementAttribute(el,'tabindex',((currVal_3 == null)? (null as any): currVal_3.toString()));
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this.context.placeholder;
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      view.renderer.setElementAttribute(el,'aria-label',((currVal_4 == null)? (null as any): currVal_4.toString()));
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = this.context.required.toString();
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      view.renderer.setElementAttribute(el,'aria-required',((currVal_5 == null)? (null as any): currVal_5.toString()));
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this.context.disabled.toString();
    if (import3.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      view.renderer.setElementAttribute(el,'aria-disabled',((currVal_6 == null)? (null as any): currVal_6.toString()));
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = (((this.context._control == null)? (null as any): this.context._control.invalid) || 'false');
    if (import3.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      view.renderer.setElementAttribute(el,'aria-invalid',((currVal_7 == null)? (null as any): currVal_7.toString()));
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this.context._optionIds;
    if (import3.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      view.renderer.setElementAttribute(el,'aria-owns',((currVal_8 == null)? (null as any): currVal_8.toString()));
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.context.disabled;
    if (import3.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      view.renderer.setElementClass(el,'mat-select-disabled',currVal_9);
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = true;
    if (import3.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      view.renderer.setElementClass(el,'mat-select',currVal_10);
      this._expr_10 = currVal_10;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    if ((eventName == 'keydown')) {
      const pd_sub_0:any = ((<any>this.context._handleKeydown($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'blur')) {
      const pd_sub_1:any = ((<any>this.context._onBlur()) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onOpen.subscribe(_eventHandler.bind(view,'onOpen'))); }
    if (emit1) { (this.subscription1 = this.context.onClose.subscribe(_eventHandler.bind(view,'onClose'))); }
    if (emit2) { (this.subscription2 = this.context.change.subscribe(_eventHandler.bind(view,'change'))); }
  }
}
const nodeDebugInfos_MdSelect_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import0.MdSelect],import0.MdSelect,{})];
var renderType_MdSelect_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_MdSelect_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.MdSelect>;
  _MdSelect_0_3:Wrapper_MdSelect;
  _query_MdOption_0_0:import7.QueryList<any>;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSelect_Host0,renderType_MdSelect_Host,import8.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSelect_Host0);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'md-select',new import3.InlineArray2(2,'role','listbox'),rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdSelect0(this.viewUtils,this,0,this._el_0);
    this._MdSelect_0_3 = new Wrapper_MdSelect(new import11.ElementRef(this._el_0),this.renderer,this.injectorGet(import12.ViewportRuler,this.parentIndex),this.compView_0.ref,this.injectorGet(import13.Dir,this.parentIndex,(null as any)),(null as any));
    this._query_MdOption_0_0 = new import7.QueryList<any>();
    this.compView_0.create(this._MdSelect_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'keydown',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return new import10.ComponentRef_<any>(0,this,this._el_0,this._MdSelect_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MdSelect) && (0 === requestNodeIndex))) { return this._MdSelect_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdSelect_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdOption_0_0.dirty) {
        this._query_MdOption_0_0.reset(([] as any[]));
        this._MdSelect_0_3.context.options = this._query_MdOption_0_0;
        this._query_MdOption_0_0.notifyOnChanges();
      }
      this.debug(0,0,0);
      if ((this.numberOfChecks === 0)) { this._MdSelect_0_3.context.ngAfterContentInit(); }
    }
    this._MdSelect_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdSelect_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdSelect_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
export const MdSelectNgFactory:import10.ComponentFactory<import0.MdSelect> = new import10.ComponentFactory<import0.MdSelect>('md-select, mat-select',View_MdSelect_Host0,import0.MdSelect);
const styles_MdSelect:any[] = [import14.styles];
var MdSelect_transformPlaceholder_states:any = {
  'floating-ltr': {
    'top': '-22px',
    'left': '-2px',
    'transform': 'scale(0.75)'
  }
  ,
  'floating-rtl': {
    'top': '-22px',
    'left': '2px',
    'transform': 'scale(0.75)'
  }
  ,
  '*': {}
}
;
function MdSelect_transformPlaceholder_factory(view:import2.AppView<any>,element:any,currentState:any,nextState:any):import15.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,((nextState == 'void')? (null as any): 'transformPlaceholder'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = MdSelect_transformPlaceholder_states['*'];
  var startStateStyles:any = MdSelect_transformPlaceholder_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = MdSelect_transformPlaceholder_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && (true && true))) {
      player = new import16.AnimationSequencePlayer([view.renderer.animate(element,new import17.AnimationStyles(import18.collectAndResolveStyles(collectedStyles,[startStateStyles])),import18.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import19.AnimationKeyframe(0,new import17.AnimationStyles(import18.collectAndResolveStyles(collectedStyles,[{}]))),
        new import19.AnimationKeyframe(1,new import17.AnimationStyles(import18.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),400,0,'cubic-bezier(0.25, 0.8, 0.25, 1)',previousPlayers)]);
    totalTime = 400;
  }
  if ((player == (null as any))) { (player = new import20.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import18.renderStyles(element,view.renderer,import18.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import16.AnimationSequencePlayer(previousPlayers).destroy();
  import18.renderStyles(element,view.renderer,import18.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'transformPlaceholder',player);
  return new import15.AnimationTransition(player,currentState,nextState,totalTime);
}
var MdSelect_transformPanel_states:any = {
  'showing': {
    'opacity': '1',
    'minWidth': 'calc(100% + 32px)',
    'transform': 'translate3d(0,0,0) scaleY(1)'
  }
  ,
  '*': {},
  'void': {}
}
;
function MdSelect_transformPanel_factory(view:import2.AppView<any>,element:any,currentState:any,nextState:any):import15.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,((nextState == 'void')? (null as any): 'transformPanel'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = MdSelect_transformPanel_states['*'];
  var startStateStyles:any = MdSelect_transformPanel_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = MdSelect_transformPanel_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && ((currentState == 'void') && true))) {
      player = new import16.AnimationSequencePlayer([view.renderer.animate(element,new import17.AnimationStyles(import18.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {
          'opacity': '0',
          'minWidth': '100%',
          'transform': 'translate3d(0, 0, 0) scaleY(0)'
        }

      ]
      )),import18.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import19.AnimationKeyframe(0,new import17.AnimationStyles(import18.collectAndResolveStyles(collectedStyles,[{}]))),
        new import19.AnimationKeyframe(1,new import17.AnimationStyles(import18.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),150,0,'cubic-bezier(0.25, 0.8, 0.25, 1)',previousPlayers)]);
    totalTime = 150;
  }
  if (((player == (null as any)) && (true && (nextState == 'void')))) {
      player = new import16.AnimationSequencePlayer([view.renderer.animate(element,new import17.AnimationStyles(import18.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import19.AnimationKeyframe(0,new import17.AnimationStyles(import18.collectAndResolveStyles(collectedStyles,[{'opacity': 'true'}]))),
        new import19.AnimationKeyframe(1,new import17.AnimationStyles(import18.collectAndResolveStyles(collectedStyles,[{'opacity': '0'}])))
      ]
    ,250,100,'linear',previousPlayers)]);
    totalTime = 350;
  }
  if ((player == (null as any))) { (player = new import20.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import18.renderStyles(element,view.renderer,import18.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import16.AnimationSequencePlayer(previousPlayers).destroy();
  import18.renderStyles(element,view.renderer,import18.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'transformPanel',player);
  return new import15.AnimationTransition(player,currentState,nextState,totalTime);
}
var MdSelect_fadeInContent_states:any = {
  'showing': {'opacity': '1'},
  '*': {},
  'void': {}
}
;
function MdSelect_fadeInContent_factory(view:import2.AppView<any>,element:any,currentState:any,nextState:any):import15.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,((nextState == 'void')? (null as any): 'fadeInContent'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = MdSelect_fadeInContent_states['*'];
  var startStateStyles:any = MdSelect_fadeInContent_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = MdSelect_fadeInContent_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && ((currentState == 'void') && (nextState == 'showing')))) {
      player = new import16.AnimationSequencePlayer([view.renderer.animate(element,new import17.AnimationStyles(import18.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {'opacity': '0'}
      ]
      )),import18.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import19.AnimationKeyframe(0,new import17.AnimationStyles(import18.collectAndResolveStyles(collectedStyles,[{}]))),
        new import19.AnimationKeyframe(1,new import17.AnimationStyles(import18.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),150,100,'cubic-bezier(0.55, 0, 0.55, 0.2)',previousPlayers)]);
    totalTime = 250;
  }
  if ((player == (null as any))) { (player = new import20.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import18.renderStyles(element,view.renderer,import18.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import16.AnimationSequencePlayer(previousPlayers).destroy();
  import18.renderStyles(element,view.renderer,import18.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'fadeInContent',player);
  return new import15.AnimationTransition(player,currentState,nextState,totalTime);
}
const nodeDebugInfos_MdSelect1:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_MdSelect1 extends import2.DebugAppView<any> {
  _el_0:any;
  _el_1:any;
  _text_2:any;
  _text_3:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import21.ViewContainer) {
    super(View_MdSelect1,renderType_MdSelect,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSelect1,declaredViewContainer);
    this._expr_4 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'class','mat-select-value'),this.debug(0,0,300));
    this._el_1 = import3.createRenderElement(this.renderer,this._el_0,'span',new import3.InlineArray2(2,'class','mat-select-value-text'),this.debug(1,0,348));
    this._text_2 = this.renderer.createText(this._el_1,'',this.debug(2,0,384));
    this._text_3 = this.renderer.createText(this._el_0,' ',this.debug(3,0,416));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1,
      this._text_2,
      this._text_3
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(2,0,384);
    const currVal_4:any = import3.inlineInterpolate(1,'',((this.parentView.context.selected == null)? (null as any): this.parentView.context.selected.viewValue),'');
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_2,currVal_4);
      this._expr_4 = currVal_4;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
const nodeDebugInfos_MdSelect2:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_MdSelect2 extends import2.DebugAppView<any> {
  _el_0:any;
  _el_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import21.ViewContainer) {
    super(View_MdSelect2,renderType_MdSelect,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSelect2,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','mat-select-panel'),this.debug(0,0,788));
    this._el_1 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','mat-select-content'),this.debug(1,0,1035));
    this.debug((null as any),0,1136);
    this.projectNodes(this._el_1,0);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'keydown',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = 'showing';
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      var animationTransition_transformPanel:any = this.componentType.animations['transformPanel'](this,this._el_0,((this._expr_2 == import1.UNINITIALIZED)? 'void': this._expr_2),((currVal_2 == import1.UNINITIALIZED)? 'void': currVal_2));
      animationTransition_transformPanel.onDone(this.handleEvent_0.bind(this).bind(this,'@transformPanel.done'));
      this._expr_2 = currVal_2;
    }
    const currVal_5:any = 'showing';
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      var animationTransition_fadeInContent:any = this.componentType.animations['fadeInContent'](this,this._el_1,((this._expr_5 == import1.UNINITIALIZED)? 'void': this._expr_5),((currVal_5 == import1.UNINITIALIZED)? 'void': currVal_5));
      animationTransition_fadeInContent.onDone(this.handleEvent_1.bind(this).bind(this,'@fadeInContent.done'));
      this._expr_5 = currVal_5;
    }
    this.debug(0,0,930);
    const currVal_3:any = this.parentView.context._transformOrigin;
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementStyle(this._el_0,'transformOrigin',((this.viewUtils.sanitizer.sanitize(import22.SecurityContext.STYLE,currVal_3) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import22.SecurityContext.STYLE,currVal_3).toString()));
      this._expr_3 = currVal_3;
    }
    this.debug(0,0,973);
    const currVal_4:any = this.parentView.context._panelDoneAnimating;
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementClass(this._el_0,'mat-select-panel-done-animating',currVal_4);
      this._expr_4 = currVal_4;
    }
  }
  detachInternal():void {
    var animationTransition_transformPanel:any = this.componentType.animations['transformPanel'](this,this._el_0,this._expr_2,'void');
    animationTransition_transformPanel.onDone(this.handleEvent_0.bind(this).bind(this,'@transformPanel.done'));
    var animationTransition_fadeInContent:any = this.componentType.animations['fadeInContent'](this,this._el_1,this._expr_5,'void');
    animationTransition_fadeInContent.onDone(this.handleEvent_1.bind(this).bind(this,'@fadeInContent.done'));
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,788);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == '@transformPanel.done')) {
      const pd_sub_0:any = ((<any>this.parentView.context._onPanelDone()) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'keydown')) {
      const pd_sub_1:any = ((<any>this.parentView.context._keyManager.onKeydown($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.debug(1,0,1035);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == '@fadeInContent.done')) {
      const pd_sub_0:any = ((<any>this.parentView.context._onFadeInDone()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
const nodeDebugInfos_MdSelect0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo([import23.OverlayOrigin],(null as any),{
    origin: import23.OverlayOrigin,
    trigger: (null as any)
  }
  ),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import24.TemplateRef,
    import25.NgIf
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import24.TemplateRef,
    import23.ConnectedOverlayDirective
  ]
  ,(null as any),{})
]
;
var renderType_MdSelect:import5.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/winecellar/node_modules/@angular/material/select/select.html',1,import6.ViewEncapsulation.None,styles_MdSelect,{
  'transformPlaceholder': MdSelect_transformPlaceholder_factory,
  'transformPanel': MdSelect_transformPanel_factory,
  'fadeInContent': MdSelect_fadeInContent_factory
}
);
export class View_MdSelect0 extends import2.DebugAppView<import0.MdSelect> {
  _viewQuery_trigger_0:import7.QueryList<any>;
  _viewQuery_ConnectedOverlayDirective_1:import7.QueryList<any>;
  _el_0:any;
  _OverlayOrigin_0_3:import26.Wrapper_OverlayOrigin;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import21.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import27.Wrapper_NgIf;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _anchor_7:any;
  /*private*/ _vc_7:import21.ViewContainer;
  _TemplateRef_7_5:any;
  _ConnectedOverlayDirective_7_6:import26.Wrapper_ConnectedOverlayDirective;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSelect0,renderType_MdSelect,import8.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSelect0);
    this._expr_17 = import1.UNINITIALIZED;
    this._expr_18 = import1.UNINITIALIZED;
    this._expr_19 = import1.UNINITIALIZED;
    this._expr_20 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_trigger_0 = new import7.QueryList<any>();
    this._viewQuery_ConnectedOverlayDirective_1 = new import7.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray4(4,'cdk-overlay-origin','','class','mat-select-trigger'),this.debug(0,0,0));
    this._OverlayOrigin_0_3 = new import26.Wrapper_OverlayOrigin(new import11.ElementRef(this._el_0));
    this._el_1 = import3.createRenderElement(this.renderer,this._el_0,'span',new import3.InlineArray2(2,'class','mat-select-placeholder'),this.debug(1,0,106));
    this._text_2 = this.renderer.createText(this._el_1,'',this.debug(2,0,275));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_0,this.debug(3,0,300));
    this._vc_3 = new import21.ViewContainer(3,0,this,this._anchor_3);
    this._TemplateRef_3_5 = new import24.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import27.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._el_4 = import3.createRenderElement(this.renderer,this._el_0,'span',new import3.InlineArray2(2,'class','mat-select-arrow'),this.debug(4,0,424));
    this._text_5 = this.renderer.createText(this._el_0,' ',this.debug(5,0,462));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_0,'span',new import3.InlineArray2(2,'class','mat-select-underline'),this.debug(6,0,463));
    this._anchor_7 = this.renderer.createTemplateAnchor(parentRenderNode,this.debug(7,0,511));
    this._vc_7 = new import21.ViewContainer(7,(null as any),this,this._anchor_7);
    this._TemplateRef_7_5 = new import24.TemplateRef_(this,7,this._anchor_7);
    this._ConnectedOverlayDirective_7_6 = new import26.Wrapper_ConnectedOverlayDirective(this.parentView.injectorGet(import28.Overlay,this.parentIndex),this._TemplateRef_7_5,this._vc_7.vcRef,this.parentView.injectorGet(import13.Dir,this.parentIndex,(null as any)));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this._ConnectedOverlayDirective_7_6.subscribe(this,this.eventHandler(this.handleEvent_7),true,false,true,false);
    this._viewQuery_trigger_0.reset([new import11.ElementRef(this._el_0)]);
    this.context.trigger = this._viewQuery_trigger_0.first;
    this._viewQuery_ConnectedOverlayDirective_1.reset([this._ConnectedOverlayDirective_7_6.context]);
    this.context.overlayDir = this._viewQuery_ConnectedOverlayDirective_1.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._anchor_7
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import24.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import25.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    if (((token === import23.OverlayOrigin) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._OverlayOrigin_0_3.context; }
    if (((token === import24.TemplateRef) && (7 === requestNodeIndex))) { return this._TemplateRef_7_5; }
    if (((token === import23.ConnectedOverlayDirective) && (7 === requestNodeIndex))) { return this._ConnectedOverlayDirective_7_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_18:any = this.context._placeholderState;
    if (import3.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      var animationTransition_transformPlaceholder:any = this.componentType.animations['transformPlaceholder'](this,this._el_1,((this._expr_18 == import1.UNINITIALIZED)? 'void': this._expr_18),((currVal_18 == import1.UNINITIALIZED)? 'void': currVal_18));
      this._expr_18 = currVal_18;
    }
    this.debug(0,0,0);
    this._OverlayOrigin_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.debug(3,0,331);
    const currVal_3_0_0:any = this.context.selected;
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this.debug(7,0,543);
    const currVal_7_0_0:any = this._OverlayOrigin_0_3.context;
    this._ConnectedOverlayDirective_7_6.check_origin(currVal_7_0_0,throwOnChange,false);
    this.debug(7,0,667);
    const currVal_7_0_1:any = this.context._positions;
    this._ConnectedOverlayDirective_7_6.check_positions(currVal_7_0_1,throwOnChange,false);
    this.debug(7,0,740);
    const currVal_7_0_2:any = this.context._offsetX;
    this._ConnectedOverlayDirective_7_6.check_offsetX(currVal_7_0_2,throwOnChange,false);
    this.debug(7,0,719);
    const currVal_7_0_3:any = this.context._offsetY;
    this._ConnectedOverlayDirective_7_6.check_offsetY(currVal_7_0_3,throwOnChange,false);
    this.debug(7,0,692);
    const currVal_7_0_4:any = this.context._triggerWidth;
    this._ConnectedOverlayDirective_7_6.check_minWidth(currVal_7_0_4,throwOnChange,false);
    this.debug(7,0,618);
    const currVal_7_0_5:any = 'cdk-overlay-transparent-backdrop';
    this._ConnectedOverlayDirective_7_6.check_backdropClass(currVal_7_0_5,throwOnChange,false);
    this.debug(7,0,580);
    const currVal_7_0_6:any = '';
    this._ConnectedOverlayDirective_7_6.check_hasBackdrop(currVal_7_0_6,throwOnChange,false);
    this.debug(7,0,561);
    const currVal_7_0_7:any = this.context.panelOpen;
    this._ConnectedOverlayDirective_7_6.check_open(currVal_7_0_7,throwOnChange,false);
    this._ConnectedOverlayDirective_7_6.ngDoCheck(this,this._anchor_7,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    this._vc_7.detectChangesInNestedViews(throwOnChange);
    this.debug(1,0,143);
    const currVal_17:any = this.context.selected;
    if (import3.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementClass(this._el_1,'mat-floating-placeholder',currVal_17);
      this._expr_17 = currVal_17;
    }
    this.debug(1,0,236);
    const currVal_19:any = this.context._selectedValueWidth;
    if (import3.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementStyle(this._el_1,'width',((this.viewUtils.sanitizer.sanitize(import22.SecurityContext.STYLE,currVal_19) == null)? (null as any): (this.viewUtils.sanitizer.sanitize(import22.SecurityContext.STYLE,currVal_19).toString() + 'px')));
      this._expr_19 = currVal_19;
    }
    this.debug(2,0,275);
    const currVal_20:any = import3.inlineInterpolate(1,'',this.context.placeholder,' ');
    if (import3.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setText(this._text_2,currVal_20);
      this._expr_20 = currVal_20;
    }
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
    this._vc_7.destroyNestedViews();
    this.debug(3,0,300);
    this.debug(0,0,0);
    this._ConnectedOverlayDirective_7_6.ngOnDestroy();
  }
  detachInternal():void {
    var animationTransition_transformPlaceholder:any = this.componentType.animations['transformPlaceholder'](this,this._el_1,this._expr_18,'void');
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 3)) { return new View_MdSelect1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    if ((nodeIndex == 7)) { return new View_MdSelect2(this.viewUtils,this,7,this._anchor_7,this._vc_7); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.toggle()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_7(eventName:string,$event:any):boolean {
    this.debug(7,0,511);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'backdropClick')) {
      const pd_sub_0:any = ((<any>this.context.close()) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'attach')) {
      const pd_sub_1:any = ((<any>this.context._setScrollTop()) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}