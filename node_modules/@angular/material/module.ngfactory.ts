/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/module';
import * as import2 from '@angular/material/core/compatibility/compatibility';
import * as import3 from '@angular/material/core/ripple/ripple';
import * as import4 from '@angular/common/src/common_module';
import * as import5 from '@angular/material/core/option/option';
import * as import6 from '@angular/material/core/portal/portal-directives';
import * as import7 from '@angular/material/core/overlay/overlay-directives';
import * as import8 from '@angular/material/autocomplete/index';
import * as import9 from '@angular/material/button/button';
import * as import10 from '@angular/material/card/card';
import * as import11 from '@angular/material/chips/chip-list';
import * as import12 from '@angular/material/checkbox/checkbox';
import * as import13 from '@angular/material/core/line/line';
import * as import14 from '@angular/material/grid-list/grid-list';
import * as import15 from '@angular/forms/src/directives';
import * as import16 from '@angular/forms/src/form_providers';
import * as import17 from '@angular/material/core/platform/index';
import * as import18 from '@angular/material/input/index';
import * as import19 from '@angular/material/list/list';
import * as import20 from '@angular/material/progress-bar/progress-bar';
import * as import21 from '@angular/material/progress-spinner/progress-spinner';
import * as import22 from '@angular/material/select/index';
import * as import23 from '@angular/material/core/a11y/index';
import * as import24 from '@angular/material/sidenav/sidenav';
import * as import25 from '@angular/material/core/observe-content/observe-content';
import * as import26 from '@angular/material/tabs/tab-group';
import * as import27 from '@angular/material/toolbar/toolbar';
import * as import28 from '@angular/material/core/projection/projection';
import * as import29 from '@angular/material/core/rtl/dir';
import * as import30 from '@angular/material/button-toggle/button-toggle';
import * as import31 from '@angular/material/dialog/index';
import * as import32 from '@angular/http/src/http_module';
import * as import33 from '@angular/material/icon/icon';
import * as import34 from '@angular/material/menu/menu';
import * as import35 from '@angular/material/radio/radio';
import * as import36 from '@angular/material/slider/slider';
import * as import37 from '@angular/material/slide-toggle/slide-toggle';
import * as import38 from '@angular/material/snack-bar/index';
import * as import39 from '@angular/material/tooltip/tooltip';
import * as import40 from '@angular/material/core/style/index';
import * as import41 from '@angular/common/src/localization';
import * as import42 from '@angular/material/core/overlay/position/overlay-position-builder';
import * as import43 from '@angular/material/core/overlay/overlay';
import * as import44 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import45 from '@angular/material/core/platform/platform';
import * as import46 from '@angular/material/core/a11y/interactivity-checker';
import * as import47 from '@angular/material/dialog/dialog';
import * as import48 from '@angular/http/src/backends/browser_xhr';
import * as import49 from '@angular/http/src/base_response_options';
import * as import50 from '@angular/http/src/backends/xhr_backend';
import * as import51 from '@angular/http/src/base_request_options';
import * as import52 from '@angular/material/core/gestures/gesture-config';
import * as import53 from '@angular/material/snack-bar/snack-bar';
import * as import54 from '@angular/core/src/di/injector';
import * as import55 from './dialog/dialog-container.ngfactory';
import * as import56 from './snack-bar/snack-bar-container.ngfactory';
import * as import57 from './snack-bar/simple-snack-bar.ngfactory';
import * as import58 from './tooltip/tooltip.ngfactory';
import * as import59 from '@angular/material/core/overlay/scroll/scroll-dispatcher';
import * as import60 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import61 from '@angular/core/src/i18n/tokens';
import * as import62 from '@angular/material/core/overlay/overlay-container';
import * as import63 from '@angular/core/src/application_ref';
import * as import64 from '@angular/core/src/zone/ng_zone';
import * as import65 from '@angular/material/core/a11y/live-announcer';
import * as import66 from '@angular/material/core/coordination/unique-selection-dispatcher';
import * as import67 from '@angular/material/icon/icon-registry';
import * as import68 from '@angular/platform-browser/src/security/dom_sanitization_service';
import * as import69 from '@angular/material/core/style/focus-classes';
import * as import70 from '@angular/http/src/interfaces';
import * as import71 from '@angular/http/src/http';
import * as import72 from '@angular/platform-browser/src/dom/events/hammer_gestures';
class MaterialRootModuleInjector extends import0.NgModuleInjector<import1.MaterialRootModule> {
  _CompatibilityModule_0:import2.CompatibilityModule;
  _MdRippleModule_1:import3.MdRippleModule;
  _CommonModule_2:import4.CommonModule;
  _MdOptionModule_3:import5.MdOptionModule;
  _PortalModule_4:import6.PortalModule;
  _OverlayModule_5:import7.OverlayModule;
  _MdAutocompleteModule_6:import8.MdAutocompleteModule;
  _MdButtonModule_7:import9.MdButtonModule;
  _MdCardModule_8:import10.MdCardModule;
  _MdChipsModule_9:import11.MdChipsModule;
  _MdCheckboxModule_10:import12.MdCheckboxModule;
  _MdLineModule_11:import13.MdLineModule;
  _MdGridListModule_12:import14.MdGridListModule;
  _InternalFormsSharedModule_13:import15.InternalFormsSharedModule;
  _FormsModule_14:import16.FormsModule;
  _PlatformModule_15:import17.PlatformModule;
  _MdInputModule_16:import18.MdInputModule;
  _MdListModule_17:import19.MdListModule;
  _MdProgressBarModule_18:import20.MdProgressBarModule;
  _MdProgressSpinnerModule_19:import21.MdProgressSpinnerModule;
  _MdSelectModule_20:import22.MdSelectModule;
  _A11yModule_21:import23.A11yModule;
  _MdSidenavModule_22:import24.MdSidenavModule;
  _ObserveContentModule_23:import25.ObserveContentModule;
  _MdTabsModule_24:import26.MdTabsModule;
  _MdToolbarModule_25:import27.MdToolbarModule;
  _ProjectionModule_26:import28.ProjectionModule;
  _RtlModule_27:import29.RtlModule;
  _MdButtonToggleModule_28:import30.MdButtonToggleModule;
  _MdDialogModule_29:import31.MdDialogModule;
  _HttpModule_30:import32.HttpModule;
  _MdIconModule_31:import33.MdIconModule;
  _MdMenuModule_32:import34.MdMenuModule;
  _MdRadioModule_33:import35.MdRadioModule;
  _MdSliderModule_34:import36.MdSliderModule;
  _MdSlideToggleModule_35:import37.MdSlideToggleModule;
  _MdSnackBarModule_36:import38.MdSnackBarModule;
  _MdTooltipModule_37:import39.MdTooltipModule;
  _StyleModule_38:import40.StyleModule;
  _MaterialRootModule_39:import1.MaterialRootModule;
  __ScrollDispatcher_40:any;
  __ViewportRuler_41:any;
  __NgLocalization_42:import41.NgLocaleLocalization;
  __OverlayContainer_43:any;
  __OverlayPositionBuilder_44:import42.OverlayPositionBuilder;
  __Overlay_45:import43.Overlay;
  __RadioControlRegistry_46:import44.RadioControlRegistry;
  __Platform_47:import45.Platform;
  __InteractivityChecker_48:import46.InteractivityChecker;
  __LiveAnnouncer_49:any;
  __DomProjection_50:import28.DomProjection;
  __UniqueSelectionDispatcher_51:any;
  __MdDialog_52:import47.MdDialog;
  __BrowserXhr_53:import48.BrowserXhr;
  __ResponseOptions_54:import49.BaseResponseOptions;
  __XSRFStrategy_55:any;
  __XHRBackend_56:import50.XHRBackend;
  __RequestOptions_57:import51.BaseRequestOptions;
  __Http_58:any;
  __MdIconRegistry_59:any;
  __HAMMER_GESTURE_CONFIG_60:import52.GestureConfig;
  __MdSnackBar_61:import53.MdSnackBar;
  __FocusOriginMonitor_62:any;
  constructor(parent:import54.Injector) {
    super(parent,[
      import55.MdDialogContainerNgFactory,
      import56.MdSnackBarContainerNgFactory,
      import57.SimpleSnackBarNgFactory,
      import58.TooltipComponentNgFactory
    ]
    ,([] as any[]));
  }
  get _ScrollDispatcher_40():any {
    if ((this.__ScrollDispatcher_40 == null)) { (this.__ScrollDispatcher_40 = import59.SCROLL_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import59.ScrollDispatcher,(null as any)))); }
    return this.__ScrollDispatcher_40;
  }
  get _ViewportRuler_41():any {
    if ((this.__ViewportRuler_41 == null)) { (this.__ViewportRuler_41 = import60.VIEWPORT_RULER_PROVIDER_FACTORY(this.parent.get(import60.ViewportRuler,(null as any)),this._ScrollDispatcher_40)); }
    return this.__ViewportRuler_41;
  }
  get _NgLocalization_42():import41.NgLocaleLocalization {
    if ((this.__NgLocalization_42 == null)) { (this.__NgLocalization_42 = new import41.NgLocaleLocalization(this.parent.get(import61.LOCALE_ID))); }
    return this.__NgLocalization_42;
  }
  get _OverlayContainer_43():any {
    if ((this.__OverlayContainer_43 == null)) { (this.__OverlayContainer_43 = import62.OVERLAY_CONTAINER_PROVIDER_FACTORY(this.parent.get(import62.OverlayContainer,(null as any)))); }
    return this.__OverlayContainer_43;
  }
  get _OverlayPositionBuilder_44():import42.OverlayPositionBuilder {
    if ((this.__OverlayPositionBuilder_44 == null)) { (this.__OverlayPositionBuilder_44 = new import42.OverlayPositionBuilder(this._ViewportRuler_41)); }
    return this.__OverlayPositionBuilder_44;
  }
  get _Overlay_45():import43.Overlay {
    if ((this.__Overlay_45 == null)) { (this.__Overlay_45 = new import43.Overlay(this._OverlayContainer_43,this,this._OverlayPositionBuilder_44,this.parent.get(import63.ApplicationRef),this,this.parent.get(import64.NgZone))); }
    return this.__Overlay_45;
  }
  get _RadioControlRegistry_46():import44.RadioControlRegistry {
    if ((this.__RadioControlRegistry_46 == null)) { (this.__RadioControlRegistry_46 = new import44.RadioControlRegistry()); }
    return this.__RadioControlRegistry_46;
  }
  get _Platform_47():import45.Platform {
    if ((this.__Platform_47 == null)) { (this.__Platform_47 = new import45.Platform()); }
    return this.__Platform_47;
  }
  get _InteractivityChecker_48():import46.InteractivityChecker {
    if ((this.__InteractivityChecker_48 == null)) { (this.__InteractivityChecker_48 = new import46.InteractivityChecker(this._Platform_47)); }
    return this.__InteractivityChecker_48;
  }
  get _LiveAnnouncer_49():any {
    if ((this.__LiveAnnouncer_49 == null)) { (this.__LiveAnnouncer_49 = import65.LIVE_ANNOUNCER_PROVIDER_FACTORY(this.parent.get(import65.LiveAnnouncer,(null as any)),this.parent.get(import65.LIVE_ANNOUNCER_ELEMENT_TOKEN,(null as any)))); }
    return this.__LiveAnnouncer_49;
  }
  get _DomProjection_50():import28.DomProjection {
    if ((this.__DomProjection_50 == null)) { (this.__DomProjection_50 = new import28.DomProjection()); }
    return this.__DomProjection_50;
  }
  get _UniqueSelectionDispatcher_51():any {
    if ((this.__UniqueSelectionDispatcher_51 == null)) { (this.__UniqueSelectionDispatcher_51 = import66.UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import66.UniqueSelectionDispatcher,(null as any)))); }
    return this.__UniqueSelectionDispatcher_51;
  }
  get _MdDialog_52():import47.MdDialog {
    if ((this.__MdDialog_52 == null)) { (this.__MdDialog_52 = new import47.MdDialog(this._Overlay_45,this,this.parent.get(import47.MdDialog,(null as any)))); }
    return this.__MdDialog_52;
  }
  get _BrowserXhr_53():import48.BrowserXhr {
    if ((this.__BrowserXhr_53 == null)) { (this.__BrowserXhr_53 = new import48.BrowserXhr()); }
    return this.__BrowserXhr_53;
  }
  get _ResponseOptions_54():import49.BaseResponseOptions {
    if ((this.__ResponseOptions_54 == null)) { (this.__ResponseOptions_54 = new import49.BaseResponseOptions()); }
    return this.__ResponseOptions_54;
  }
  get _XSRFStrategy_55():any {
    if ((this.__XSRFStrategy_55 == null)) { (this.__XSRFStrategy_55 = import32._createDefaultCookieXSRFStrategy()); }
    return this.__XSRFStrategy_55;
  }
  get _XHRBackend_56():import50.XHRBackend {
    if ((this.__XHRBackend_56 == null)) { (this.__XHRBackend_56 = new import50.XHRBackend(this._BrowserXhr_53,this._ResponseOptions_54,this._XSRFStrategy_55)); }
    return this.__XHRBackend_56;
  }
  get _RequestOptions_57():import51.BaseRequestOptions {
    if ((this.__RequestOptions_57 == null)) { (this.__RequestOptions_57 = new import51.BaseRequestOptions()); }
    return this.__RequestOptions_57;
  }
  get _Http_58():any {
    if ((this.__Http_58 == null)) { (this.__Http_58 = import32.httpFactory(this._XHRBackend_56,this._RequestOptions_57)); }
    return this.__Http_58;
  }
  get _MdIconRegistry_59():any {
    if ((this.__MdIconRegistry_59 == null)) { (this.__MdIconRegistry_59 = import33.ICON_REGISTRY_PROVIDER_FACTORY(this.parent.get(import67.MdIconRegistry,(null as any)),this._Http_58,this.parent.get(import68.DomSanitizer))); }
    return this.__MdIconRegistry_59;
  }
  get _HAMMER_GESTURE_CONFIG_60():import52.GestureConfig {
    if ((this.__HAMMER_GESTURE_CONFIG_60 == null)) { (this.__HAMMER_GESTURE_CONFIG_60 = new import52.GestureConfig()); }
    return this.__HAMMER_GESTURE_CONFIG_60;
  }
  get _MdSnackBar_61():import53.MdSnackBar {
    if ((this.__MdSnackBar_61 == null)) { (this.__MdSnackBar_61 = new import53.MdSnackBar(this._Overlay_45,this._LiveAnnouncer_49,this.parent.get(import53.MdSnackBar,(null as any)))); }
    return this.__MdSnackBar_61;
  }
  get _FocusOriginMonitor_62():any {
    if ((this.__FocusOriginMonitor_62 == null)) { (this.__FocusOriginMonitor_62 = import69.FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY(this.parent.get(import69.FocusOriginMonitor,(null as any)))); }
    return this.__FocusOriginMonitor_62;
  }
  createInternal():import1.MaterialRootModule {
    this._CompatibilityModule_0 = new import2.CompatibilityModule();
    this._MdRippleModule_1 = new import3.MdRippleModule();
    this._CommonModule_2 = new import4.CommonModule();
    this._MdOptionModule_3 = new import5.MdOptionModule();
    this._PortalModule_4 = new import6.PortalModule();
    this._OverlayModule_5 = new import7.OverlayModule();
    this._MdAutocompleteModule_6 = new import8.MdAutocompleteModule();
    this._MdButtonModule_7 = new import9.MdButtonModule();
    this._MdCardModule_8 = new import10.MdCardModule();
    this._MdChipsModule_9 = new import11.MdChipsModule();
    this._MdCheckboxModule_10 = new import12.MdCheckboxModule();
    this._MdLineModule_11 = new import13.MdLineModule();
    this._MdGridListModule_12 = new import14.MdGridListModule();
    this._InternalFormsSharedModule_13 = new import15.InternalFormsSharedModule();
    this._FormsModule_14 = new import16.FormsModule();
    this._PlatformModule_15 = new import17.PlatformModule();
    this._MdInputModule_16 = new import18.MdInputModule();
    this._MdListModule_17 = new import19.MdListModule();
    this._MdProgressBarModule_18 = new import20.MdProgressBarModule();
    this._MdProgressSpinnerModule_19 = new import21.MdProgressSpinnerModule();
    this._MdSelectModule_20 = new import22.MdSelectModule();
    this._A11yModule_21 = new import23.A11yModule();
    this._MdSidenavModule_22 = new import24.MdSidenavModule();
    this._ObserveContentModule_23 = new import25.ObserveContentModule();
    this._MdTabsModule_24 = new import26.MdTabsModule();
    this._MdToolbarModule_25 = new import27.MdToolbarModule();
    this._ProjectionModule_26 = new import28.ProjectionModule();
    this._RtlModule_27 = new import29.RtlModule();
    this._MdButtonToggleModule_28 = new import30.MdButtonToggleModule();
    this._MdDialogModule_29 = new import31.MdDialogModule();
    this._HttpModule_30 = new import32.HttpModule();
    this._MdIconModule_31 = new import33.MdIconModule();
    this._MdMenuModule_32 = new import34.MdMenuModule();
    this._MdRadioModule_33 = new import35.MdRadioModule();
    this._MdSliderModule_34 = new import36.MdSliderModule();
    this._MdSlideToggleModule_35 = new import37.MdSlideToggleModule();
    this._MdSnackBarModule_36 = new import38.MdSnackBarModule();
    this._MdTooltipModule_37 = new import39.MdTooltipModule();
    this._StyleModule_38 = new import40.StyleModule();
    this._MaterialRootModule_39 = new import1.MaterialRootModule();
    return this._MaterialRootModule_39;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CompatibilityModule)) { return this._CompatibilityModule_0; }
    if ((token === import3.MdRippleModule)) { return this._MdRippleModule_1; }
    if ((token === import4.CommonModule)) { return this._CommonModule_2; }
    if ((token === import5.MdOptionModule)) { return this._MdOptionModule_3; }
    if ((token === import6.PortalModule)) { return this._PortalModule_4; }
    if ((token === import7.OverlayModule)) { return this._OverlayModule_5; }
    if ((token === import8.MdAutocompleteModule)) { return this._MdAutocompleteModule_6; }
    if ((token === import9.MdButtonModule)) { return this._MdButtonModule_7; }
    if ((token === import10.MdCardModule)) { return this._MdCardModule_8; }
    if ((token === import11.MdChipsModule)) { return this._MdChipsModule_9; }
    if ((token === import12.MdCheckboxModule)) { return this._MdCheckboxModule_10; }
    if ((token === import13.MdLineModule)) { return this._MdLineModule_11; }
    if ((token === import14.MdGridListModule)) { return this._MdGridListModule_12; }
    if ((token === import15.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_13; }
    if ((token === import16.FormsModule)) { return this._FormsModule_14; }
    if ((token === import17.PlatformModule)) { return this._PlatformModule_15; }
    if ((token === import18.MdInputModule)) { return this._MdInputModule_16; }
    if ((token === import19.MdListModule)) { return this._MdListModule_17; }
    if ((token === import20.MdProgressBarModule)) { return this._MdProgressBarModule_18; }
    if ((token === import21.MdProgressSpinnerModule)) { return this._MdProgressSpinnerModule_19; }
    if ((token === import22.MdSelectModule)) { return this._MdSelectModule_20; }
    if ((token === import23.A11yModule)) { return this._A11yModule_21; }
    if ((token === import24.MdSidenavModule)) { return this._MdSidenavModule_22; }
    if ((token === import25.ObserveContentModule)) { return this._ObserveContentModule_23; }
    if ((token === import26.MdTabsModule)) { return this._MdTabsModule_24; }
    if ((token === import27.MdToolbarModule)) { return this._MdToolbarModule_25; }
    if ((token === import28.ProjectionModule)) { return this._ProjectionModule_26; }
    if ((token === import29.RtlModule)) { return this._RtlModule_27; }
    if ((token === import30.MdButtonToggleModule)) { return this._MdButtonToggleModule_28; }
    if ((token === import31.MdDialogModule)) { return this._MdDialogModule_29; }
    if ((token === import32.HttpModule)) { return this._HttpModule_30; }
    if ((token === import33.MdIconModule)) { return this._MdIconModule_31; }
    if ((token === import34.MdMenuModule)) { return this._MdMenuModule_32; }
    if ((token === import35.MdRadioModule)) { return this._MdRadioModule_33; }
    if ((token === import36.MdSliderModule)) { return this._MdSliderModule_34; }
    if ((token === import37.MdSlideToggleModule)) { return this._MdSlideToggleModule_35; }
    if ((token === import38.MdSnackBarModule)) { return this._MdSnackBarModule_36; }
    if ((token === import39.MdTooltipModule)) { return this._MdTooltipModule_37; }
    if ((token === import40.StyleModule)) { return this._StyleModule_38; }
    if ((token === import1.MaterialRootModule)) { return this._MaterialRootModule_39; }
    if ((token === import59.ScrollDispatcher)) { return this._ScrollDispatcher_40; }
    if ((token === import60.ViewportRuler)) { return this._ViewportRuler_41; }
    if ((token === import41.NgLocalization)) { return this._NgLocalization_42; }
    if ((token === import62.OverlayContainer)) { return this._OverlayContainer_43; }
    if ((token === import42.OverlayPositionBuilder)) { return this._OverlayPositionBuilder_44; }
    if ((token === import43.Overlay)) { return this._Overlay_45; }
    if ((token === import44.RadioControlRegistry)) { return this._RadioControlRegistry_46; }
    if ((token === import45.Platform)) { return this._Platform_47; }
    if ((token === import46.InteractivityChecker)) { return this._InteractivityChecker_48; }
    if ((token === import65.LiveAnnouncer)) { return this._LiveAnnouncer_49; }
    if ((token === import28.DomProjection)) { return this._DomProjection_50; }
    if ((token === import66.UniqueSelectionDispatcher)) { return this._UniqueSelectionDispatcher_51; }
    if ((token === import47.MdDialog)) { return this._MdDialog_52; }
    if ((token === import48.BrowserXhr)) { return this._BrowserXhr_53; }
    if ((token === import49.ResponseOptions)) { return this._ResponseOptions_54; }
    if ((token === import70.XSRFStrategy)) { return this._XSRFStrategy_55; }
    if ((token === import50.XHRBackend)) { return this._XHRBackend_56; }
    if ((token === import51.RequestOptions)) { return this._RequestOptions_57; }
    if ((token === import71.Http)) { return this._Http_58; }
    if ((token === import67.MdIconRegistry)) { return this._MdIconRegistry_59; }
    if ((token === import72.HAMMER_GESTURE_CONFIG)) { return this._HAMMER_GESTURE_CONFIG_60; }
    if ((token === import53.MdSnackBar)) { return this._MdSnackBar_61; }
    if ((token === import69.FocusOriginMonitor)) { return this._FocusOriginMonitor_62; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MaterialRootModuleNgFactory:import0.NgModuleFactory<import1.MaterialRootModule> = new import0.NgModuleFactory(MaterialRootModuleInjector,import1.MaterialRootModule);
class MaterialModuleInjector extends import0.NgModuleInjector<import1.MaterialModule> {
  _CompatibilityModule_0:import2.CompatibilityModule;
  _MdRippleModule_1:import3.MdRippleModule;
  _CommonModule_2:import4.CommonModule;
  _MdOptionModule_3:import5.MdOptionModule;
  _PortalModule_4:import6.PortalModule;
  _OverlayModule_5:import7.OverlayModule;
  _MdAutocompleteModule_6:import8.MdAutocompleteModule;
  _MdButtonModule_7:import9.MdButtonModule;
  _InternalFormsSharedModule_8:import15.InternalFormsSharedModule;
  _FormsModule_9:import16.FormsModule;
  _MdButtonToggleModule_10:import30.MdButtonToggleModule;
  _MdCardModule_11:import10.MdCardModule;
  _MdChipsModule_12:import11.MdChipsModule;
  _MdCheckboxModule_13:import12.MdCheckboxModule;
  _PlatformModule_14:import17.PlatformModule;
  _A11yModule_15:import23.A11yModule;
  _MdDialogModule_16:import31.MdDialogModule;
  _MdLineModule_17:import13.MdLineModule;
  _MdGridListModule_18:import14.MdGridListModule;
  _HttpModule_19:import32.HttpModule;
  _MdIconModule_20:import33.MdIconModule;
  _MdInputModule_21:import18.MdInputModule;
  _MdListModule_22:import19.MdListModule;
  _MdMenuModule_23:import34.MdMenuModule;
  _MdProgressBarModule_24:import20.MdProgressBarModule;
  _MdProgressSpinnerModule_25:import21.MdProgressSpinnerModule;
  _MdRadioModule_26:import35.MdRadioModule;
  _MdSelectModule_27:import22.MdSelectModule;
  _MdSidenavModule_28:import24.MdSidenavModule;
  _MdSliderModule_29:import36.MdSliderModule;
  _MdSlideToggleModule_30:import37.MdSlideToggleModule;
  _MdSnackBarModule_31:import38.MdSnackBarModule;
  _ObserveContentModule_32:import25.ObserveContentModule;
  _MdTabsModule_33:import26.MdTabsModule;
  _MdToolbarModule_34:import27.MdToolbarModule;
  _MdTooltipModule_35:import39.MdTooltipModule;
  _RtlModule_36:import29.RtlModule;
  _StyleModule_37:import40.StyleModule;
  _ProjectionModule_38:import28.ProjectionModule;
  _MaterialModule_39:import1.MaterialModule;
  __ScrollDispatcher_40:any;
  __ViewportRuler_41:any;
  __NgLocalization_42:import41.NgLocaleLocalization;
  __OverlayContainer_43:any;
  __OverlayPositionBuilder_44:import42.OverlayPositionBuilder;
  __Overlay_45:import43.Overlay;
  __RadioControlRegistry_46:import44.RadioControlRegistry;
  __UniqueSelectionDispatcher_47:any;
  __Platform_48:import45.Platform;
  __InteractivityChecker_49:import46.InteractivityChecker;
  __LiveAnnouncer_50:any;
  __MdDialog_51:import47.MdDialog;
  __BrowserXhr_52:import48.BrowserXhr;
  __ResponseOptions_53:import49.BaseResponseOptions;
  __XSRFStrategy_54:any;
  __XHRBackend_55:import50.XHRBackend;
  __RequestOptions_56:import51.BaseRequestOptions;
  __Http_57:any;
  __MdIconRegistry_58:any;
  __HAMMER_GESTURE_CONFIG_59:import52.GestureConfig;
  __MdSnackBar_60:import53.MdSnackBar;
  __FocusOriginMonitor_61:any;
  __DomProjection_62:import28.DomProjection;
  constructor(parent:import54.Injector) {
    super(parent,[
      import55.MdDialogContainerNgFactory,
      import56.MdSnackBarContainerNgFactory,
      import57.SimpleSnackBarNgFactory,
      import58.TooltipComponentNgFactory
    ]
    ,([] as any[]));
  }
  get _ScrollDispatcher_40():any {
    if ((this.__ScrollDispatcher_40 == null)) { (this.__ScrollDispatcher_40 = import59.SCROLL_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import59.ScrollDispatcher,(null as any)))); }
    return this.__ScrollDispatcher_40;
  }
  get _ViewportRuler_41():any {
    if ((this.__ViewportRuler_41 == null)) { (this.__ViewportRuler_41 = import60.VIEWPORT_RULER_PROVIDER_FACTORY(this.parent.get(import60.ViewportRuler,(null as any)),this._ScrollDispatcher_40)); }
    return this.__ViewportRuler_41;
  }
  get _NgLocalization_42():import41.NgLocaleLocalization {
    if ((this.__NgLocalization_42 == null)) { (this.__NgLocalization_42 = new import41.NgLocaleLocalization(this.parent.get(import61.LOCALE_ID))); }
    return this.__NgLocalization_42;
  }
  get _OverlayContainer_43():any {
    if ((this.__OverlayContainer_43 == null)) { (this.__OverlayContainer_43 = import62.OVERLAY_CONTAINER_PROVIDER_FACTORY(this.parent.get(import62.OverlayContainer,(null as any)))); }
    return this.__OverlayContainer_43;
  }
  get _OverlayPositionBuilder_44():import42.OverlayPositionBuilder {
    if ((this.__OverlayPositionBuilder_44 == null)) { (this.__OverlayPositionBuilder_44 = new import42.OverlayPositionBuilder(this._ViewportRuler_41)); }
    return this.__OverlayPositionBuilder_44;
  }
  get _Overlay_45():import43.Overlay {
    if ((this.__Overlay_45 == null)) { (this.__Overlay_45 = new import43.Overlay(this._OverlayContainer_43,this,this._OverlayPositionBuilder_44,this.parent.get(import63.ApplicationRef),this,this.parent.get(import64.NgZone))); }
    return this.__Overlay_45;
  }
  get _RadioControlRegistry_46():import44.RadioControlRegistry {
    if ((this.__RadioControlRegistry_46 == null)) { (this.__RadioControlRegistry_46 = new import44.RadioControlRegistry()); }
    return this.__RadioControlRegistry_46;
  }
  get _UniqueSelectionDispatcher_47():any {
    if ((this.__UniqueSelectionDispatcher_47 == null)) { (this.__UniqueSelectionDispatcher_47 = import66.UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY(this.parent.get(import66.UniqueSelectionDispatcher,(null as any)))); }
    return this.__UniqueSelectionDispatcher_47;
  }
  get _Platform_48():import45.Platform {
    if ((this.__Platform_48 == null)) { (this.__Platform_48 = new import45.Platform()); }
    return this.__Platform_48;
  }
  get _InteractivityChecker_49():import46.InteractivityChecker {
    if ((this.__InteractivityChecker_49 == null)) { (this.__InteractivityChecker_49 = new import46.InteractivityChecker(this._Platform_48)); }
    return this.__InteractivityChecker_49;
  }
  get _LiveAnnouncer_50():any {
    if ((this.__LiveAnnouncer_50 == null)) { (this.__LiveAnnouncer_50 = import65.LIVE_ANNOUNCER_PROVIDER_FACTORY(this.parent.get(import65.LiveAnnouncer,(null as any)),this.parent.get(import65.LIVE_ANNOUNCER_ELEMENT_TOKEN,(null as any)))); }
    return this.__LiveAnnouncer_50;
  }
  get _MdDialog_51():import47.MdDialog {
    if ((this.__MdDialog_51 == null)) { (this.__MdDialog_51 = new import47.MdDialog(this._Overlay_45,this,this.parent.get(import47.MdDialog,(null as any)))); }
    return this.__MdDialog_51;
  }
  get _BrowserXhr_52():import48.BrowserXhr {
    if ((this.__BrowserXhr_52 == null)) { (this.__BrowserXhr_52 = new import48.BrowserXhr()); }
    return this.__BrowserXhr_52;
  }
  get _ResponseOptions_53():import49.BaseResponseOptions {
    if ((this.__ResponseOptions_53 == null)) { (this.__ResponseOptions_53 = new import49.BaseResponseOptions()); }
    return this.__ResponseOptions_53;
  }
  get _XSRFStrategy_54():any {
    if ((this.__XSRFStrategy_54 == null)) { (this.__XSRFStrategy_54 = import32._createDefaultCookieXSRFStrategy()); }
    return this.__XSRFStrategy_54;
  }
  get _XHRBackend_55():import50.XHRBackend {
    if ((this.__XHRBackend_55 == null)) { (this.__XHRBackend_55 = new import50.XHRBackend(this._BrowserXhr_52,this._ResponseOptions_53,this._XSRFStrategy_54)); }
    return this.__XHRBackend_55;
  }
  get _RequestOptions_56():import51.BaseRequestOptions {
    if ((this.__RequestOptions_56 == null)) { (this.__RequestOptions_56 = new import51.BaseRequestOptions()); }
    return this.__RequestOptions_56;
  }
  get _Http_57():any {
    if ((this.__Http_57 == null)) { (this.__Http_57 = import32.httpFactory(this._XHRBackend_55,this._RequestOptions_56)); }
    return this.__Http_57;
  }
  get _MdIconRegistry_58():any {
    if ((this.__MdIconRegistry_58 == null)) { (this.__MdIconRegistry_58 = import33.ICON_REGISTRY_PROVIDER_FACTORY(this.parent.get(import67.MdIconRegistry,(null as any)),this._Http_57,this.parent.get(import68.DomSanitizer))); }
    return this.__MdIconRegistry_58;
  }
  get _HAMMER_GESTURE_CONFIG_59():import52.GestureConfig {
    if ((this.__HAMMER_GESTURE_CONFIG_59 == null)) { (this.__HAMMER_GESTURE_CONFIG_59 = new import52.GestureConfig()); }
    return this.__HAMMER_GESTURE_CONFIG_59;
  }
  get _MdSnackBar_60():import53.MdSnackBar {
    if ((this.__MdSnackBar_60 == null)) { (this.__MdSnackBar_60 = new import53.MdSnackBar(this._Overlay_45,this._LiveAnnouncer_50,this.parent.get(import53.MdSnackBar,(null as any)))); }
    return this.__MdSnackBar_60;
  }
  get _FocusOriginMonitor_61():any {
    if ((this.__FocusOriginMonitor_61 == null)) { (this.__FocusOriginMonitor_61 = import69.FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY(this.parent.get(import69.FocusOriginMonitor,(null as any)))); }
    return this.__FocusOriginMonitor_61;
  }
  get _DomProjection_62():import28.DomProjection {
    if ((this.__DomProjection_62 == null)) { (this.__DomProjection_62 = new import28.DomProjection()); }
    return this.__DomProjection_62;
  }
  createInternal():import1.MaterialModule {
    this._CompatibilityModule_0 = new import2.CompatibilityModule();
    this._MdRippleModule_1 = new import3.MdRippleModule();
    this._CommonModule_2 = new import4.CommonModule();
    this._MdOptionModule_3 = new import5.MdOptionModule();
    this._PortalModule_4 = new import6.PortalModule();
    this._OverlayModule_5 = new import7.OverlayModule();
    this._MdAutocompleteModule_6 = new import8.MdAutocompleteModule();
    this._MdButtonModule_7 = new import9.MdButtonModule();
    this._InternalFormsSharedModule_8 = new import15.InternalFormsSharedModule();
    this._FormsModule_9 = new import16.FormsModule();
    this._MdButtonToggleModule_10 = new import30.MdButtonToggleModule();
    this._MdCardModule_11 = new import10.MdCardModule();
    this._MdChipsModule_12 = new import11.MdChipsModule();
    this._MdCheckboxModule_13 = new import12.MdCheckboxModule();
    this._PlatformModule_14 = new import17.PlatformModule();
    this._A11yModule_15 = new import23.A11yModule();
    this._MdDialogModule_16 = new import31.MdDialogModule();
    this._MdLineModule_17 = new import13.MdLineModule();
    this._MdGridListModule_18 = new import14.MdGridListModule();
    this._HttpModule_19 = new import32.HttpModule();
    this._MdIconModule_20 = new import33.MdIconModule();
    this._MdInputModule_21 = new import18.MdInputModule();
    this._MdListModule_22 = new import19.MdListModule();
    this._MdMenuModule_23 = new import34.MdMenuModule();
    this._MdProgressBarModule_24 = new import20.MdProgressBarModule();
    this._MdProgressSpinnerModule_25 = new import21.MdProgressSpinnerModule();
    this._MdRadioModule_26 = new import35.MdRadioModule();
    this._MdSelectModule_27 = new import22.MdSelectModule();
    this._MdSidenavModule_28 = new import24.MdSidenavModule();
    this._MdSliderModule_29 = new import36.MdSliderModule();
    this._MdSlideToggleModule_30 = new import37.MdSlideToggleModule();
    this._MdSnackBarModule_31 = new import38.MdSnackBarModule();
    this._ObserveContentModule_32 = new import25.ObserveContentModule();
    this._MdTabsModule_33 = new import26.MdTabsModule();
    this._MdToolbarModule_34 = new import27.MdToolbarModule();
    this._MdTooltipModule_35 = new import39.MdTooltipModule();
    this._RtlModule_36 = new import29.RtlModule();
    this._StyleModule_37 = new import40.StyleModule();
    this._ProjectionModule_38 = new import28.ProjectionModule();
    this._MaterialModule_39 = new import1.MaterialModule();
    return this._MaterialModule_39;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CompatibilityModule)) { return this._CompatibilityModule_0; }
    if ((token === import3.MdRippleModule)) { return this._MdRippleModule_1; }
    if ((token === import4.CommonModule)) { return this._CommonModule_2; }
    if ((token === import5.MdOptionModule)) { return this._MdOptionModule_3; }
    if ((token === import6.PortalModule)) { return this._PortalModule_4; }
    if ((token === import7.OverlayModule)) { return this._OverlayModule_5; }
    if ((token === import8.MdAutocompleteModule)) { return this._MdAutocompleteModule_6; }
    if ((token === import9.MdButtonModule)) { return this._MdButtonModule_7; }
    if ((token === import15.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_8; }
    if ((token === import16.FormsModule)) { return this._FormsModule_9; }
    if ((token === import30.MdButtonToggleModule)) { return this._MdButtonToggleModule_10; }
    if ((token === import10.MdCardModule)) { return this._MdCardModule_11; }
    if ((token === import11.MdChipsModule)) { return this._MdChipsModule_12; }
    if ((token === import12.MdCheckboxModule)) { return this._MdCheckboxModule_13; }
    if ((token === import17.PlatformModule)) { return this._PlatformModule_14; }
    if ((token === import23.A11yModule)) { return this._A11yModule_15; }
    if ((token === import31.MdDialogModule)) { return this._MdDialogModule_16; }
    if ((token === import13.MdLineModule)) { return this._MdLineModule_17; }
    if ((token === import14.MdGridListModule)) { return this._MdGridListModule_18; }
    if ((token === import32.HttpModule)) { return this._HttpModule_19; }
    if ((token === import33.MdIconModule)) { return this._MdIconModule_20; }
    if ((token === import18.MdInputModule)) { return this._MdInputModule_21; }
    if ((token === import19.MdListModule)) { return this._MdListModule_22; }
    if ((token === import34.MdMenuModule)) { return this._MdMenuModule_23; }
    if ((token === import20.MdProgressBarModule)) { return this._MdProgressBarModule_24; }
    if ((token === import21.MdProgressSpinnerModule)) { return this._MdProgressSpinnerModule_25; }
    if ((token === import35.MdRadioModule)) { return this._MdRadioModule_26; }
    if ((token === import22.MdSelectModule)) { return this._MdSelectModule_27; }
    if ((token === import24.MdSidenavModule)) { return this._MdSidenavModule_28; }
    if ((token === import36.MdSliderModule)) { return this._MdSliderModule_29; }
    if ((token === import37.MdSlideToggleModule)) { return this._MdSlideToggleModule_30; }
    if ((token === import38.MdSnackBarModule)) { return this._MdSnackBarModule_31; }
    if ((token === import25.ObserveContentModule)) { return this._ObserveContentModule_32; }
    if ((token === import26.MdTabsModule)) { return this._MdTabsModule_33; }
    if ((token === import27.MdToolbarModule)) { return this._MdToolbarModule_34; }
    if ((token === import39.MdTooltipModule)) { return this._MdTooltipModule_35; }
    if ((token === import29.RtlModule)) { return this._RtlModule_36; }
    if ((token === import40.StyleModule)) { return this._StyleModule_37; }
    if ((token === import28.ProjectionModule)) { return this._ProjectionModule_38; }
    if ((token === import1.MaterialModule)) { return this._MaterialModule_39; }
    if ((token === import59.ScrollDispatcher)) { return this._ScrollDispatcher_40; }
    if ((token === import60.ViewportRuler)) { return this._ViewportRuler_41; }
    if ((token === import41.NgLocalization)) { return this._NgLocalization_42; }
    if ((token === import62.OverlayContainer)) { return this._OverlayContainer_43; }
    if ((token === import42.OverlayPositionBuilder)) { return this._OverlayPositionBuilder_44; }
    if ((token === import43.Overlay)) { return this._Overlay_45; }
    if ((token === import44.RadioControlRegistry)) { return this._RadioControlRegistry_46; }
    if ((token === import66.UniqueSelectionDispatcher)) { return this._UniqueSelectionDispatcher_47; }
    if ((token === import45.Platform)) { return this._Platform_48; }
    if ((token === import46.InteractivityChecker)) { return this._InteractivityChecker_49; }
    if ((token === import65.LiveAnnouncer)) { return this._LiveAnnouncer_50; }
    if ((token === import47.MdDialog)) { return this._MdDialog_51; }
    if ((token === import48.BrowserXhr)) { return this._BrowserXhr_52; }
    if ((token === import49.ResponseOptions)) { return this._ResponseOptions_53; }
    if ((token === import70.XSRFStrategy)) { return this._XSRFStrategy_54; }
    if ((token === import50.XHRBackend)) { return this._XHRBackend_55; }
    if ((token === import51.RequestOptions)) { return this._RequestOptions_56; }
    if ((token === import71.Http)) { return this._Http_57; }
    if ((token === import67.MdIconRegistry)) { return this._MdIconRegistry_58; }
    if ((token === import72.HAMMER_GESTURE_CONFIG)) { return this._HAMMER_GESTURE_CONFIG_59; }
    if ((token === import53.MdSnackBar)) { return this._MdSnackBar_60; }
    if ((token === import69.FocusOriginMonitor)) { return this._FocusOriginMonitor_61; }
    if ((token === import28.DomProjection)) { return this._DomProjection_62; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MaterialModuleNgFactory:import0.NgModuleFactory<import1.MaterialModule> = new import0.NgModuleFactory(MaterialModuleInjector,import1.MaterialModule);