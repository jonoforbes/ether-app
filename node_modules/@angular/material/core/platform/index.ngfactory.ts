/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/core/platform/index';
import * as import2 from '@angular/material/core/platform/platform';
import * as import3 from '@angular/core/src/di/injector';
class PlatformModuleInjector extends import0.NgModuleInjector<import1.PlatformModule> {
  _PlatformModule_0:import1.PlatformModule;
  __Platform_1:import2.Platform;
  constructor(parent:import3.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _Platform_1():import2.Platform {
    if ((this.__Platform_1 == null)) { (this.__Platform_1 = new import2.Platform()); }
    return this.__Platform_1;
  }
  createInternal():import1.PlatformModule {
    this._PlatformModule_0 = new import1.PlatformModule();
    return this._PlatformModule_0;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import1.PlatformModule)) { return this._PlatformModule_0; }
    if ((token === import2.Platform)) { return this._Platform_1; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const PlatformModuleNgFactory:import0.NgModuleFactory<import1.PlatformModule> = new import0.NgModuleFactory(PlatformModuleInjector,import1.PlatformModule);