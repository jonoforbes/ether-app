/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/material/menu/menu-directive';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/query_list';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/change_detection/constants';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from './menu.css.ngstyle';
import * as import12 from '@angular/core/src/animation/animation_transition';
import * as import13 from '@angular/core/src/animation/animation_sequence_player';
import * as import14 from '@angular/core/src/animation/animation_styles';
import * as import15 from '@angular/core/src/animation/animation_style_util';
import * as import16 from '@angular/core/src/animation/animation_keyframe';
import * as import17 from '@angular/core/src/animation/animation_player';
import * as import18 from '@angular/common/src/directives/ng_class';
import * as import19 from '../../common/src/directives/ng_class.ngfactory';
import * as import20 from '@angular/core/src/linker/view_container';
import * as import21 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import22 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import23 from '@angular/core/src/linker/element_ref';
import * as import24 from '@angular/core/src/linker/template_ref';
export class Wrapper_MdMenu {
  /*private*/ _eventHandler:Function;
  context:import0.MdMenu;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  subscription0:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.MdMenu(p0,p1);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_overlapTrigger(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.overlapTrigger = currValue;
      this._expr_0 = currValue;
    }
  }
  check_classList(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.classList = currValue;
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.close.subscribe(_eventHandler.bind(view,'close'))); }
  }
}
const nodeDebugInfos_MdMenu_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import0.MdMenu],import0.MdMenu,{})];
var renderType_MdMenu_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_MdMenu_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.MdMenu>;
  _MdMenu_0_3:Wrapper_MdMenu;
  _query_MdMenuItem_0_0:import7.QueryList<any>;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdMenu_Host0,renderType_MdMenu_Host,import8.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdMenu_Host0);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'md-menu',new import3.InlineArray2(2,'role','menu'),rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdMenu0(this.viewUtils,this,0,this._el_0);
    this._MdMenu_0_3 = new Wrapper_MdMenu((null as any),(null as any));
    this._query_MdMenuItem_0_0 = new import7.QueryList<any>();
    this.compView_0.create(this._MdMenu_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import10.ComponentRef_<any>(0,this,this._el_0,this._MdMenu_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MdMenu) && (0 === requestNodeIndex))) { return this._MdMenu_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdMenu_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdMenuItem_0_0.dirty) {
        this._query_MdMenuItem_0_0.reset(([] as any[]));
        this._MdMenu_0_3.context.items = this._query_MdMenuItem_0_0;
        this._query_MdMenuItem_0_0.notifyOnChanges();
      }
      this.debug(0,0,0);
      if ((this.numberOfChecks === 0)) { this._MdMenu_0_3.context.ngAfterContentInit(); }
    }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdMenu_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const MdMenuNgFactory:import10.ComponentFactory<import0.MdMenu> = new import10.ComponentFactory<import0.MdMenu>('md-menu, mat-menu',View_MdMenu_Host0,import0.MdMenu);
const styles_MdMenu:any[] = [import11.styles];
var MdMenu_transformMenu_states:any = {
  'showing': {
    'opacity': '1',
    'transform': 'scale(1)'
  }
  ,
  '*': {},
  'void': {}
}
;
function MdMenu_transformMenu_factory(view:import2.AppView<any>,element:any,currentState:any,nextState:any):import12.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,((nextState == 'void')? (null as any): 'transformMenu'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = MdMenu_transformMenu_states['*'];
  var startStateStyles:any = MdMenu_transformMenu_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = MdMenu_transformMenu_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && ((currentState == 'void') && true))) {
      player = new import13.AnimationSequencePlayer([view.renderer.animate(element,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {
          'opacity': '0',
          'transform': 'scale(0)'
        }

      ]
      )),import15.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import16.AnimationKeyframe(0,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}]))),
        new import16.AnimationKeyframe(1,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),200,0,'cubic-bezier(0.25, 0.8, 0.25, 1)',previousPlayers)]);
    totalTime = 200;
  }
  if (((player == (null as any)) && (true && (nextState == 'void')))) {
      player = new import13.AnimationSequencePlayer([view.renderer.animate(element,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import16.AnimationKeyframe(0,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{'opacity': 'true'}]))),
        new import16.AnimationKeyframe(1,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{'opacity': '0'}])))
      ]
    ,50,100,'linear',previousPlayers)]);
    totalTime = 150;
  }
  if ((player == (null as any))) { (player = new import17.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import15.renderStyles(element,view.renderer,import15.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import13.AnimationSequencePlayer(previousPlayers).destroy();
  import15.renderStyles(element,view.renderer,import15.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'transformMenu',player);
  return new import12.AnimationTransition(player,currentState,nextState,totalTime);
}
var MdMenu_fadeInItems_states:any = {
  'showing': {'opacity': '1'},
  '*': {},
  'void': {}
}
;
function MdMenu_fadeInItems_factory(view:import2.AppView<any>,element:any,currentState:any,nextState:any):import12.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,((nextState == 'void')? (null as any): 'fadeInItems'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = MdMenu_fadeInItems_states['*'];
  var startStateStyles:any = MdMenu_fadeInItems_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = MdMenu_fadeInItems_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && ((currentState == 'void') && true))) {
      player = new import13.AnimationSequencePlayer([view.renderer.animate(element,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {'opacity': '0'}
      ]
      )),import15.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import16.AnimationKeyframe(0,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}]))),
        new import16.AnimationKeyframe(1,new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),200,100,'cubic-bezier(0.55, 0, 0.55, 0.2)',previousPlayers)]);
    totalTime = 300;
  }
  if ((player == (null as any))) { (player = new import17.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import15.renderStyles(element,view.renderer,import15.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import13.AnimationSequencePlayer(previousPlayers).destroy();
  import15.renderStyles(element,view.renderer,import15.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'fadeInItems',player);
  return new import12.AnimationTransition(player,currentState,nextState,totalTime);
}
const nodeDebugInfos_MdMenu1:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo([import18.NgClass],(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_MdMenu1 extends import2.DebugAppView<any> {
  _el_0:any;
  _NgClass_0_3:import19.Wrapper_NgClass;
  _el_1:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import20.ViewContainer) {
    super(View_MdMenu1,renderType_MdMenu,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdMenu1,declaredViewContainer);
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','mat-menu-panel'),this.debug(0,0,10));
    this._NgClass_0_3 = new import19.Wrapper_NgClass(this.parentView.injectorGet(import21.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import22.KeyValueDiffers,this.parentIndex),new import23.ElementRef(this._el_0),this.renderer);
    this._el_1 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','mat-menu-content'),this.debug(1,0,160));
    this.debug((null as any),0,217);
    this.projectNodes(this._el_1,0);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'keydown',(null as any),'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgClass_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3:any = 'showing';
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      var animationTransition_transformMenu:any = this.componentType.animations['transformMenu'](this,this._el_0,((this._expr_3 == import1.UNINITIALIZED)? 'void': this._expr_3),((currVal_3 == import1.UNINITIALIZED)? 'void': currVal_3));
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = 'showing';
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      var animationTransition_fadeInItems:any = this.componentType.animations['fadeInItems'](this,this._el_1,((this._expr_4 == import1.UNINITIALIZED)? 'void': this._expr_4),((currVal_4 == import1.UNINITIALIZED)? 'void': currVal_4));
      this._expr_4 = currVal_4;
    }
    this.debug(0,0,15);
    const currVal_0_0_0:any = 'mat-menu-panel';
    this._NgClass_0_3.check_klass(currVal_0_0_0,throwOnChange,false);
    this.debug(0,0,38);
    const currVal_0_0_1:any = this.parentView.context._classList;
    this._NgClass_0_3.check_ngClass(currVal_0_0_1,throwOnChange,false);
    this._NgClass_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.debug(0,0,131);
  }
  detachInternal():void {
    var animationTransition_transformMenu:any = this.componentType.animations['transformMenu'](this,this._el_0,this._expr_3,'void');
    var animationTransition_fadeInItems:any = this.componentType.animations['fadeInItems'](this,this._el_1,this._expr_4,'void');
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,10);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'keydown')) {
      const pd_sub_0:any = ((<any>this.parentView.context._keyManager.onKeydown($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'click')) {
      const pd_sub_1:any = ((<any>this.parentView.context._emitCloseEvent()) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
const nodeDebugInfos_MdMenu0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import24.TemplateRef],(null as any),{})];
var renderType_MdMenu:import5.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/node_modules/@angular/material/menu/menu.html',1,import6.ViewEncapsulation.None,styles_MdMenu,{
  'transformMenu': MdMenu_transformMenu_factory,
  'fadeInItems': MdMenu_fadeInItems_factory
}
);
export class View_MdMenu0 extends import2.DebugAppView<import0.MdMenu> {
  _viewQuery_TemplateRef_0:import7.QueryList<any>;
  _anchor_0:any;
  /*private*/ _vc_0:import20.ViewContainer;
  _TemplateRef_0_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdMenu0,renderType_MdMenu,import8.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdMenu0);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_TemplateRef_0 = new import7.QueryList<any>();
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,this.debug(0,0,0));
    this._vc_0 = new import20.ViewContainer(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_4 = new import24.TemplateRef_(this,0,this._anchor_0);
    this._viewQuery_TemplateRef_0.reset([this._TemplateRef_0_4]);
    this.context.templateRef = this._viewQuery_TemplateRef_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [this._anchor_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import24.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._vc_0.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 0)) { return new View_MdMenu1(this.viewUtils,this,0,this._anchor_0,this._vc_0); }
    return (null as any);
  }
}