/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from 'ng2-date-picker/dp-day-picker/dp-day-picker.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from 'ng2-date-picker/dp-calendar/calendar.service';
import * as import6 from 'ng2-date-picker/dp-day-picker/day-picker.service';
import * as import7 from '@angular/forms/src/directives/control_value_accessor';
import * as import8 from '@angular/forms/src/validators';
import * as import9 from '@angular/core/src/render/api';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/view_type';
import * as import12 from '@angular/core/src/change_detection/constants';
import * as import13 from '@angular/core/src/linker/component_factory';
import * as import14 from 'ng2-date-picker/common/services/utils/utils.service';
import * as import15 from 'ng2-date-picker/common/services/dom-appender/dom-appender.service';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@angular/core/src/linker/view_container';
import * as import18 from '@angular/forms/src/directives/default_value_accessor';
import * as import19 from '@angular/forms/src/directives/ng_model';
import * as import20 from '@angular/forms/src/directives/ng_control';
import * as import21 from '@angular/forms/src/directives/ng_control_status';
import * as import22 from '@angular/core/src/linker/template_ref';
import * as import23 from '@angular/common/src/directives/ng_if';
import * as import24 from 'ng2-date-picker/dp-calendar/dp-calendar.component';
import * as import25 from '@angular/core/src/linker/query_list';
import * as import26 from '../../@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import27 from '../../@angular/forms/src/directives/ng_model.ngfactory';
import * as import28 from '../../@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import29 from '../../@angular/common/src/directives/ng_if.ngfactory';
import * as import30 from '../dp-calendar/dp-calendar.component.ngfactory';
export class Wrapper_DpDayPickerComponent {
  /*private*/ _eventHandler:Function;
  context:import0.DpDayPickerComponent;
  /*private*/ _changed:boolean;
  /*private*/ _changes:{[key: string]:any};
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  constructor(p0:any,p1:any,p2:any,p3:any,p4:any) {
    this._changed = false;
    this._changes = {};
    this.context = new import0.DpDayPickerComponent(p0,p1,p2,p3,p4);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  check_userConfig(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.userConfig = currValue;
      this._changes['userConfig'] = new import1.SimpleChange(this._expr_0,currValue);
      this._expr_0 = currValue;
    }
  }
  check_placeholder(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.placeholder = currValue;
      this._changes['placeholder'] = new import1.SimpleChange(this._expr_1,currValue);
      this._expr_1 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._changes['disabled'] = new import1.SimpleChange(this._expr_2,currValue);
      this._expr_2 = currValue;
    }
  }
  check_theme(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.theme = currValue;
      this._changes['theme'] = new import1.SimpleChange(this._expr_3,currValue);
      this._expr_3 = currValue;
    }
  }
  check_minDate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.minDate = currValue;
      this._changes['minDate'] = new import1.SimpleChange(this._expr_4,currValue);
      this._expr_4 = currValue;
    }
  }
  check_maxDate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.maxDate = currValue;
      this._changes['maxDate'] = new import1.SimpleChange(this._expr_5,currValue);
      this._expr_5 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) {
      if (changed) {
        this.context.ngOnChanges(this._changes);
        this._changes = {};
      }
      if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); }
    }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.onClick()) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'document:click')) {
      const pd_sub_1:any = ((<any>this.context.onBodyClick()) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'document:scroll')) {
      const pd_sub_2:any = ((<any>this.context.onScroll()) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'window:resize')) {
      const pd_sub_3:any = ((<any>this.context.onScroll()) !== false);
      result = (pd_sub_3 && result);
    }
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
  const nodeDebugInfos_DpDayPickerComponent_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([
    import5.CalendarService,
    import6.DayPickerService,
    import0.DpDayPickerComponent,
    import7.NG_VALUE_ACCESSOR,
    import8.NG_VALIDATORS
  ]
,import0.DpDayPickerComponent,{})];
var renderType_DpDayPickerComponent_Host:import9.RenderComponentType = import3.createRenderComponentType('',0,import10.ViewEncapsulation.None,([] as any[]),{});
class View_DpDayPickerComponent_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.DpDayPickerComponent>;
  _CalendarService_0_3:import5.CalendarService;
  _DayPickerService_0_4:import6.DayPickerService;
  _DpDayPickerComponent_0_5:Wrapper_DpDayPickerComponent;
  __NG_VALUE_ACCESSOR_0_6:any[];
  __NG_VALIDATORS_0_7:any[];
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DpDayPickerComponent_Host0,renderType_DpDayPickerComponent_Host,import11.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import12.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_DpDayPickerComponent_Host0);
  }
  get _NG_VALUE_ACCESSOR_0_6():any[] {
    this.debug(0,0,0);
    if ((this.__NG_VALUE_ACCESSOR_0_6 == null)) { (this.__NG_VALUE_ACCESSOR_0_6 = [this._DpDayPickerComponent_0_5.context]); }
    return this.__NG_VALUE_ACCESSOR_0_6;
  }
  get _NG_VALIDATORS_0_7():any[] {
    this.debug(0,0,0);
    if ((this.__NG_VALIDATORS_0_7 == null)) { (this.__NG_VALIDATORS_0_7 = [this._DpDayPickerComponent_0_5.context]); }
    return this.__NG_VALIDATORS_0_7;
  }
  createInternal(rootSelector:string):import13.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'dp-day-picker',import3.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_DpDayPickerComponent0(this.viewUtils,this,0,this._el_0);
    this._CalendarService_0_3 = new import5.CalendarService(this.injectorGet(import14.UtilsService,this.parentIndex));
    this._DayPickerService_0_4 = new import6.DayPickerService(this._CalendarService_0_3,this.injectorGet(import14.UtilsService,this.parentIndex));
    this._DpDayPickerComponent_0_5 = new Wrapper_DpDayPickerComponent(this._DayPickerService_0_4,this.injectorGet(import15.DomHelper,this.parentIndex),new import16.ElementRef(this._el_0),this.renderer,this.injectorGet(import14.UtilsService,this.parentIndex));
    this.compView_0.create(this._DpDayPickerComponent_0_5.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray8(8,'click',(null as any),'click','document','scroll','document','resize','window'),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return new import13.ComponentRef_<any>(0,this,this._el_0,this._DpDayPickerComponent_0_5.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.CalendarService) && (0 === requestNodeIndex))) { return this._CalendarService_0_3; }
    if (((token === import6.DayPickerService) && (0 === requestNodeIndex))) { return this._DayPickerService_0_4; }
    if (((token === import0.DpDayPickerComponent) && (0 === requestNodeIndex))) { return this._DpDayPickerComponent_0_5.context; }
    if (((token === import7.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_6; }
    if (((token === import8.NG_VALIDATORS) && (0 === requestNodeIndex))) { return this._NG_VALIDATORS_0_7; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._DpDayPickerComponent_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) {
      this.debug(0,0,0);
      if ((this.numberOfChecks === 0)) { this._DpDayPickerComponent_0_5.context.ngAfterViewInit(); }
    }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._DpDayPickerComponent_0_5.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DpDayPickerComponent_0_5.handleEvent(eventName,$event) && result);
    return result;
  }
}
export const DpDayPickerComponentNgFactory:import13.ComponentFactory<import0.DpDayPickerComponent> = new import13.ComponentFactory<import0.DpDayPickerComponent>('dp-day-picker',View_DpDayPickerComponent_Host0,import0.DpDayPickerComponent);
const styles_DpDayPickerComponent:any[] = ['[_nghost-%COMP%] {  display: inline-block;}.dp-material[_ngcontent-%COMP%]   .dp-daypicker-input[_ngcontent-%COMP%] {  box-sizing: border-box;  height: 30px;  width: 212px;  font-size: 13px;  outline: none;}.dp-material[_ngcontent-%COMP%]   .dp-current-location-btn[_ngcontent-%COMP%] {  top: calc(50% - 9px);  right: 5px;  height: 18px;  width: 18px;  border: 2px solid rgba(0, 0, 0, 0.6);}.dp-input-container[_ngcontent-%COMP%] {  position: relative;}.dp-popup[_ngcontent-%COMP%] {  position: relative;  background: #FFFFFF;  box-shadow: 1px 1px 5px 0 rgba(0, 0, 0, 0.1);  border-left: 1px solid rgba(0, 0, 0, 0.1);  border-right: 1px solid rgba(0, 0, 0, 0.1);  border-bottom: 1px solid rgba(0, 0, 0, 0.1);  z-index: 9999;  white-space: nowrap;}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar .dp-calendar-container {  background: #FFFFFF;}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar .dp-calendar-container:not(:first-of-type) {  border-left: 1px solid #B0AFAF;}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar .dp-calendar-nav-container {  height: 30px;  border: none;}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar .dp-calendar-nav-left, .dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar .dp-calendar-nav-right {  border: none;  background: #FFFFFF;  outline: none;  font-size: 16px;}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar .dp-nav-header-btn {  height: 20px;  width: 80px;  border: none;  background: #FFFFFF;  outline: none;}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar .dp-nav-header-btn:hover {  background: rgba(0, 0, 0, 0.05);}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar .dp-nav-header-btn:active {  background: rgba(0, 0, 0, 0.1);}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-month-calendar .dp-calendar-weekday, .dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-day-calendar .dp-calendar-weekday {  height: 25px;  width: 30px;  line-height: 25px;  background: #E0E0E0;  border: none;}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-month-calendar .dp-calendar-wrapper, .dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-day-calendar .dp-calendar-wrapper {  border: none;}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-month-calendar .dp-calendar-month, .dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-day-calendar .dp-calendar-month, .dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-month-calendar .dp-calendar-day, .dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-day-calendar .dp-calendar-day {  box-sizing: border-box;  background: #FFFFFF;  border-radius: 50%;  border: none;  outline: none;}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-month-calendar .dp-calendar-month:hover, .dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-day-calendar .dp-calendar-month:hover, .dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-month-calendar .dp-calendar-day:hover, .dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-day-calendar .dp-calendar-day:hover {  background: #E0E0E0;}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-month-calendar .dp-selected, .dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-day-calendar .dp-selected {  background: #106CC8;  color: #FFFFFF;}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-month-calendar .dp-selected:hover, .dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-day-calendar .dp-selected:hover {  background: #106CC8;}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-month-calendar .dp-current-day, .dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-day-calendar .dp-current-day {  border: 1px solid #106CC8;}.dp-popup.dp-material[_ngcontent-%COMP%]     dp-calendar   dp-month-calendar .dp-current-month {  border: 1px solid #106CC8;}.dp-selected[_ngcontent-%COMP%] {  background: #106CC8;  color: #FFFFFF;}.dp-current-location-btn[_ngcontent-%COMP%] {  position: absolute;  top: calc(50% - 7px);  right: 5px;  height: 14px;  width: 13px;  background: rgba(0, 0, 0, 0.6);  border: 1px solid rgba(0, 0, 0, 0.6);  outline: none;  border-radius: 50%;  box-shadow: inset 0 0 0 3px #FFFFFF;  cursor: pointer;}.dp-current-location-btn[_ngcontent-%COMP%]:hover {  background: #000000;}'];
const nodeDebugInfos_DpDayPickerComponent1:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_DpDayPickerComponent1 extends import2.DebugAppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import17.ViewContainer) {
    super(View_DpDayPickerComponent1,renderType_DpDayPickerComponent,import11.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import12.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_DpDayPickerComponent1,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import13.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'button',new import3.InlineArray2(2,'class','dp-current-location-btn'),this.debug(0,0,362));
    this._text_1 = this.renderer.createText(this._el_0,'     ',this.debug(1,0,532));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,501);
    const currVal_2:boolean = !this.parentView.context._areCalendarsShown;
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementProperty(this._el_0,'hidden',currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,362);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.moveToCurrent()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
const nodeDebugInfos_DpDayPickerComponent0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import18.DefaultValueAccessor,
    import7.NG_VALUE_ACCESSOR,
    import19.NgModel,
    import20.NgControl,
    import21.NgControlStatus
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import22.TemplateRef,
    import23.NgIf
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{container: (null as any)}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import5.CalendarService,
    import24.CalendarComponent
  ]
  ,import24.CalendarComponent,{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_DpDayPickerComponent:import9.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/winecellar/node_modules/ng2-date-picker/dp-day-picker/dp-day-picker.component.d.ts class DpDayPickerComponent - inline template',0,import10.ViewEncapsulation.Emulated,styles_DpDayPickerComponent,{});
export class View_DpDayPickerComponent0 extends import2.DebugAppView<import0.DpDayPickerComponent> {
  _viewQuery_container_0:import25.QueryList<any>;
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _DefaultValueAccessor_4_3:import26.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_4_4:any[];
  _NgModel_4_5:import27.Wrapper_NgModel;
  _NgControl_4_6:any;
  _NgControlStatus_4_7:import28.Wrapper_NgControlStatus;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _vc_6:import17.ViewContainer;
  _TemplateRef_6_5:any;
  _NgIf_6_6:import29.Wrapper_NgIf;
  _text_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _el_11:any;
  _text_12:any;
  _el_13:any;
  compView_13:import2.AppView<import24.CalendarComponent>;
  _CalendarService_13_3:import5.CalendarService;
  _CalendarComponent_13_4:import30.Wrapper_CalendarComponent;
  _text_14:any;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  _text_18:any;
  /*private*/ _expr_31:any;
  /*private*/ _expr_32:any;
  /*private*/ _expr_33:any;
  /*private*/ _expr_34:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DpDayPickerComponent0,renderType_DpDayPickerComponent,import11.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import12.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_DpDayPickerComponent0);
    this._expr_31 = import1.UNINITIALIZED;
    this._expr_32 = import1.UNINITIALIZED;
    this._expr_33 = import1.UNINITIALIZED;
    this._expr_34 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import13.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_container_0 = new import25.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,this.debug(0,0,0));
    this._text_1 = this.renderer.createText(this._el_0,'   ',this.debug(1,0,23));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','dp-input-container'),this.debug(2,0,26));
    this._text_3 = this.renderer.createText(this._el_2,'     ',this.debug(3,0,58));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'input',new import3.InlineArray4(4,'class','dp-daypicker-input','type','text'),this.debug(4,0,63));
    this._DefaultValueAccessor_4_3 = new import26.Wrapper_DefaultValueAccessor(this.renderer,new import16.ElementRef(this._el_4));
    this._NG_VALUE_ACCESSOR_4_4 = [this._DefaultValueAccessor_4_3.context];
    this._NgModel_4_5 = new import27.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_4_4);
    this._NgControl_4_6 = this._NgModel_4_5.context;
    this._NgControlStatus_4_7 = new import28.Wrapper_NgControlStatus(this._NgControl_4_6);
    this._text_5 = this.renderer.createText(this._el_2,'     ',this.debug(5,0,357));
    this._anchor_6 = this.renderer.createTemplateAnchor(this._el_2,this.debug(6,0,362));
    this._vc_6 = new import17.ViewContainer(6,2,this,this._anchor_6);
    this._TemplateRef_6_5 = new import22.TemplateRef_(this,6,this._anchor_6);
    this._NgIf_6_6 = new import29.Wrapper_NgIf(this._vc_6.vcRef,this._TemplateRef_6_5);
    this._text_7 = this.renderer.createText(this._el_2,'   ',this.debug(7,0,546));
    this._text_8 = this.renderer.createText(this._el_0,'   ',this.debug(8,0,555));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_0,'div',import3.EMPTY_INLINE_ARRAY,this.debug(9,0,558));
    this._text_10 = this.renderer.createText(this._el_9,'     ',this.debug(10,0,574));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_9,'div',import3.EMPTY_INLINE_ARRAY,this.debug(11,0,579));
    this._text_12 = this.renderer.createText(this._el_11,'       ',this.debug(12,0,642));
    this._el_13 = import3.createRenderElement(this.renderer,this._el_11,'dp-calendar',import3.EMPTY_INLINE_ARRAY,this.debug(13,0,649));
    this.compView_13 = new import30.View_CalendarComponent0(this.viewUtils,this,13,this._el_13);
    this._CalendarService_13_3 = new import5.CalendarService(this.parentView.injectorGet(import14.UtilsService,this.parentIndex));
    this._CalendarComponent_13_4 = new import30.Wrapper_CalendarComponent(this.parentView.injectorGet(import6.DayPickerService,this.parentIndex),this._CalendarService_13_3);
    this._text_14 = this.renderer.createText((null as any),'       ',this.debug(14,0,809));
    this.compView_13.create(this._CalendarComponent_13_4.context);
    this._text_15 = this.renderer.createText(this._el_11,'     ',this.debug(15,0,830));
    this._text_16 = this.renderer.createText(this._el_9,'   ',this.debug(16,0,841));
    this._text_17 = this.renderer.createText(this._el_0,' ',this.debug(17,0,850));
    this._text_18 = this.renderer.createText(parentRenderNode,' ',this.debug(18,0,857));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray16(10,'ngModelChange',(null as any),'focus',(null as any),'keydown',(null as any),'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_4));
    this._NgModel_4_5.subscribe(this,this.eventHandler(this.handleEvent_4),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_13,new import3.InlineArray4(4,'selectedChange',(null as any),'dayClick',(null as any)),this.eventHandler(this.handleEvent_13));
    this._CalendarComponent_13_4.subscribe(this,this.eventHandler(this.handleEvent_13),true,true,false,false);
    this._viewQuery_container_0.reset([new import16.ElementRef(this._el_9)]);
    this.context.calendarContainer = this._viewQuery_container_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._anchor_6,
      this._text_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._text_15,
      this._text_16,
      this._text_17,
      this._text_18
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.DefaultValueAccessor) && (4 === requestNodeIndex))) { return this._DefaultValueAccessor_4_3.context; }
    if (((token === import7.NG_VALUE_ACCESSOR) && (4 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_4_4; }
    if (((token === import19.NgModel) && (4 === requestNodeIndex))) { return this._NgModel_4_5.context; }
    if (((token === import20.NgControl) && (4 === requestNodeIndex))) { return this._NgControl_4_6; }
    if (((token === import21.NgControlStatus) && (4 === requestNodeIndex))) { return this._NgControlStatus_4_7.context; }
    if (((token === import22.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import23.NgIf) && (6 === requestNodeIndex))) { return this._NgIf_6_6.context; }
    if (((token === import5.CalendarService) && ((13 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._CalendarService_13_3; }
    if (((token === import24.CalendarComponent) && ((13 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._CalendarComponent_13_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(4,0,63);
    this._DefaultValueAccessor_4_3.ngDoCheck(this,this._el_4,throwOnChange);
    this.debug(4,0,334);
    const currVal_4_1_0:any = this.context.disabled;
    this._NgModel_4_5.check_isDisabled(currVal_4_1_0,throwOnChange,false);
    this.debug(4,0,170);
    const currVal_4_1_1:any = this.context.viewValue;
    this._NgModel_4_5.check_model(currVal_4_1_1,throwOnChange,false);
    this._NgModel_4_5.ngDoCheck(this,this._el_4,throwOnChange);
    this.debug(4,0,63);
    this._NgControlStatus_4_7.ngDoCheck(this,this._el_4,throwOnChange);
    this.debug(6,0,414);
    const currVal_6_0_0:any = this.context.pickerConfig.showGoToCurrent;
    this._NgIf_6_6.check_ngIf(currVal_6_0_0,throwOnChange,false);
    this._NgIf_6_6.ngDoCheck(this,this._anchor_6,throwOnChange);
    this.debug(13,0,662);
    const currVal_13_0_0:any = this.context.value;
    this._CalendarComponent_13_4.check_selected(currVal_13_0_0,throwOnChange,false);
    this.debug(13,0,702);
    const currVal_13_0_1:any = this.context.pickerConfig;
    this._CalendarComponent_13_4.check_config(currVal_13_0_1,throwOnChange,false);
    this.debug(13,0,745);
    const currVal_13_0_2:any = this.context.openOn;
    this._CalendarComponent_13_4.check_openOn(currVal_13_0_2,throwOnChange,false);
    this._CalendarComponent_13_4.ngDoCheck(this,this._el_13,throwOnChange);
    this._vc_6.detectChangesInNestedViews(throwOnChange);
    this.debug(0,0,5);
    const currVal_31:any = import3.inlineInterpolate(1,'',this.context.theme,'');
    if (import3.checkBinding(throwOnChange,this._expr_31,currVal_31)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_31);
      this._expr_31 = currVal_31;
    }
    this.debug(4,0,131);
    const currVal_32:any = this.context.placeholder;
    if (import3.checkBinding(throwOnChange,this._expr_32,currVal_32)) {
      this.renderer.setElementProperty(this._el_4,'placeholder',currVal_32);
      this._expr_32 = currVal_32;
    }
    this._NgControlStatus_4_7.checkHost(this,this,this._el_4,throwOnChange);
    this.debug(11,0,584);
    const currVal_33:any = import3.inlineInterpolate(1,'dp-popup ',this.context.theme,'');
    if (import3.checkBinding(throwOnChange,this._expr_33,currVal_33)) {
      this.renderer.setElementProperty(this._el_11,'className',currVal_33);
      this._expr_33 = currVal_33;
    }
    this.debug(11,0,611);
    const currVal_34:boolean = !this.context._areCalendarsShown;
    if (import3.checkBinding(throwOnChange,this._expr_34,currVal_34)) {
      this.renderer.setElementProperty(this._el_11,'hidden',currVal_34);
      this._expr_34 = currVal_34;
    }
    this._CalendarComponent_13_4.checkHost(this,this.compView_13,this._el_13,throwOnChange);
    this.compView_13.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_6.destroyNestedViews();
    this.compView_13.destroy();
    this._NgModel_4_5.ngOnDestroy();
    this.debug(4,0,63);
    this.debug(6,0,362);
    this._CalendarComponent_13_4.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 6)) { return new View_DpDayPickerComponent1(this.viewUtils,this,6,this._anchor_6,this._vc_6); }
    return (null as any);
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.debug(4,0,63);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_4_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>this.context.onViewDateChange($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'focus')) {
      const pd_sub_1:any = ((<any>this.context.inputFocused()) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'keydown')) {
      const pd_sub_2:any = ((<any>this.context.onKeydown($event)) !== false);
      result = (pd_sub_2 && result);
    }
    return result;
  }
  handleEvent_13(eventName:string,$event:any):boolean {
    this.debug(13,0,649);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'selectedChange')) {
      const pd_sub_0:any = ((<any>(this.context.value = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'dayClick')) {
      const pd_sub_1:any = ((<any>this.context.daySelected()) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}