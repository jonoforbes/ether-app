import { Moment } from 'moment';
import { WeekDays } from '../common/types/week-days.type';
import { UtilsService } from '../common/services/utils/utils.service';
import { ICalendarDay } from './day.model';
import { ICalendarMonthConfig } from './day-calendar-config.model';
export declare class CalendarMonthService {
    private utilsService;
    readonly DAYS: string[];
    constructor(utilsService: UtilsService);
    generateDaysIndexMap(firstDayOfWeek: WeekDays): {
        [key: number]: string;
    };
    generateDaysMap(firstDayOfWeek: WeekDays): {
        [key: number]: string;
    };
    generateMonthArray(config: ICalendarMonthConfig, selectedDays?: Moment[]): ICalendarDay[][];
    private removeNearMonthWeeks(currentMonth, monthArray);
    generateWeekdays(firstDayOfWeek: WeekDays, weekdayNames: {
        [key: string]: string;
    }): string[];
    isDateDisabled(day: ICalendarDay, config: ICalendarMonthConfig): boolean;
}
