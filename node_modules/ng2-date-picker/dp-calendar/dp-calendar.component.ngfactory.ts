/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from 'ng2-date-picker/dp-calendar/dp-calendar.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from 'ng2-date-picker/dp-calendar/calendar.service';
import * as import6 from '@angular/core/src/render/api';
import * as import7 from '@angular/core/src/metadata/view';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/change_detection/constants';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from 'ng2-date-picker/common/services/utils/utils.service';
import * as import12 from 'ng2-date-picker/dp-day-picker/day-picker.service';
import * as import13 from '@angular/core/src/linker/view_container';
import * as import14 from 'ng2-date-picker/dp-day-calendar/day-calendar.service';
import * as import15 from 'ng2-date-picker/dp-day-calendar/dp-day-calendar.component';
import * as import16 from '../dp-day-calendar/dp-day-calendar.component.ngfactory';
import * as import17 from 'ng2-date-picker/dp-month-calendar/month-calendar.service';
import * as import18 from 'ng2-date-picker/dp-month-calendar/dp-month-calendar.component';
import * as import19 from '../dp-month-calendar/dp-month-calendar.component.ngfactory';
import * as import20 from '@angular/core/src/linker/template_ref';
import * as import21 from '@angular/common/src/directives/ng_if';
import * as import22 from '../../@angular/common/src/directives/ng_if.ngfactory';
import * as import23 from '@angular/common/src/directives/ng_for';
import * as import24 from '../../@angular/common/src/directives/ng_for.ngfactory';
import * as import25 from '@angular/core/src/change_detection/differs/iterable_differs';
export class Wrapper_CalendarComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CalendarComponent;
  /*private*/ _changed:boolean;
  /*private*/ _changes:{[key: string]:any};
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  subscription3:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this._changes = {};
    this.context = new import0.CalendarComponent(p0,p1);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
    (this.subscription3 && this.subscription3.unsubscribe());
  }
  check_selected(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.selected = currValue;
      this._changes['selected'] = new import1.SimpleChange(this._expr_0,currValue);
      this._expr_0 = currValue;
    }
  }
  check_config(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.config = currValue;
      this._changes['config'] = new import1.SimpleChange(this._expr_1,currValue);
      this._expr_1 = currValue;
    }
  }
  check_theme(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.theme = currValue;
      this._changes['theme'] = new import1.SimpleChange(this._expr_2,currValue);
      this._expr_2 = currValue;
    }
  }
  check_openOn(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.openOn = currValue;
      this._changes['openOn'] = new import1.SimpleChange(this._expr_3,currValue);
      this._expr_3 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) {
      if (changed) {
        this.context.ngOnChanges(this._changes);
        this._changes = {};
      }
      if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); }
    }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_4:any = this.context.themeClass;
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      view.renderer.setElementProperty(el,'className',currVal_4);
      this._expr_4 = currVal_4;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean,emit3:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.selectedChange.subscribe(_eventHandler.bind(view,'selectedChange'))); }
    if (emit1) { (this.subscription1 = this.context.dayClick.subscribe(_eventHandler.bind(view,'dayClick'))); }
    if (emit2) { (this.subscription2 = this.context.dayContextMenu.subscribe(_eventHandler.bind(view,'dayContextMenu'))); }
    if (emit3) { (this.subscription3 = this.context.calendarMove.subscribe(_eventHandler.bind(view,'calendarMove'))); }
  }
}
  const nodeDebugInfos_CalendarComponent_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([
    import5.CalendarService,
    import0.CalendarComponent
  ]
,import0.CalendarComponent,{})];
var renderType_CalendarComponent_Host:import6.RenderComponentType = import3.createRenderComponentType('',0,import7.ViewEncapsulation.None,([] as any[]),{});
class View_CalendarComponent_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CalendarComponent>;
  _CalendarService_0_3:import5.CalendarService;
  _CalendarComponent_0_4:Wrapper_CalendarComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CalendarComponent_Host0,renderType_CalendarComponent_Host,import8.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CalendarComponent_Host0);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'dp-calendar',import3.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_CalendarComponent0(this.viewUtils,this,0,this._el_0);
    this._CalendarService_0_3 = new import5.CalendarService(this.injectorGet(import11.UtilsService,this.parentIndex));
    this._CalendarComponent_0_4 = new Wrapper_CalendarComponent(this.injectorGet(import12.DayPickerService,this.parentIndex),this._CalendarService_0_3);
    this.compView_0.create(this._CalendarComponent_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import10.ComponentRef_<any>(0,this,this._el_0,this._CalendarComponent_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.CalendarService) && (0 === requestNodeIndex))) { return this._CalendarService_0_3; }
    if (((token === import0.CalendarComponent) && (0 === requestNodeIndex))) { return this._CalendarComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._CalendarComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this._CalendarComponent_0_4.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CalendarComponent_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const CalendarComponentNgFactory:import10.ComponentFactory<import0.CalendarComponent> = new import10.ComponentFactory<import0.CalendarComponent>('dp-calendar',View_CalendarComponent_Host0,import0.CalendarComponent);
const styles_CalendarComponent:any[] = ['.dp-calendar-container[_ngcontent-%COMP%] {  display: inline-block;  vertical-align: top;}.dp-calendar-nav-container[_ngcontent-%COMP%] {  position: relative;  box-sizing: border-box;  height: 25px;  border: 1px solid #000000;  border-bottom: none;}.dp-nav-date-btn[_ngcontent-%COMP%] {  box-sizing: border-box;  height: 25px;  border: 1px solid #000000;  border-bottom: none;}.dp-calendar-nav-left[_ngcontent-%COMP%], .dp-calendar-nav-right[_ngcontent-%COMP%] {  position: absolute;  top: 50%;  transform: translateY(-50%);  cursor: pointer;}.dp-calendar-nav-left[_ngcontent-%COMP%] {  left: 0;}.dp-calendar-nav-right[_ngcontent-%COMP%] {  right: 0;}.dp-nav-header[_ngcontent-%COMP%] {  position: absolute;  top: 50%;  left: 50%;  transform: translate(-50%, -50%);  font-size: 13px;}.dp-nav-header-btn[_ngcontent-%COMP%] {  cursor: pointer;}.dp-material[_nghost-%COMP%]   .dp-calendar-container[_ngcontent-%COMP%] {  background: #FFFFFF;}.dp-material[_nghost-%COMP%]   .dp-calendar-container[_ngcontent-%COMP%]:not(:first-of-type) {  border-left: 1px solid #B0AFAF;}.dp-material[_nghost-%COMP%]   .dp-calendar-nav-container[_ngcontent-%COMP%] {  height: 30px;  border: none;}.dp-material[_nghost-%COMP%]   .dp-calendar-nav-left[_ngcontent-%COMP%], .dp-material[_nghost-%COMP%]   .dp-calendar-nav-right[_ngcontent-%COMP%] {  border: none;  background: #FFFFFF;  outline: none;  font-size: 16px;}.dp-material[_nghost-%COMP%]   .dp-nav-header-btn[_ngcontent-%COMP%] {  height: 20px;  width: 80px;  border: none;  background: #FFFFFF;  outline: none;}.dp-material[_nghost-%COMP%]   .dp-nav-header-btn[_ngcontent-%COMP%]:hover {  background: rgba(0, 0, 0, 0.05);}.dp-material[_nghost-%COMP%]   .dp-nav-header-btn[_ngcontent-%COMP%]:active {  background: rgba(0, 0, 0, 0.1);}.dp-material[_nghost-%COMP%]     dp-month-calendar .dp-calendar-weekday, .dp-material[_nghost-%COMP%]     dp-day-calendar .dp-calendar-weekday {  height: 25px;  width: 30px;  line-height: 25px;  background: #E0E0E0;  border: none;}.dp-material[_nghost-%COMP%]     dp-month-calendar .dp-calendar-wrapper, .dp-material[_nghost-%COMP%]     dp-day-calendar .dp-calendar-wrapper {  border: none;}.dp-material[_nghost-%COMP%]     dp-month-calendar .dp-calendar-month, .dp-material[_nghost-%COMP%]     dp-day-calendar .dp-calendar-month, .dp-material[_nghost-%COMP%]     dp-month-calendar .dp-calendar-day, .dp-material[_nghost-%COMP%]     dp-day-calendar .dp-calendar-day {  box-sizing: border-box;  background: #FFFFFF;  border-radius: 50%;  border: none;  outline: none;}.dp-material[_nghost-%COMP%]     dp-month-calendar .dp-calendar-month:hover, .dp-material[_nghost-%COMP%]     dp-day-calendar .dp-calendar-month:hover, .dp-material[_nghost-%COMP%]     dp-month-calendar .dp-calendar-day:hover, .dp-material[_nghost-%COMP%]     dp-day-calendar .dp-calendar-day:hover {  background: #E0E0E0;}.dp-material[_nghost-%COMP%]     dp-month-calendar .dp-selected, .dp-material[_nghost-%COMP%]     dp-day-calendar .dp-selected {  background: #106CC8;  color: #FFFFFF;}.dp-material[_nghost-%COMP%]     dp-month-calendar .dp-selected:hover, .dp-material[_nghost-%COMP%]     dp-day-calendar .dp-selected:hover {  background: #106CC8;}.dp-material[_nghost-%COMP%]     dp-month-calendar .dp-current-day, .dp-material[_nghost-%COMP%]     dp-day-calendar .dp-current-day {  border: 1px solid #106CC8;}.dp-material[_nghost-%COMP%]     dp-month-calendar .dp-current-month {  border: 1px solid #106CC8;}'];
const nodeDebugInfos_CalendarComponent2:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_CalendarComponent2 extends import2.DebugAppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_CalendarComponent2,renderType_CalendarComponent,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CalendarComponent2,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'button',new import3.InlineArray2(2,'class','dp-calendar-nav-left'),this.debug(0,0,210));
    this._text_1 = this.renderer.createText(this._el_0,'  <     ',this.debug(1,0,418));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,285);
    const currVal_2:any = this.parentView.parentView.context.isLeftNavDisabled(this.parentView.context.$implicit.month);
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementProperty(this._el_0,'disabled',currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,210);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.moveCalendars(this.parentView.parentView.context.calendars[0].month,(this.parentView.parentView.context.showMonthCalendar? (0 - 12): (0 - 1)))) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
const nodeDebugInfos_CalendarComponent3:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_CalendarComponent3 extends import2.DebugAppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_CalendarComponent3,renderType_CalendarComponent,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CalendarComponent3,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'class','dp-nav-header'),this.debug(0,0,443));
    this._text_1 = this.renderer.createText(this._el_0,'',this.debug(1,0,511));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(1,0,511);
    const currVal_2:any = import3.inlineInterpolate(1,'       ',this.parentView.parentView.context.getMonthToDisplay(this.parentView.context.$implicit.month),'     ');
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
const nodeDebugInfos_CalendarComponent4:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_CalendarComponent4 extends import2.DebugAppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_CalendarComponent4,renderType_CalendarComponent,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CalendarComponent4,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'button',new import3.InlineArray2(2,'class','dp-nav-header dp-nav-header-btn'),this.debug(0,0,572));
    this._text_1 = this.renderer.createText(this._el_0,'',this.debug(1,0,732));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(1,0,732);
    const currVal_2:any = import3.inlineInterpolate(1,'       ',(this.parentView.parentView.context.showMonthCalendar? this.parentView.parentView.context.getYearToDisplay(this.parentView.context.$implicit.month): this.parentView.parentView.context.getMonthToDisplay(this.parentView.context.$implicit.month)),'     ');
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,572);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>(this.parentView.parentView.context.showMonthCalendar = !this.parentView.parentView.context.showMonthCalendar)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
const nodeDebugInfos_CalendarComponent5:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_CalendarComponent5 extends import2.DebugAppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_CalendarComponent5,renderType_CalendarComponent,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CalendarComponent5,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'button',new import3.InlineArray2(2,'class','dp-calendar-nav-right'),this.debug(0,0,850));
    this._text_1 = this.renderer.createText(this._el_0,'  >     ',this.debug(1,0,1056));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,924);
    const currVal_2:any = this.parentView.parentView.context.isRightNavDisabled(this.parentView.context.$implicit.month);
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementProperty(this._el_0,'disabled',currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,850);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.moveCalendars(this.parentView.parentView.context.calendars[0].month,(this.parentView.parentView.context.showMonthCalendar? 12: 1))) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
const nodeDebugInfos_CalendarComponent6:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo([
    import14.CalendarMonthService,
    import15.DayCalendarComponent
  ]
  ,import15.DayCalendarComponent,{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_CalendarComponent6 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import15.DayCalendarComponent>;
  _CalendarMonthService_0_3:import14.CalendarMonthService;
  _DayCalendarComponent_0_4:import16.Wrapper_DayCalendarComponent;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_CalendarComponent6,renderType_CalendarComponent,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CalendarComponent6,declaredViewContainer);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'dp-day-calendar',import3.EMPTY_INLINE_ARRAY,this.debug(0,0,1088));
    this.compView_0 = new import16.View_DayCalendarComponent0(this.viewUtils,this,0,this._el_0);
    this._CalendarMonthService_0_3 = new import14.CalendarMonthService(this.parentView.parentView.injectorGet(import11.UtilsService,this.parentView.parentIndex));
    this._DayCalendarComponent_0_4 = new import16.Wrapper_DayCalendarComponent(this._CalendarMonthService_0_3);
    this._text_1 = this.renderer.createText((null as any),'   ',this.debug(1,0,1335));
    this.compView_0.create(this._DayCalendarComponent_0_4.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'dayContextMenu',(null as any),'dayClick',(null as any)),this.eventHandler(this.handleEvent_0));
    this._DayCalendarComponent_0_4.subscribe(this,this.eventHandler(this.handleEvent_0),true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.CalendarMonthService) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._CalendarMonthService_0_3; }
    if (((token === import15.DayCalendarComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._DayCalendarComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,1139);
    const currVal_0_0_0:any = this.parentView.context.$implicit;
    this._DayCalendarComponent_0_4.check_config(currVal_0_0_0,throwOnChange,false);
    this.debug(0,0,1111);
    const currVal_0_0_1:any = this.parentView.parentView.context.selected;
    this._DayCalendarComponent_0_4.check_selected(currVal_0_0_1,throwOnChange,false);
    this._DayCalendarComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._DayCalendarComponent_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,1088);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'dayContextMenu')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.dayContextMenu.emit($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'dayClick')) {
      const pd_sub_1:any = ((<any>this.parentView.parentView.context.daySelected($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
const nodeDebugInfos_CalendarComponent7:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo([
    import17.MonthCalendarService,
    import18.MonthCalendarComponent
  ]
  ,import18.MonthCalendarComponent,{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_CalendarComponent7 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import18.MonthCalendarComponent>;
  _MonthCalendarService_0_3:import17.MonthCalendarService;
  _MonthCalendarComponent_0_4:import19.Wrapper_MonthCalendarComponent;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_CalendarComponent7,renderType_CalendarComponent,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CalendarComponent7,declaredViewContainer);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'dp-month-calendar',import3.EMPTY_INLINE_ARRAY,this.debug(0,0,1360));
    this.compView_0 = new import19.View_MonthCalendarComponent0(this.viewUtils,this,0,this._el_0);
    this._MonthCalendarService_0_3 = new import17.MonthCalendarService(this.parentView.parentView.injectorGet(import11.UtilsService,this.parentView.parentIndex));
    this._MonthCalendarComponent_0_4 = new import19.Wrapper_MonthCalendarComponent(this._MonthCalendarService_0_3);
    this._text_1 = this.renderer.createText((null as any),'   ',this.debug(1,0,1575));
    this.compView_0.create(this._MonthCalendarComponent_0_4.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'monthClick',(null as any)),this.eventHandler(this.handleEvent_0));
    this._MonthCalendarComponent_0_4.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.MonthCalendarService) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._MonthCalendarService_0_3; }
    if (((token === import18.MonthCalendarComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._MonthCalendarComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,1444);
    const currVal_0_0_0:any = this.parentView.context.$implicit;
    this._MonthCalendarComponent_0_4.check_config(currVal_0_0_0,throwOnChange,false);
    this.debug(0,0,1485);
    const currVal_0_0_1:any = this.parentView.parentView.context.selected[0];
    this._MonthCalendarComponent_0_4.check_selected(currVal_0_0_1,throwOnChange,false);
    this._MonthCalendarComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MonthCalendarComponent_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,1360);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'monthClick')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.monthSelected(this.parentView.context.index,$event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
const nodeDebugInfos_CalendarComponent1:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import20.TemplateRef,
    import21.NgIf
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import20.TemplateRef,
    import21.NgIf
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import20.TemplateRef,
    import21.NgIf
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import20.TemplateRef,
    import21.NgIf
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import20.TemplateRef,
    import21.NgIf
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo([
    import20.TemplateRef,
    import21.NgIf
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_CalendarComponent1 extends import2.DebugAppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import13.ViewContainer;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import22.Wrapper_NgIf;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _vc_6:import13.ViewContainer;
  _TemplateRef_6_5:any;
  _NgIf_6_6:import22.Wrapper_NgIf;
  _text_7:any;
  _anchor_8:any;
  /*private*/ _vc_8:import13.ViewContainer;
  _TemplateRef_8_5:any;
  _NgIf_8_6:import22.Wrapper_NgIf;
  _text_9:any;
  _anchor_10:any;
  /*private*/ _vc_10:import13.ViewContainer;
  _TemplateRef_10_5:any;
  _NgIf_10_6:import22.Wrapper_NgIf;
  _text_11:any;
  _text_12:any;
  _anchor_13:any;
  /*private*/ _vc_13:import13.ViewContainer;
  _TemplateRef_13_5:any;
  _NgIf_13_6:import22.Wrapper_NgIf;
  _text_14:any;
  _anchor_15:any;
  /*private*/ _vc_15:import13.ViewContainer;
  _TemplateRef_15_5:any;
  _NgIf_15_6:import22.Wrapper_NgIf;
  _text_16:any;
  /*private*/ _expr_35:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_CalendarComponent1,renderType_CalendarComponent,import8.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CalendarComponent1,declaredViewContainer);
    this._expr_35 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,this.debug(0,0,0));
    this._text_1 = this.renderer.createText(this._el_0,'   ',this.debug(1,0,163));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','dp-calendar-nav-container'),this.debug(2,0,166));
    this._text_3 = this.renderer.createText(this._el_2,'     ',this.debug(3,0,205));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_2,this.debug(4,0,210));
    this._vc_4 = new import13.ViewContainer(4,2,this,this._anchor_4);
    this._TemplateRef_4_5 = new import20.TemplateRef_(this,4,this._anchor_4);
    this._NgIf_4_6 = new import22.Wrapper_NgIf(this._vc_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText(this._el_2,'     ',this.debug(5,0,438));
    this._anchor_6 = this.renderer.createTemplateAnchor(this._el_2,this.debug(6,0,443));
    this._vc_6 = new import13.ViewContainer(6,2,this,this._anchor_6);
    this._TemplateRef_6_5 = new import20.TemplateRef_(this,6,this._anchor_6);
    this._NgIf_6_6 = new import22.Wrapper_NgIf(this._vc_6.vcRef,this._TemplateRef_6_5);
    this._text_7 = this.renderer.createText(this._el_2,'     ',this.debug(7,0,567));
    this._anchor_8 = this.renderer.createTemplateAnchor(this._el_2,this.debug(8,0,572));
    this._vc_8 = new import13.ViewContainer(8,2,this,this._anchor_8);
    this._TemplateRef_8_5 = new import20.TemplateRef_(this,8,this._anchor_8);
    this._NgIf_8_6 = new import22.Wrapper_NgIf(this._vc_8.vcRef,this._TemplateRef_8_5);
    this._text_9 = this.renderer.createText(this._el_2,'     ',this.debug(9,0,845));
    this._anchor_10 = this.renderer.createTemplateAnchor(this._el_2,this.debug(10,0,850));
    this._vc_10 = new import13.ViewContainer(10,2,this,this._anchor_10);
    this._TemplateRef_10_5 = new import20.TemplateRef_(this,10,this._anchor_10);
    this._NgIf_10_6 = new import22.Wrapper_NgIf(this._vc_10.vcRef,this._TemplateRef_10_5);
    this._text_11 = this.renderer.createText(this._el_2,'   ',this.debug(11,0,1076));
    this._text_12 = this.renderer.createText(this._el_0,'   ',this.debug(12,0,1085));
    this._anchor_13 = this.renderer.createTemplateAnchor(this._el_0,this.debug(13,0,1088));
    this._vc_13 = new import13.ViewContainer(13,0,this,this._anchor_13);
    this._TemplateRef_13_5 = new import20.TemplateRef_(this,13,this._anchor_13);
    this._NgIf_13_6 = new import22.Wrapper_NgIf(this._vc_13.vcRef,this._TemplateRef_13_5);
    this._text_14 = this.renderer.createText(this._el_0,'    ',this.debug(14,0,1356));
    this._anchor_15 = this.renderer.createTemplateAnchor(this._el_0,this.debug(15,0,1360));
    this._vc_15 = new import13.ViewContainer(15,0,this,this._anchor_15);
    this._TemplateRef_15_5 = new import20.TemplateRef_(this,15,this._anchor_15);
    this._NgIf_15_6 = new import22.Wrapper_NgIf(this._vc_15.vcRef,this._TemplateRef_15_5);
    this._text_16 = this.renderer.createText(this._el_0,' ',this.debug(16,0,1598));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._anchor_4,
      this._text_5,
      this._anchor_6,
      this._text_7,
      this._anchor_8,
      this._text_9,
      this._anchor_10,
      this._text_11,
      this._text_12,
      this._anchor_13,
      this._text_14,
      this._anchor_15,
      this._text_16
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import21.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    if (((token === import20.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import21.NgIf) && (6 === requestNodeIndex))) { return this._NgIf_6_6.context; }
    if (((token === import20.TemplateRef) && (8 === requestNodeIndex))) { return this._TemplateRef_8_5; }
    if (((token === import21.NgIf) && (8 === requestNodeIndex))) { return this._NgIf_8_6.context; }
    if (((token === import20.TemplateRef) && (10 === requestNodeIndex))) { return this._TemplateRef_10_5; }
    if (((token === import21.NgIf) && (10 === requestNodeIndex))) { return this._NgIf_10_6.context; }
    if (((token === import20.TemplateRef) && (13 === requestNodeIndex))) { return this._TemplateRef_13_5; }
    if (((token === import21.NgIf) && (13 === requestNodeIndex))) { return this._NgIf_13_6.context; }
    if (((token === import20.TemplateRef) && (15 === requestNodeIndex))) { return this._TemplateRef_15_5; }
    if (((token === import21.NgIf) && (15 === requestNodeIndex))) { return this._NgIf_15_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(4,0,259);
    const currVal_4_0_0:any = this.context.first;
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    this.debug(6,0,471);
    const currVal_6_0_0:boolean = !this.parentView.context.shouldShowMonthSelector(this.context.index);
    this._NgIf_6_6.check_ngIf(currVal_6_0_0,throwOnChange,false);
    this._NgIf_6_6.ngDoCheck(this,this._anchor_6,throwOnChange);
    this.debug(8,0,632);
    const currVal_8_0_0:any = this.parentView.context.shouldShowMonthSelector(this.context.index);
    this._NgIf_8_6.check_ngIf(currVal_8_0_0,throwOnChange,false);
    this._NgIf_8_6.ngDoCheck(this,this._anchor_8,throwOnChange);
    this.debug(10,0,900);
    const currVal_10_0_0:any = this.context.last;
    this._NgIf_10_6.check_ngIf(currVal_10_0_0,throwOnChange,false);
    this._NgIf_10_6.ngDoCheck(this,this._anchor_10,throwOnChange);
    this.debug(13,0,1257);
    const currVal_13_0_0:boolean = (!this.parentView.context.showMonthCalendar || ((this.parentView.context.config.calendarsAmount > 2) && !(this.context.first || this.context.last)));
    this._NgIf_13_6.check_ngIf(currVal_13_0_0,throwOnChange,false);
    this._NgIf_13_6.ngDoCheck(this,this._anchor_13,throwOnChange);
    this.debug(15,0,1379);
    const currVal_15_0_0:any = (this.parentView.context.showMonthCalendar && (this.context.first || this.context.last));
    this._NgIf_15_6.check_ngIf(currVal_15_0_0,throwOnChange,false);
    this._NgIf_15_6.ngDoCheck(this,this._anchor_15,throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
    this._vc_6.detectChangesInNestedViews(throwOnChange);
    this._vc_8.detectChangesInNestedViews(throwOnChange);
    this._vc_10.detectChangesInNestedViews(throwOnChange);
    this._vc_13.detectChangesInNestedViews(throwOnChange);
    this._vc_15.detectChangesInNestedViews(throwOnChange);
    this.debug(0,0,5);
    const currVal_35:any = import3.inlineInterpolate(1,'dp-calendar-container ',this.parentView.context.theme,'');
    if (import3.checkBinding(throwOnChange,this._expr_35,currVal_35)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_35);
      this._expr_35 = currVal_35;
    }
  }
  destroyInternal():void {
    this._vc_4.destroyNestedViews();
    this._vc_6.destroyNestedViews();
    this._vc_8.destroyNestedViews();
    this._vc_10.destroyNestedViews();
    this._vc_13.destroyNestedViews();
    this._vc_15.destroyNestedViews();
    this.debug(4,0,210);
    this.debug(6,0,443);
    this.debug(8,0,572);
    this.debug(10,0,850);
    this.debug(13,0,1088);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 4)) { return new View_CalendarComponent2(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    if ((nodeIndex == 6)) { return new View_CalendarComponent3(this.viewUtils,this,6,this._anchor_6,this._vc_6); }
    if ((nodeIndex == 8)) { return new View_CalendarComponent4(this.viewUtils,this,8,this._anchor_8,this._vc_8); }
    if ((nodeIndex == 10)) { return new View_CalendarComponent5(this.viewUtils,this,10,this._anchor_10,this._vc_10); }
    if ((nodeIndex == 13)) { return new View_CalendarComponent6(this.viewUtils,this,13,this._anchor_13,this._vc_13); }
    if ((nodeIndex == 15)) { return new View_CalendarComponent7(this.viewUtils,this,15,this._anchor_15,this._vc_15); }
    return (null as any);
  }
}
const nodeDebugInfos_CalendarComponent0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo([
    import20.TemplateRef,
    import23.NgFor
  ]
  ,(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_CalendarComponent:import6.RenderComponentType = import3.createRenderComponentType('/Users/jonoforbes/Developer/Ether/ether-app/node_modules/ng2-date-picker/dp-calendar/dp-calendar.component.d.ts class CalendarComponent - inline template',0,import7.ViewEncapsulation.Emulated,styles_CalendarComponent,{});
export class View_CalendarComponent0 extends import2.DebugAppView<import0.CalendarComponent> {
  _anchor_0:any;
  /*private*/ _vc_0:import13.ViewContainer;
  _TemplateRef_0_5:any;
  _NgFor_0_6:import24.Wrapper_NgFor;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CalendarComponent0,renderType_CalendarComponent,import8.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_CalendarComponent0);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,this.debug(0,0,0));
    this._vc_0 = new import13.ViewContainer(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import20.TemplateRef_(this,0,this._anchor_0);
    this._NgFor_0_6 = new import24.Wrapper_NgFor(this._vc_0.vcRef,this._TemplateRef_0_5,this.parentView.injectorGet(import25.IterableDiffers,this.parentIndex),this.ref);
    this._text_1 = this.renderer.createText(parentRenderNode,' ',this.debug(1,0,1605));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._anchor_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import23.NgFor) && (0 === requestNodeIndex))) { return this._NgFor_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,50);
    const currVal_0_0_0:any = this.context.calendars;
    this._NgFor_0_6.check_ngForOf(currVal_0_0_0,throwOnChange,false);
    this._NgFor_0_6.ngDoCheck(this,this._anchor_0,throwOnChange);
    this._vc_0.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 0)) { return new View_CalendarComponent1(this.viewUtils,this,0,this._anchor_0,this._vc_0); }
    return (null as any);
  }
}