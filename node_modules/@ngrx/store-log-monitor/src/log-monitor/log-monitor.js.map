{"version":3,"file":"log-monitor.js","sourceRoot":"","sources":["../../../src/log-monitor/log-monitor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input  } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operator/map';\nimport { StoreDevtools } from '@ngrx/store-devtools';\nimport { select } from '@ngrx/core/operator/select';\nimport { LogEntryItem } from './log-entry-item';\n\n\n\nexport class LogMonitorComponent {\n   expandEntries: boolean = true;\n\n  public items$: Observable<LogEntryItem[]>;\n  public canRevert$: Observable<boolean>;\n  public canSweep$: Observable<boolean>;\n  public canCommit$: Observable<boolean>;\n\n  constructor(private devtools: StoreDevtools) {\n    this.canRevert$ = select.call(devtools.liftedState, s => !(s.computedStates.length > 1 ));\n    this.canSweep$ = select.call(devtools.liftedState, s => !(s.skippedActionIds.length > 0));\n    this.canCommit$ = select.call(devtools.liftedState, s => !(s.computedStates.length > 1));\n\n    this.items$ = map.call(devtools.liftedState, ({ actionsById, skippedActionIds, stagedActionIds, computedStates }) => {\n        const actions = [];\n\n        for (let i = 0; i < stagedActionIds.length; i++) {\n          const actionId = stagedActionIds[i];\n          const action = actionsById[actionId].action;\n          const { state, error } = computedStates[i];\n          let previousState;\n          if (i > 0) {\n            previousState = computedStates[i - 1].state;\n          }\n\n          actions.push({\n            key: actionId,\n            collapsed: skippedActionIds.indexOf(actionId) > -1,\n            action,\n            actionId,\n            state,\n            previousState,\n            error\n          });\n        }\n\n        return actions;\n      });\n  }\n\n  handleToggle(id: number) {\n    this.devtools.toggleAction(id);\n  }\n\n  handleReset() {\n    this.devtools.reset();\n  }\n\n  handleRollback() {\n    this.devtools.rollback();\n  }\n\n  handleSweep() {\n    this.devtools.sweep();\n  }\n\n  handleCommit() {\n    this.devtools.commit();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'log-monitor',\n  styles: [`\n    :host {\n      display: block;\n      background-color: #2A2F3A;\n      font-family: 'monaco', 'Consolas', 'Lucida Console', monospace;\n      position: relative;\n      overflow-y: hidden;\n      width: 100%;\n      height: 100%;\n      min-width: 300px;\n      direction: ltr;\n    }\n\n    .button-bar {\n      text-align: center;\n      border-bottom-width: 1px;\n      border-bottom-style: solid;\n      border-color: transparent;\n      z-index: 1;\n      display: flex;\n      flex-direction: row;\n      padding: 0 4px;\n    }\n\n    .elements {\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 38px;\n      bottom: 0;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n  `],\n  template: `\n    <div class=\"button-bar\">\n      <log-monitor-button (action)=\"handleReset()\">\n        Reset\n      </log-monitor-button>\n\n      <log-monitor-button (action)=\"handleRollback()\">\n        Revert\n      </log-monitor-button>\n\n      <log-monitor-button (action)=\"handleSweep()\" [disabled]=\"canSweep$ | async\">\n        Sweep\n      </log-monitor-button>\n\n      <log-monitor-button (action)=\"handleCommit()\" [disabled]=\"canCommit$ | async\">\n        Commit\n      </log-monitor-button>\n    </div>\n    <div class=\"elements\">\n      <log-monitor-entry\n        *ngFor=\"let item of (items$ | async); let i = index\"\n        [item]=\"item\"\n        [disabled]=\"i === 0\"\n        [expandEntries]=\"expandEntries\"\n        (toggle)=\"handleToggle($event.id)\">\n      </log-monitor-entry>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: StoreDevtools, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'expandEntries': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}