{"version":3,"file":"reducer.js","sourceRoot":"","sources":["../../../src/dock-monitor/reducer.ts"],"names":[],"mappings":"OAAO,EAAE,eAAe,EAAiB,MAAM,aAAa;OACrD,EAAE,WAAW,EAAE,MAAM,WAAW;AAGvC,OAAO,IAAM,SAAS,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AAS5D,+BAA+B,QAAwB;IAAxB,wBAAwB,GAAxB,aAAwB;IACrD,IAAM,OAAO,GAAc,MAAM,CAAC,MAAM,CAAC;QACvC,QAAQ,EAAE,OAAO;QACjB,OAAO,EAAE,IAAI;QACb,IAAI,EAAE,GAAG;KACV,EAAE,QAAQ,CAAC,CAAC;IAEb,kBAAkB,KAAuC,EAAE,MAAM;QAA/C,qBAAuC,GAAvC,QAAuB,OAAO,CAAC,QAAQ;QACvD,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,WAAW,CAAC,eAAe,CAAC;YAClD,SAAS,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;YAC5D,KAAK,CAAC;IACV,CAAC;IAED,cAAc,KAA4B,EAAE,MAAM;QAApC,qBAA4B,GAA5B,QAAgB,OAAO,CAAC,IAAI;QACxC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,WAAW,CAAC,WAAW,CAAC;YAC9C,MAAM,CAAC,IAAI;YACX,KAAK,CAAC;IACV,CAAC;IAED,iBAAiB,KAAgC,EAAE,MAAM;QAAxC,qBAAgC,GAAhC,QAAiB,OAAO,CAAC,OAAO;QAC/C,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,WAAW,CAAC,iBAAiB,CAAC;YACpD,CAAC,KAAK;YACN,KAAK,CAAC;IACV,CAAC;IAED,MAAM,CAAC,eAAe,CAAC;QACrB,kBAAQ;QACR,gBAAO;QACP,UAAI;KACL,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { combineReducers, ActionReducer } from '@ngrx/store';\nimport { DockActions } from './actions';\n\n\nexport const POSITIONS = ['left', 'top', 'right', 'bottom'];\nexport type PositionsType = 'left' | 'top' | 'right' | 'bottom';\n\nexport interface DockState {\n  position?: PositionsType;\n  visible?: boolean;\n  size?: number;\n}\n\nexport function useDockMonitor(_options: DockState = {}): ActionReducer<DockState> {\n  const options: DockState = Object.assign({\n    position: 'right',\n    visible: true,\n    size: 0.3\n  }, _options);\n\n  function position(state: PositionsType = options.position, action) {\n    return (action.type === DockActions.CHANGE_POSITION) ?\n      POSITIONS[(POSITIONS.indexOf(state) + 1) % POSITIONS.length] :\n      state;\n  }\n\n  function size(state: number = options.size, action) {\n    return (action.type === DockActions.CHANGE_SIZE) ?\n      action.size :\n      state;\n  }\n\n  function visible(state: boolean = options.visible, action) {\n    return (action.type === DockActions.TOGGLE_VISIBILITY) ?\n      !state :\n      state;\n  }\n\n  return combineReducers({\n    position,\n    visible,\n    size\n  });\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}