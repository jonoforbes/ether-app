{"version":3,"file":"dock-monitor.js","sourceRoot":"","sources":["../../../src/dock-monitor/dock-monitor.ts"],"names":[],"mappings":"OAAO,EAAE,SAAS,EAAE,uBAAuB,EAAE,KAAK,EAAa,YAAY,EAAE,MAAM,eAAe;OAC3F,EAAE,MAAM,EAAE,MAAM,4BAA4B;OAC5C,EAAE,aAAa,EAAE,MAAM,sBAAsB;OAI7C,EAAE,KAAK,EAAE,MAAM,uBAAuB;OACtC,EAAE,GAAG,EAAE,MAAM,mBAAmB;OAEhC,EAAE,WAAW,EAAE,MAAM,WAAW;AAIvC;IAYE,8BAAY,KAAoB,EAAE,OAAoB;QACpD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,YAAY,EAAd,CAAc,CAAC,CAAC;QAClE,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,CAAY,IAAK,OAAA,CAAC,CAAC,OAAO,EAAT,CAAS,CAAC,CAAC;QACtE,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,CAAY,IAAK,OAAA,CAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC;QACxE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,CAAY,IAAK,OAAA,CAAC,CAAC,IAAI,EAAN,CAAM,CAAC,CAAC;QAEhE,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,IAAI,CAAC,eAAe,GAAG,IAAI,YAAY,EAAE,CAAC;QAE1C,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAC9B,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,gBAAgB,EAAE,EAA1B,CAA0B,CAAC,EACxD,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,cAAM,OAAA,OAAO,CAAC,cAAc,EAAE,EAAxB,CAAwB,CAAC,CAC/D,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAED,0CAAW,GAAX;QACE,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;IACzC,CAAC;IACI,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,cAAc;oBACxB,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,QAAQ,EAAE,6XAOT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,mCAAc,GAA6D;QAClF,EAAC,IAAI,EAAE,aAAa,GAAG;QACvB,EAAC,IAAI,EAAE,WAAW,GAAG;KACpB,CAAC;IACK,mCAAc,GAA2C;QAChE,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACnC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KACpC,CAAC;IACF,2BAAC;AAAD,CAAC,AArDD,IAqDC","sourcesContent":["import { Component, ChangeDetectionStrategy, Input, OnDestroy, EventEmitter } from '@angular/core';\nimport { select } from '@ngrx/core/operator/select';\nimport { StoreDevtools } from '@ngrx/store-devtools';\nimport { Action } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { merge } from 'rxjs/observable/merge';\nimport { map } from 'rxjs/operator/map';\nimport { DockState, PositionsType } from './reducer';\nimport { DockActions } from './actions';\n\n\n\nexport class DockMonitorComponent implements OnDestroy {\n   toggleCommand: string;\n   positionCommand: string;\n\n  state$: Observable<DockState>;\n  visible$: Observable<boolean>;\n  position$: Observable<PositionsType>;\n  size$: Observable<number>;\n  toggle$: EventEmitter<any>;\n  changePosition$: EventEmitter<any>;\n  actionsSubscription: Subscription;\n\n  constructor(tools: StoreDevtools, actions: DockActions) {\n    this.state$ = select.call(tools.liftedState, s => s.monitorState);\n    this.visible$ = select.call(this.state$, (s: DockState) => s.visible);\n    this.position$ = select.call(this.state$, (s: DockState) => s.position);\n    this.size$ = select.call(this.state$, (s: DockState) => s.size);\n\n    this.toggle$ = new EventEmitter();\n    this.changePosition$ = new EventEmitter();\n\n    this.actionsSubscription = merge(\n      map.call(this.toggle$, () => actions.toggleVisibility()),\n      map.call(this.changePosition$, () => actions.changePosition())\n    ).subscribe(tools);\n  }\n\n  ngOnDestroy() {\n    this.actionsSubscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'dock-monitor',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ngrx-commander [shortcut]=\"toggleCommand\" (command)=\"toggle$.emit($event)\"></ngrx-commander>\n    <ngrx-commander [shortcut]=\"positionCommand\" (command)=\"changePosition$.emit($event)\"></ngrx-commander>\n\n    <ngrx-dock [visible]=\"visible$ | async\" [position]=\"position$ | async\" [size]=\"size$ | async\">\n      <ng-content></ng-content>\n    </ngrx-dock>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: StoreDevtools, },\n{type: DockActions, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'toggleCommand': [{ type: Input },],\n'positionCommand': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}